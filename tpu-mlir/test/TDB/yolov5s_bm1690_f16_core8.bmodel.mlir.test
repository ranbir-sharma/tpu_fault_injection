RUN: bmodel_dis.py %p/bmodel/yolov5s_bm1690_f16_core8.bmodel | FileCheck %s

CHECK:  module attributes {chip = "BM1690", version = 2.2+v1.6.364-gef6778402-20240312, addr_mode = 0} {
CHECK:    func.func @yolov5s(%G2.0x0: memref<1x3x640x640xf32, strides: [1228800, 409600, 640, 1]>) -> (memref<1x3x80x80x85xf32, strides: [1632000, 544000, 6800, 85, 1]>, memref<1x3x40x40x85xf32, strides: [408000, 136000, 3400, 85, 1]>, memref<1x3x20x20x85xf32, strides: [102000, 34000, 1700, 85, 1]>) ({
CHECK:      ^bb0(%G2.0x0: memref<1x3x640x640xf32, strides: [1228800, 409600, 640, 1]>)    //  run_mode=TPU_STATIC
CHECK:        %D1C0, %msg48 = "@core_0"(%D0C0) {
CHECK:          %B1C0, %msg48 = "system.send_msg"(%D0C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C0, %msg48 = "dma.sys.sys_send"(%B1C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C1, %msg48 = "@core_1"(%D0C1) {
CHECK:          %B1C1, %msg48 = "system.send_msg"(%D0C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C1, %msg48 = "dma.sys.sys_send"(%B1C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C2, %msg48 = "@core_2"(%D0C2) {
CHECK:          %B1C2, %msg48 = "system.send_msg"(%D0C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C2, %msg48 = "dma.sys.sys_send"(%B1C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C3, %msg48 = "@core_3"(%D0C3) {
CHECK:          %B1C3, %msg48 = "system.send_msg"(%D0C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C3, %msg48 = "dma.sys.sys_send"(%B1C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C4, %msg48 = "@core_4"(%D0C4) {
CHECK:          %B1C4, %msg48 = "system.send_msg"(%D0C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C4, %msg48 = "dma.sys.sys_send"(%B1C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C5, %msg48 = "@core_5"(%D0C5) {
CHECK:          %B1C5, %msg48 = "system.send_msg"(%D0C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C5, %msg48 = "dma.sys.sys_send"(%B1C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C6, %msg48 = "@core_6"(%D0C6) {
CHECK:          %B1C6, %msg48 = "system.send_msg"(%D0C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C6, %msg48 = "dma.sys.sys_send"(%B1C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D1C7, %msg48 = "@core_7"(%D0C7) {
CHECK:          %B1C7, %msg48 = "system.send_msg"(%D0C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D1C7, %msg48 = "dma.sys.sys_send"(%B1C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D19C0, %msg49 = "@core_0"(%D1C0, %msg48) {
CHECK:          %B2C0 = "system.wait_msg"(%D1C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C0 = "dma.sys.sys_wait"(%B2C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C0 = "dma.tensor"(%G2.0x0, %B2C0) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R10, %B3C0 = "arith.cast"(%R0, %D3C0) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C0 = "dma.tensor"(%G1.0x1000, %B2C0) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C0 = "dma.tensor"(%G1.0x0, %B2C0) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C0 = "dma.tensor"(%G1.0x1f000, %B2C0) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C0 = "dma.tensor"(%G1.0x20000, %B2C0) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C0 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C0) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R14.0x200, %B5C0 = "tsbc.s_bc"(%R0.0x580, %D7C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R13.0x100, %B6C0 = "arith.sub"(%C0.0, %R14.0x2200, %D7C0) {round_mode = 0}: (f16, memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R13.0x100, %B7C0 = "arith.max"(%R13.0x100, %C-45408.0, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, f16, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R13.0x100, %B8C0 = "arith.min"(%R13.0x100, %C45408.0, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, f16, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R12, %B9C0 = "arith.mul"(%R13.0x100, %C1.4423828125, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, f16, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R10, %B10C0 = "arith.cast"(%R12, %D7C0) {round_mode = 3}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R12, %B11C0 = "arith.mul"(%R10, %C0.693359375, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, f16, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R12, %B12C0 = "arith.sub"(%R13.0x100, %R12, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R13.0x100, %B13C0 = "arith.cast"(%R10, %D7C0) {round_mode = 1}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xsi8, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R10, %B14C0 = "arith.min"(%R13.0x100, %C15, %D7C0) {round_mode = 0}: (memref<1x32x26x320xsi8, strides: [8320, 8320, 320, 1]>, si8, none) -> (memref<1x32x26x320xsi8, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R13.0x100, %B15C0 = "arith.max"(%R10, %C-15, %D7C0) {round_mode = 0}: (memref<1x32x26x320xsi8, strides: [8320, 8320, 320, 1]>, si8, none) -> (memref<1x32x26x320xsi8, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R10, %B16C0 = "arith.add_satu"(%R13.0x100, %C15, %C10, %D7C0) {round_mode = 1}: (memref<1x32x26x320xsi8, strides: [8320, 8320, 320, 1]>, si16, ui8, none) -> (memref<1x32x26x320xsi16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R13.0x100, %B17C0 = "sfu.taylor_4x"(%R12, %R14.0x200, %D7C0) : (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R10, %B18C0 = "arith.mul"(%R13.0x100, %R10, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R12, %B19C0 = "arith.add"(%R10, %C1.0, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, f16, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R10, %B20C0 = "arith.div"(%C1.0, %R12, %D7C0) {iter = 3}: (f16, memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R10, %B21C0 = "arith.mul"(%R10, %R14.0x2200, %D7C0) {round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none) -> (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C0 = "dma.tensor"(%G1.0x14000, %B4C0) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C0 = "dma.tensor"(%G1.0x13000, %B4C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D10C0 = "dma.tensor"(%G2.0x1e000, %B4C0) : (memref<1x3x58x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x58x640xf32, strides: [37120, 37120, 640, 1]>, none)
CHECK:          %R12, %B22C0 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D10C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x26x320xf16, strides: [8320, 8320, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x2080, %B23C0 = "tsbc.s_bc"(%R0.0x580, %D10C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0x1040, %B24C0 = "arith.sub"(%C0.0, %R12, %D10C0) {round_mode = 0}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B25C0 = "arith.max"(%R10.0x1040, %C-45408.0, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B26C0 = "arith.min"(%R10.0x1040, %C45408.0, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B27C0 = "arith.mul"(%R10.0x1040, %C1.4423828125, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C0 = "arith.cast"(%R10, %D10C0) {round_mode = 3}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B29C0 = "arith.mul"(%R9.0x400, %C0.693359375, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B30C0 = "arith.sub"(%R10.0x1040, %R10, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B31C0 = "arith.cast"(%R9.0x400, %D10C0) {round_mode = 1}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C0 = "arith.min"(%R10.0x1040, %C15, %D10C0) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R10.0x1040, %B33C0 = "arith.max"(%R9.0x400, %C-15, %D10C0) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C0 = "arith.add_satu"(%R10.0x1040, %C15, %C10, %D10C0) {round_mode = 1}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x64x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B35C0 = "sfu.taylor_4x"(%R10, %R10.0x2080, %D10C0) : (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C0 = "arith.mul"(%R10.0x1040, %R9.0x400, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B37C0 = "arith.add"(%R9.0x400, %C1.0, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C0 = "arith.div"(%C1.0, %R10, %D10C0) {iter = 3}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C0 = "arith.mul"(%R9.0x400, %R12, %D10C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15.0x2580, %D11C0 = "dma.tensor"(%G1.0x1e000, %B22C0) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D12C0 = "dma.tensor"(%G1.0x1d000, %B22C0) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C0 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D12C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x2080, %B41C0 = "tsbc.s_bc"(%R0.0x580, %D12C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x1040, %B42C0 = "arith.sub"(%C0.0, %R10, %D12C0) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B43C0 = "arith.max"(%R12.0x1040, %C-45408.0, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B44C0 = "arith.min"(%R12.0x1040, %C45408.0, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B45C0 = "arith.mul"(%R12.0x1040, %C1.4423828125, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B46C0 = "arith.cast"(%R12, %D12C0) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B47C0 = "arith.mul"(%R11, %C0.693359375, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B48C0 = "arith.sub"(%R12.0x1040, %R12, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B49C0 = "arith.cast"(%R11, %D12C0) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B50C0 = "arith.min"(%R12.0x1040, %C15, %D12C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R12.0x1040, %B51C0 = "arith.max"(%R11, %C-15, %D12C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B52C0 = "arith.add_satu"(%R12.0x1040, %C15, %C10, %D12C0) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B53C0 = "sfu.taylor_4x"(%R12, %R12.0x2080, %D12C0) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B54C0 = "arith.mul"(%R12.0x1040, %R11, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B55C0 = "arith.add"(%R11, %C1.0, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B56C0 = "arith.div"(%C1.0, %R12, %D12C0) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B57C0 = "arith.mul"(%R11, %R10, %D12C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C0 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D12C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x6980000000, %D13C0 = "dma.tensor"(%R9.0x400, %B40C0) : (memref<1x64x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2480, %B59C0 = "tsbc.s_bc"(%R0.0x580, %D13C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1440, %B60C0 = "arith.sub"(%C0.0, %R10.0x1040, %D13C0) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B61C0 = "arith.max"(%R9.0x1440, %C-45408.0, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B62C0 = "arith.min"(%R9.0x1440, %C45408.0, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C0 = "arith.mul"(%R9.0x1440, %C1.4423828125, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B64C0 = "arith.cast"(%R9.0x400, %D13C0) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C0 = "arith.mul"(%R15, %C0.693359375, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C0 = "arith.sub"(%R9.0x1440, %R9.0x400, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B67C0 = "arith.cast"(%R15, %D13C0) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B68C0 = "arith.min"(%R9.0x1440, %C15, %D13C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x1440, %B69C0 = "arith.max"(%R15, %C-15, %D13C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B70C0 = "arith.add_satu"(%R9.0x1440, %C15, %C10, %D13C0) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B71C0 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2480, %D13C0) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B72C0 = "arith.mul"(%R9.0x1440, %R15, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C0 = "arith.add"(%R15, %C1.0, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B74C0 = "arith.div"(%C1.0, %R9.0x400, %D13C0) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B75C0 = "arith.mul"(%R15, %R10.0x1040, %D13C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x6980640000, %D14C0 = "dma.tensor"(%R11, %B58C0) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R10, %B76C0 = "arith.cast"(%R0, %D14C0) {round_mode = 1}: (memref<1x3x58x640xf32, strides: [37120, 37120, 640, 1]>, none) -> (memref<1x3x58x640xf16, strides: [37120, 37120, 640, 1]>, none)
CHECK:          %L30.0x69804b0000, %D15C0 = "dma.tensor"(%R15, %B75C0) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R14.0x2200, %B77C0 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D15C0) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x58x640xf16, strides: [37120, 37120, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R14.0x700, %B78C0 = "tsbc.s_bc"(%R0.0x580, %D15C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R13.0x380, %B79C0 = "arith.sub"(%C0.0, %R14.0x2200, %D15C0) {round_mode = 0}: (f16, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B80C0 = "arith.max"(%R13.0x380, %C-45408.0, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B81C0 = "arith.min"(%R13.0x380, %C45408.0, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B82C0 = "arith.mul"(%R13.0x380, %C1.4423828125, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B83C0 = "arith.cast"(%R12, %D15C0) {round_mode = 3}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B84C0 = "arith.mul"(%R10, %C0.693359375, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B85C0 = "arith.sub"(%R13.0x380, %R12, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B86C0 = "arith.cast"(%R10, %D15C0) {round_mode = 1}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B87C0 = "arith.min"(%R13.0x380, %C15, %D15C0) {round_mode = 0}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si8, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B88C0 = "arith.max"(%R10, %C-15, %D15C0) {round_mode = 0}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si8, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B89C0 = "arith.add_satu"(%R13.0x380, %C15, %C10, %D15C0) {round_mode = 1}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si16, ui8, none) -> (memref<1x32x27x320xsi16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B90C0 = "sfu.taylor_4x"(%R12, %R14.0x700, %D15C0) : (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B91C0 = "arith.mul"(%R13.0x380, %R10, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B92C0 = "arith.add"(%R10, %C1.0, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B93C0 = "arith.div"(%C1.0, %R12, %D15C0) {iter = 3}: (f16, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B94C0 = "arith.mul"(%R10, %R14.0x2200, %D15C0) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B95C0 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D15C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x2080, %B96C0 = "tsbc.s_bc"(%R0.0x580, %D15C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0x1040, %B97C0 = "arith.sub"(%C0.0, %R12, %D15C0) {round_mode = 0}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B98C0 = "arith.max"(%R10.0x1040, %C-45408.0, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B99C0 = "arith.min"(%R10.0x1040, %C45408.0, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B100C0 = "arith.mul"(%R10.0x1040, %C1.4423828125, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B101C0 = "arith.cast"(%R10, %D15C0) {round_mode = 3}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B102C0 = "arith.mul"(%R9.0x400, %C0.693359375, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B103C0 = "arith.sub"(%R10.0x1040, %R10, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B104C0 = "arith.cast"(%R9.0x400, %D15C0) {round_mode = 1}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B105C0 = "arith.min"(%R10.0x1040, %C15, %D15C0) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R10.0x1040, %B106C0 = "arith.max"(%R9.0x400, %C-15, %D15C0) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B107C0 = "arith.add_satu"(%R10.0x1040, %C15, %C10, %D15C0) {round_mode = 1}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x64x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B108C0 = "sfu.taylor_4x"(%R10, %R10.0x2080, %D15C0) : (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B109C0 = "arith.mul"(%R10.0x1040, %R9.0x400, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B110C0 = "arith.add"(%R9.0x400, %C1.0, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B111C0 = "arith.div"(%C1.0, %R10, %D15C0) {iter = 3}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B112C0 = "arith.mul"(%R9.0x400, %R12, %D15C0) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B113C0 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D15C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x2080, %B114C0 = "tsbc.s_bc"(%R0.0x580, %D15C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x1040, %B115C0 = "arith.sub"(%C0.0, %R10, %D15C0) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B116C0 = "arith.max"(%R12.0x1040, %C-45408.0, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B117C0 = "arith.min"(%R12.0x1040, %C45408.0, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B118C0 = "arith.mul"(%R12.0x1040, %C1.4423828125, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B119C0 = "arith.cast"(%R12, %D15C0) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B120C0 = "arith.mul"(%R11, %C0.693359375, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B121C0 = "arith.sub"(%R12.0x1040, %R12, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B122C0 = "arith.cast"(%R11, %D15C0) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B123C0 = "arith.min"(%R12.0x1040, %C15, %D15C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R12.0x1040, %B124C0 = "arith.max"(%R11, %C-15, %D15C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B125C0 = "arith.add_satu"(%R12.0x1040, %C15, %C10, %D15C0) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B126C0 = "sfu.taylor_4x"(%R12, %R12.0x2080, %D15C0) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B127C0 = "arith.mul"(%R12.0x1040, %R11, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B128C0 = "arith.add"(%R11, %C1.0, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B129C0 = "arith.div"(%C1.0, %R12, %D15C0) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B130C0 = "arith.mul"(%R11, %R10, %D15C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B131C0 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D15C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x6980001040, %D16C0 = "dma.tensor"(%R9.0x400, %B113C0) : (memref<1x64x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2480, %B132C0 = "tsbc.s_bc"(%R0.0x580, %D16C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1440, %B133C0 = "arith.sub"(%C0.0, %R10.0x1040, %D16C0) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B134C0 = "arith.max"(%R9.0x1440, %C-45408.0, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B135C0 = "arith.min"(%R9.0x1440, %C45408.0, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B136C0 = "arith.mul"(%R9.0x1440, %C1.4423828125, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B137C0 = "arith.cast"(%R9.0x400, %D16C0) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B138C0 = "arith.mul"(%R15, %C0.693359375, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B139C0 = "arith.sub"(%R9.0x1440, %R9.0x400, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B140C0 = "arith.cast"(%R15, %D16C0) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B141C0 = "arith.min"(%R9.0x1440, %C15, %D16C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x1440, %B142C0 = "arith.max"(%R15, %C-15, %D16C0) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B143C0 = "arith.add_satu"(%R9.0x1440, %C15, %C10, %D16C0) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B144C0 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2480, %D16C0) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B145C0 = "arith.mul"(%R9.0x1440, %R15, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B146C0 = "arith.add"(%R15, %C1.0, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B147C0 = "arith.div"(%C1.0, %R9.0x400, %D16C0) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B148C0 = "arith.mul"(%R15, %R10.0x1040, %D16C0) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x6980641040, %D17C0 = "dma.tensor"(%R11, %B131C0) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804b1040, %D18C0 = "dma.tensor"(%R15, %B148C0) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B149C0, %msg49 = "system.send_msg"(%D18C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D19C0, %msg49 = "dma.sys.sys_send"(%B149C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D19C1, %msg49 = "@core_1"(%D1C1, %msg48) {
CHECK:          %B2C1 = "system.wait_msg"(%D1C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C1 = "dma.sys.sys_wait"(%B2C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C1 = "dma.tensor"(%G2.0x3e800, %B2C1) : (memref<1x3x58x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x58x640xf32, strides: [37120, 37120, 640, 1]>, none)
CHECK:          %R10, %B3C1 = "arith.cast"(%R0, %D3C1) {round_mode = 1}: (memref<1x3x58x640xf32, strides: [37120, 37120, 640, 1]>, none) -> (memref<1x3x58x640xf16, strides: [37120, 37120, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C1 = "dma.tensor"(%G1.0x1000, %B2C1) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C1 = "dma.tensor"(%G1.0x0, %B2C1) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C1 = "dma.tensor"(%G1.0x1f000, %B2C1) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C1 = "dma.tensor"(%G1.0x20000, %B2C1) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C1 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C1) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x58x640xf16, strides: [37120, 37120, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R14.0x700, %B5C1 = "tsbc.s_bc"(%R0.0x580, %D7C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R13.0x380, %B6C1 = "arith.sub"(%C0.0, %R14.0x2200, %D7C1) {round_mode = 0}: (f16, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B7C1 = "arith.max"(%R13.0x380, %C-45408.0, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B8C1 = "arith.min"(%R13.0x380, %C45408.0, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B9C1 = "arith.mul"(%R13.0x380, %C1.4423828125, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B10C1 = "arith.cast"(%R12, %D7C1) {round_mode = 3}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B11C1 = "arith.mul"(%R10, %C0.693359375, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B12C1 = "arith.sub"(%R13.0x380, %R12, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B13C1 = "arith.cast"(%R10, %D7C1) {round_mode = 1}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B14C1 = "arith.min"(%R13.0x380, %C15, %D7C1) {round_mode = 0}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si8, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B15C1 = "arith.max"(%R10, %C-15, %D7C1) {round_mode = 0}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si8, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B16C1 = "arith.add_satu"(%R13.0x380, %C15, %C10, %D7C1) {round_mode = 1}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si16, ui8, none) -> (memref<1x32x27x320xsi16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B17C1 = "sfu.taylor_4x"(%R12, %R14.0x700, %D7C1) : (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B18C1 = "arith.mul"(%R13.0x380, %R10, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B19C1 = "arith.add"(%R10, %C1.0, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B20C1 = "arith.div"(%C1.0, %R12, %D7C1) {iter = 3}: (f16, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B21C1 = "arith.mul"(%R10, %R14.0x2200, %D7C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C1 = "dma.tensor"(%G1.0x14000, %B4C1) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C1 = "dma.tensor"(%G1.0x13000, %B4C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D10C1 = "dma.tensor"(%G2.0x5f000, %B4C1) : (memref<1x3x58x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x58x640xf32, strides: [37120, 37120, 640, 1]>, none)
CHECK:          %R12, %B22C1 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D10C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x2080, %B23C1 = "tsbc.s_bc"(%R0.0x580, %D10C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0x1040, %B24C1 = "arith.sub"(%C0.0, %R12, %D10C1) {round_mode = 0}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B25C1 = "arith.max"(%R10.0x1040, %C-45408.0, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B26C1 = "arith.min"(%R10.0x1040, %C45408.0, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B27C1 = "arith.mul"(%R10.0x1040, %C1.4423828125, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C1 = "arith.cast"(%R10, %D10C1) {round_mode = 3}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B29C1 = "arith.mul"(%R9.0x400, %C0.693359375, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B30C1 = "arith.sub"(%R10.0x1040, %R10, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B31C1 = "arith.cast"(%R9.0x400, %D10C1) {round_mode = 1}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C1 = "arith.min"(%R10.0x1040, %C15, %D10C1) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R10.0x1040, %B33C1 = "arith.max"(%R9.0x400, %C-15, %D10C1) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C1 = "arith.add_satu"(%R10.0x1040, %C15, %C10, %D10C1) {round_mode = 1}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x64x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B35C1 = "sfu.taylor_4x"(%R10, %R10.0x2080, %D10C1) : (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C1 = "arith.mul"(%R10.0x1040, %R9.0x400, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B37C1 = "arith.add"(%R9.0x400, %C1.0, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C1 = "arith.div"(%C1.0, %R10, %D10C1) {iter = 3}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C1 = "arith.mul"(%R9.0x400, %R12, %D10C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15.0x2580, %D11C1 = "dma.tensor"(%G1.0x1e000, %B22C1) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D12C1 = "dma.tensor"(%G1.0x1d000, %B22C1) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C1 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D12C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x2080, %B41C1 = "tsbc.s_bc"(%R0.0x580, %D12C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x1040, %B42C1 = "arith.sub"(%C0.0, %R10, %D12C1) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B43C1 = "arith.max"(%R12.0x1040, %C-45408.0, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B44C1 = "arith.min"(%R12.0x1040, %C45408.0, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B45C1 = "arith.mul"(%R12.0x1040, %C1.4423828125, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B46C1 = "arith.cast"(%R12, %D12C1) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B47C1 = "arith.mul"(%R11, %C0.693359375, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B48C1 = "arith.sub"(%R12.0x1040, %R12, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B49C1 = "arith.cast"(%R11, %D12C1) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B50C1 = "arith.min"(%R12.0x1040, %C15, %D12C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R12.0x1040, %B51C1 = "arith.max"(%R11, %C-15, %D12C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B52C1 = "arith.add_satu"(%R12.0x1040, %C15, %C10, %D12C1) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B53C1 = "sfu.taylor_4x"(%R12, %R12.0x2080, %D12C1) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B54C1 = "arith.mul"(%R12.0x1040, %R11, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B55C1 = "arith.add"(%R11, %C1.0, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B56C1 = "arith.div"(%C1.0, %R12, %D12C1) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B57C1 = "arith.mul"(%R11, %R10, %D12C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C1 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D12C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x6980002080, %D13C1 = "dma.tensor"(%R9.0x400, %B40C1) : (memref<1x64x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2480, %B59C1 = "tsbc.s_bc"(%R0.0x580, %D13C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1440, %B60C1 = "arith.sub"(%C0.0, %R10.0x1040, %D13C1) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B61C1 = "arith.max"(%R9.0x1440, %C-45408.0, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B62C1 = "arith.min"(%R9.0x1440, %C45408.0, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C1 = "arith.mul"(%R9.0x1440, %C1.4423828125, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B64C1 = "arith.cast"(%R9.0x400, %D13C1) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C1 = "arith.mul"(%R15, %C0.693359375, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C1 = "arith.sub"(%R9.0x1440, %R9.0x400, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B67C1 = "arith.cast"(%R15, %D13C1) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B68C1 = "arith.min"(%R9.0x1440, %C15, %D13C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x1440, %B69C1 = "arith.max"(%R15, %C-15, %D13C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B70C1 = "arith.add_satu"(%R9.0x1440, %C15, %C10, %D13C1) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B71C1 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2480, %D13C1) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B72C1 = "arith.mul"(%R9.0x1440, %R15, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C1 = "arith.add"(%R15, %C1.0, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B74C1 = "arith.div"(%C1.0, %R9.0x400, %D13C1) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B75C1 = "arith.mul"(%R15, %R10.0x1040, %D13C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x6980642080, %D14C1 = "dma.tensor"(%R11, %B58C1) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R10, %B76C1 = "arith.cast"(%R0, %D14C1) {round_mode = 1}: (memref<1x3x58x640xf32, strides: [37120, 37120, 640, 1]>, none) -> (memref<1x3x58x640xf16, strides: [37120, 37120, 640, 1]>, none)
CHECK:          %L30.0x69804b2080, %D15C1 = "dma.tensor"(%R15, %B75C1) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R14.0x2200, %B77C1 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D15C1) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x58x640xf16, strides: [37120, 37120, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R14.0x700, %B78C1 = "tsbc.s_bc"(%R0.0x580, %D15C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R13.0x380, %B79C1 = "arith.sub"(%C0.0, %R14.0x2200, %D15C1) {round_mode = 0}: (f16, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B80C1 = "arith.max"(%R13.0x380, %C-45408.0, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B81C1 = "arith.min"(%R13.0x380, %C45408.0, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B82C1 = "arith.mul"(%R13.0x380, %C1.4423828125, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B83C1 = "arith.cast"(%R12, %D15C1) {round_mode = 3}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B84C1 = "arith.mul"(%R10, %C0.693359375, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B85C1 = "arith.sub"(%R13.0x380, %R12, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B86C1 = "arith.cast"(%R10, %D15C1) {round_mode = 1}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B87C1 = "arith.min"(%R13.0x380, %C15, %D15C1) {round_mode = 0}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si8, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B88C1 = "arith.max"(%R10, %C-15, %D15C1) {round_mode = 0}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si8, none) -> (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B89C1 = "arith.add_satu"(%R13.0x380, %C15, %C10, %D15C1) {round_mode = 1}: (memref<1x32x27x320xsi8, strides: [8640, 8640, 320, 1]>, si16, ui8, none) -> (memref<1x32x27x320xsi16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R13.0x380, %B90C1 = "sfu.taylor_4x"(%R12, %R14.0x700, %D15C1) : (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B91C1 = "arith.mul"(%R13.0x380, %R10, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B92C1 = "arith.add"(%R10, %C1.0, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, f16, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B93C1 = "arith.div"(%C1.0, %R12, %D15C1) {iter = 3}: (f16, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R10, %B94C1 = "arith.mul"(%R10, %R14.0x2200, %D15C1) {round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none) -> (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, none)
CHECK:          %R12, %B95C1 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D15C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x27x320xf16, strides: [8640, 8640, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x2080, %B96C1 = "tsbc.s_bc"(%R0.0x580, %D15C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0x1040, %B97C1 = "arith.sub"(%C0.0, %R12, %D15C1) {round_mode = 0}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B98C1 = "arith.max"(%R10.0x1040, %C-45408.0, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B99C1 = "arith.min"(%R10.0x1040, %C45408.0, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B100C1 = "arith.mul"(%R10.0x1040, %C1.4423828125, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B101C1 = "arith.cast"(%R10, %D15C1) {round_mode = 3}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B102C1 = "arith.mul"(%R9.0x400, %C0.693359375, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B103C1 = "arith.sub"(%R10.0x1040, %R10, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B104C1 = "arith.cast"(%R9.0x400, %D15C1) {round_mode = 1}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B105C1 = "arith.min"(%R10.0x1040, %C15, %D15C1) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R10.0x1040, %B106C1 = "arith.max"(%R9.0x400, %C-15, %D15C1) {round_mode = 0}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x400, %B107C1 = "arith.add_satu"(%R10.0x1040, %C15, %C10, %D15C1) {round_mode = 1}: (memref<1x64x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x64x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B108C1 = "sfu.taylor_4x"(%R10, %R10.0x2080, %D15C1) : (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B109C1 = "arith.mul"(%R10.0x1040, %R9.0x400, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B110C1 = "arith.add"(%R9.0x400, %C1.0, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B111C1 = "arith.div"(%C1.0, %R10, %D15C1) {iter = 3}: (f16, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B112C1 = "arith.mul"(%R9.0x400, %R12, %D15C1) {round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10, %B113C1 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D15C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x2080, %B114C1 = "tsbc.s_bc"(%R0.0x580, %D15C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x1040, %B115C1 = "arith.sub"(%C0.0, %R10, %D15C1) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B116C1 = "arith.max"(%R12.0x1040, %C-45408.0, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B117C1 = "arith.min"(%R12.0x1040, %C45408.0, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B118C1 = "arith.mul"(%R12.0x1040, %C1.4423828125, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B119C1 = "arith.cast"(%R12, %D15C1) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B120C1 = "arith.mul"(%R11, %C0.693359375, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B121C1 = "arith.sub"(%R12.0x1040, %R12, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B122C1 = "arith.cast"(%R11, %D15C1) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B123C1 = "arith.min"(%R12.0x1040, %C15, %D15C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R12.0x1040, %B124C1 = "arith.max"(%R11, %C-15, %D15C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R11, %B125C1 = "arith.add_satu"(%R12.0x1040, %C15, %C10, %D15C1) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12.0x1040, %B126C1 = "sfu.taylor_4x"(%R12, %R12.0x2080, %D15C1) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B127C1 = "arith.mul"(%R12.0x1040, %R11, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R12, %B128C1 = "arith.add"(%R11, %C1.0, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B129C1 = "arith.div"(%C1.0, %R12, %D15C1) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R11, %B130C1 = "arith.mul"(%R11, %R10, %D15C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R10.0x1040, %B131C1 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D15C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x69800030c0, %D16C1 = "dma.tensor"(%R9.0x400, %B113C1) : (memref<1x64x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x64x13x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2480, %B132C1 = "tsbc.s_bc"(%R0.0x580, %D16C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1440, %B133C1 = "arith.sub"(%C0.0, %R10.0x1040, %D16C1) {round_mode = 0}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B134C1 = "arith.max"(%R9.0x1440, %C-45408.0, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B135C1 = "arith.min"(%R9.0x1440, %C45408.0, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B136C1 = "arith.mul"(%R9.0x1440, %C1.4423828125, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B137C1 = "arith.cast"(%R9.0x400, %D16C1) {round_mode = 3}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B138C1 = "arith.mul"(%R15, %C0.693359375, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B139C1 = "arith.sub"(%R9.0x1440, %R9.0x400, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B140C1 = "arith.cast"(%R15, %D16C1) {round_mode = 1}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B141C1 = "arith.min"(%R9.0x1440, %C15, %D16C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R9.0x1440, %B142C1 = "arith.max"(%R15, %C-15, %D16C1) {round_mode = 0}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si8, none) -> (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, none)
CHECK:          %R15, %B143C1 = "arith.add_satu"(%R9.0x1440, %C15, %C10, %D16C1) {round_mode = 1}: (memref<1x32x13x160xsi8, strides: [2112, 2112, 160, 1]>, si16, ui8, none) -> (memref<1x32x13x160xsi16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x1440, %B144C1 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2480, %D16C1) : (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B145C1 = "arith.mul"(%R9.0x1440, %R15, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R9.0x400, %B146C1 = "arith.add"(%R15, %C1.0, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, f16, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B147C1 = "arith.div"(%C1.0, %R9.0x400, %D16C1) {iter = 3}: (f16, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %R15, %B148C1 = "arith.mul"(%R15, %R10.0x1040, %D16C1) {round_mode = 0}: (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xf16, strides: [2080, 2080, 160, 1]>, none)
CHECK:          %L30.0x69806430c0, %D17C1 = "dma.tensor"(%R11, %B131C1) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804b30c0, %D18C1 = "dma.tensor"(%R15, %B148C1) : (memref<1x32x13x160xi16, strides: [2080, 2080, 160, 1]>, none) -> (memref<1x32x13x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B149C1, %msg49 = "system.send_msg"(%D18C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D19C1, %msg49 = "dma.sys.sys_send"(%B149C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D19C2, %msg49 = "@core_2"(%D1C2, %msg48) {
CHECK:          %B2C2 = "system.wait_msg"(%D1C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C2 = "dma.sys.sys_wait"(%B2C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C2 = "dma.tensor"(%G2.0x7f800, %B2C2) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R10, %B3C2 = "arith.cast"(%R0, %D3C2) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C2 = "dma.tensor"(%G1.0x1000, %B2C2) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C2 = "dma.tensor"(%G1.0x0, %B2C2) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C2 = "dma.tensor"(%G1.0x1f000, %B2C2) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C2 = "dma.tensor"(%G1.0x20000, %B2C2) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C2 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C2) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B5C2 = "tsbc.s_bc"(%R0.0x580, %D7C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B6C2 = "arith.sub"(%C0.0, %R14.0x2200, %D7C2) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B7C2 = "arith.max"(%R12.0x3e80, %C-45408.0, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B8C2 = "arith.min"(%R12.0x3e80, %C45408.0, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B9C2 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B10C2 = "arith.cast"(%R12, %D7C2) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B11C2 = "arith.mul"(%R10, %C0.693359375, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B12C2 = "arith.sub"(%R12.0x3e80, %R12, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B13C2 = "arith.cast"(%R10, %D7C2) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B14C2 = "arith.min"(%R12.0x3e80, %C15, %D7C2) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B15C2 = "arith.max"(%R10, %C-15, %D7C2) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B16C2 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D7C2) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B17C2 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D7C2) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B18C2 = "arith.mul"(%R12.0x3e80, %R10, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B19C2 = "arith.add"(%R10, %C1.0, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B20C2 = "arith.div"(%C1.0, %R12, %D7C2) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B21C2 = "arith.mul"(%R10, %R14.0x2200, %D7C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C2 = "dma.tensor"(%G1.0x14000, %B4C2) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C2 = "dma.tensor"(%G1.0x13000, %B4C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D10C2 = "dma.tensor"(%G2.0x9d800, %B4C2) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R12, %B22C2 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D10C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B23C2 = "tsbc.s_bc"(%R0.0x580, %D10C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B24C2 = "arith.sub"(%C0.0, %R12, %D10C2) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B25C2 = "arith.max"(%R10.0xf00, %C-45408.0, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B26C2 = "arith.min"(%R10.0xf00, %C45408.0, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B27C2 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C2 = "arith.cast"(%R10, %D10C2) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B29C2 = "arith.mul"(%R9.0x400, %C0.693359375, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B30C2 = "arith.sub"(%R10.0xf00, %R10, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B31C2 = "arith.cast"(%R9.0x400, %D10C2) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C2 = "arith.min"(%R10.0xf00, %C15, %D10C2) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B33C2 = "arith.max"(%R9.0x400, %C-15, %D10C2) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C2 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D10C2) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B35C2 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D10C2) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C2 = "arith.mul"(%R10.0xf00, %R9.0x400, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B37C2 = "arith.add"(%R9.0x400, %C1.0, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C2 = "arith.div"(%C1.0, %R10, %D10C2) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C2 = "arith.mul"(%R9.0x400, %R12, %D10C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15.0x2580, %D11C2 = "dma.tensor"(%G1.0x1e000, %B22C2) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D12C2 = "dma.tensor"(%G1.0x1d000, %B22C2) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C2 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D12C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B41C2 = "tsbc.s_bc"(%R0.0x580, %D12C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B42C2 = "arith.sub"(%C0.0, %R10, %D12C2) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B43C2 = "arith.max"(%R12.0xf00, %C-45408.0, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B44C2 = "arith.min"(%R12.0xf00, %C45408.0, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B45C2 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B46C2 = "arith.cast"(%R12, %D12C2) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B47C2 = "arith.mul"(%R11, %C0.693359375, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B48C2 = "arith.sub"(%R12.0xf00, %R12, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B49C2 = "arith.cast"(%R11, %D12C2) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B50C2 = "arith.min"(%R12.0xf00, %C15, %D12C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B51C2 = "arith.max"(%R11, %C-15, %D12C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B52C2 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D12C2) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B53C2 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D12C2) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B54C2 = "arith.mul"(%R12.0xf00, %R11, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B55C2 = "arith.add"(%R11, %C1.0, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B56C2 = "arith.div"(%C1.0, %R12, %D12C2) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B57C2 = "arith.mul"(%R11, %R10, %D12C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C2 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D12C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980004100, %D13C2 = "dma.tensor"(%R9.0x400, %B40C2) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B59C2 = "tsbc.s_bc"(%R0.0x580, %D13C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B60C2 = "arith.sub"(%C0.0, %R10.0x1040, %D13C2) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B61C2 = "arith.max"(%R9.0x1300, %C-45408.0, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B62C2 = "arith.min"(%R9.0x1300, %C45408.0, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C2 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B64C2 = "arith.cast"(%R9.0x400, %D13C2) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C2 = "arith.mul"(%R15, %C0.693359375, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C2 = "arith.sub"(%R9.0x1300, %R9.0x400, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B67C2 = "arith.cast"(%R15, %D13C2) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B68C2 = "arith.min"(%R9.0x1300, %C15, %D13C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B69C2 = "arith.max"(%R15, %C-15, %D13C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B70C2 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D13C2) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B71C2 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D13C2) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B72C2 = "arith.mul"(%R9.0x1300, %R15, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C2 = "arith.add"(%R15, %C1.0, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B74C2 = "arith.div"(%C1.0, %R9.0x400, %D13C2) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B75C2 = "arith.mul"(%R15, %R10.0x1040, %D13C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980644100, %D14C2 = "dma.tensor"(%R11, %B58C2) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R10, %B76C2 = "arith.cast"(%R0, %D14C2) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %L30.0x69804b4100, %D15C2 = "dma.tensor"(%R15, %B75C2) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R14.0x2200, %B77C2 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D15C2) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B78C2 = "tsbc.s_bc"(%R0.0x580, %D15C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B79C2 = "arith.sub"(%C0.0, %R14.0x2200, %D15C2) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B80C2 = "arith.max"(%R12.0x3e80, %C-45408.0, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B81C2 = "arith.min"(%R12.0x3e80, %C45408.0, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B82C2 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B83C2 = "arith.cast"(%R12, %D15C2) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B84C2 = "arith.mul"(%R10, %C0.693359375, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B85C2 = "arith.sub"(%R12.0x3e80, %R12, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B86C2 = "arith.cast"(%R10, %D15C2) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B87C2 = "arith.min"(%R12.0x3e80, %C15, %D15C2) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B88C2 = "arith.max"(%R10, %C-15, %D15C2) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B89C2 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D15C2) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B90C2 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D15C2) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B91C2 = "arith.mul"(%R12.0x3e80, %R10, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B92C2 = "arith.add"(%R10, %C1.0, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B93C2 = "arith.div"(%C1.0, %R12, %D15C2) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B94C2 = "arith.mul"(%R10, %R14.0x2200, %D15C2) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B95C2 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D15C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B96C2 = "tsbc.s_bc"(%R0.0x580, %D15C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B97C2 = "arith.sub"(%C0.0, %R12, %D15C2) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B98C2 = "arith.max"(%R10.0xf00, %C-45408.0, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B99C2 = "arith.min"(%R10.0xf00, %C45408.0, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B100C2 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B101C2 = "arith.cast"(%R10, %D15C2) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B102C2 = "arith.mul"(%R9.0x400, %C0.693359375, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B103C2 = "arith.sub"(%R10.0xf00, %R10, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B104C2 = "arith.cast"(%R9.0x400, %D15C2) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B105C2 = "arith.min"(%R10.0xf00, %C15, %D15C2) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B106C2 = "arith.max"(%R9.0x400, %C-15, %D15C2) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B107C2 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D15C2) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B108C2 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D15C2) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B109C2 = "arith.mul"(%R10.0xf00, %R9.0x400, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B110C2 = "arith.add"(%R9.0x400, %C1.0, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B111C2 = "arith.div"(%C1.0, %R10, %D15C2) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B112C2 = "arith.mul"(%R9.0x400, %R12, %D15C2) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B113C2 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D15C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B114C2 = "tsbc.s_bc"(%R0.0x580, %D15C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B115C2 = "arith.sub"(%C0.0, %R10, %D15C2) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B116C2 = "arith.max"(%R12.0xf00, %C-45408.0, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B117C2 = "arith.min"(%R12.0xf00, %C45408.0, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B118C2 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B119C2 = "arith.cast"(%R12, %D15C2) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B120C2 = "arith.mul"(%R11, %C0.693359375, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B121C2 = "arith.sub"(%R12.0xf00, %R12, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B122C2 = "arith.cast"(%R11, %D15C2) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B123C2 = "arith.min"(%R12.0xf00, %C15, %D15C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B124C2 = "arith.max"(%R11, %C-15, %D15C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B125C2 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D15C2) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B126C2 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D15C2) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B127C2 = "arith.mul"(%R12.0xf00, %R11, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B128C2 = "arith.add"(%R11, %C1.0, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B129C2 = "arith.div"(%C1.0, %R12, %D15C2) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B130C2 = "arith.mul"(%R11, %R10, %D15C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B131C2 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D15C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980005000, %D16C2 = "dma.tensor"(%R9.0x400, %B113C2) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B132C2 = "tsbc.s_bc"(%R0.0x580, %D16C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B133C2 = "arith.sub"(%C0.0, %R10.0x1040, %D16C2) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B134C2 = "arith.max"(%R9.0x1300, %C-45408.0, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B135C2 = "arith.min"(%R9.0x1300, %C45408.0, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B136C2 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B137C2 = "arith.cast"(%R9.0x400, %D16C2) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B138C2 = "arith.mul"(%R15, %C0.693359375, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B139C2 = "arith.sub"(%R9.0x1300, %R9.0x400, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B140C2 = "arith.cast"(%R15, %D16C2) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B141C2 = "arith.min"(%R9.0x1300, %C15, %D16C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B142C2 = "arith.max"(%R15, %C-15, %D16C2) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B143C2 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D16C2) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B144C2 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D16C2) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B145C2 = "arith.mul"(%R9.0x1300, %R15, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B146C2 = "arith.add"(%R15, %C1.0, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B147C2 = "arith.div"(%C1.0, %R9.0x400, %D16C2) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B148C2 = "arith.mul"(%R15, %R10.0x1040, %D16C2) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980645000, %D17C2 = "dma.tensor"(%R11, %B131C2) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804b5000, %D18C2 = "dma.tensor"(%R15, %B148C2) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B149C2, %msg49 = "system.send_msg"(%D18C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D19C2, %msg49 = "dma.sys.sys_send"(%B149C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D19C3, %msg49 = "@core_3"(%D1C3, %msg48) {
CHECK:          %B2C3 = "system.wait_msg"(%D1C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C3 = "dma.sys.sys_wait"(%B2C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C3 = "dma.tensor"(%G2.0xbb800, %B2C3) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R10, %B3C3 = "arith.cast"(%R0, %D3C3) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C3 = "dma.tensor"(%G1.0x1000, %B2C3) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C3 = "dma.tensor"(%G1.0x0, %B2C3) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C3 = "dma.tensor"(%G1.0x1f000, %B2C3) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C3 = "dma.tensor"(%G1.0x20000, %B2C3) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C3 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C3) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B5C3 = "tsbc.s_bc"(%R0.0x580, %D7C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B6C3 = "arith.sub"(%C0.0, %R14.0x2200, %D7C3) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B7C3 = "arith.max"(%R12.0x3e80, %C-45408.0, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B8C3 = "arith.min"(%R12.0x3e80, %C45408.0, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B9C3 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B10C3 = "arith.cast"(%R12, %D7C3) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B11C3 = "arith.mul"(%R10, %C0.693359375, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B12C3 = "arith.sub"(%R12.0x3e80, %R12, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B13C3 = "arith.cast"(%R10, %D7C3) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B14C3 = "arith.min"(%R12.0x3e80, %C15, %D7C3) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B15C3 = "arith.max"(%R10, %C-15, %D7C3) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B16C3 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D7C3) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B17C3 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D7C3) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B18C3 = "arith.mul"(%R12.0x3e80, %R10, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B19C3 = "arith.add"(%R10, %C1.0, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B20C3 = "arith.div"(%C1.0, %R12, %D7C3) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B21C3 = "arith.mul"(%R10, %R14.0x2200, %D7C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C3 = "dma.tensor"(%G1.0x14000, %B4C3) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C3 = "dma.tensor"(%G1.0x13000, %B4C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D10C3 = "dma.tensor"(%G2.0xd9800, %B4C3) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R12, %B22C3 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D10C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B23C3 = "tsbc.s_bc"(%R0.0x580, %D10C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B24C3 = "arith.sub"(%C0.0, %R12, %D10C3) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B25C3 = "arith.max"(%R10.0xf00, %C-45408.0, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B26C3 = "arith.min"(%R10.0xf00, %C45408.0, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B27C3 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C3 = "arith.cast"(%R10, %D10C3) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B29C3 = "arith.mul"(%R9.0x400, %C0.693359375, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B30C3 = "arith.sub"(%R10.0xf00, %R10, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B31C3 = "arith.cast"(%R9.0x400, %D10C3) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C3 = "arith.min"(%R10.0xf00, %C15, %D10C3) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B33C3 = "arith.max"(%R9.0x400, %C-15, %D10C3) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C3 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D10C3) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B35C3 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D10C3) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C3 = "arith.mul"(%R10.0xf00, %R9.0x400, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B37C3 = "arith.add"(%R9.0x400, %C1.0, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C3 = "arith.div"(%C1.0, %R10, %D10C3) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C3 = "arith.mul"(%R9.0x400, %R12, %D10C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15.0x2580, %D11C3 = "dma.tensor"(%G1.0x1e000, %B22C3) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D12C3 = "dma.tensor"(%G1.0x1d000, %B22C3) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C3 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D12C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B41C3 = "tsbc.s_bc"(%R0.0x580, %D12C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B42C3 = "arith.sub"(%C0.0, %R10, %D12C3) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B43C3 = "arith.max"(%R12.0xf00, %C-45408.0, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B44C3 = "arith.min"(%R12.0xf00, %C45408.0, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B45C3 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B46C3 = "arith.cast"(%R12, %D12C3) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B47C3 = "arith.mul"(%R11, %C0.693359375, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B48C3 = "arith.sub"(%R12.0xf00, %R12, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B49C3 = "arith.cast"(%R11, %D12C3) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B50C3 = "arith.min"(%R12.0xf00, %C15, %D12C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B51C3 = "arith.max"(%R11, %C-15, %D12C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B52C3 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D12C3) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B53C3 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D12C3) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B54C3 = "arith.mul"(%R12.0xf00, %R11, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B55C3 = "arith.add"(%R11, %C1.0, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B56C3 = "arith.div"(%C1.0, %R12, %D12C3) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B57C3 = "arith.mul"(%R11, %R10, %D12C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C3 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D12C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980005f00, %D13C3 = "dma.tensor"(%R9.0x400, %B40C3) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B59C3 = "tsbc.s_bc"(%R0.0x580, %D13C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B60C3 = "arith.sub"(%C0.0, %R10.0x1040, %D13C3) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B61C3 = "arith.max"(%R9.0x1300, %C-45408.0, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B62C3 = "arith.min"(%R9.0x1300, %C45408.0, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C3 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B64C3 = "arith.cast"(%R9.0x400, %D13C3) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C3 = "arith.mul"(%R15, %C0.693359375, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C3 = "arith.sub"(%R9.0x1300, %R9.0x400, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B67C3 = "arith.cast"(%R15, %D13C3) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B68C3 = "arith.min"(%R9.0x1300, %C15, %D13C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B69C3 = "arith.max"(%R15, %C-15, %D13C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B70C3 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D13C3) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B71C3 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D13C3) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B72C3 = "arith.mul"(%R9.0x1300, %R15, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C3 = "arith.add"(%R15, %C1.0, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B74C3 = "arith.div"(%C1.0, %R9.0x400, %D13C3) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B75C3 = "arith.mul"(%R15, %R10.0x1040, %D13C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980645f00, %D14C3 = "dma.tensor"(%R11, %B58C3) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R10, %B76C3 = "arith.cast"(%R0, %D14C3) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %L30.0x69804b5f00, %D15C3 = "dma.tensor"(%R15, %B75C3) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R14.0x2200, %B77C3 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D15C3) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B78C3 = "tsbc.s_bc"(%R0.0x580, %D15C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B79C3 = "arith.sub"(%C0.0, %R14.0x2200, %D15C3) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B80C3 = "arith.max"(%R12.0x3e80, %C-45408.0, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B81C3 = "arith.min"(%R12.0x3e80, %C45408.0, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B82C3 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B83C3 = "arith.cast"(%R12, %D15C3) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B84C3 = "arith.mul"(%R10, %C0.693359375, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B85C3 = "arith.sub"(%R12.0x3e80, %R12, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B86C3 = "arith.cast"(%R10, %D15C3) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B87C3 = "arith.min"(%R12.0x3e80, %C15, %D15C3) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B88C3 = "arith.max"(%R10, %C-15, %D15C3) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B89C3 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D15C3) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B90C3 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D15C3) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B91C3 = "arith.mul"(%R12.0x3e80, %R10, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B92C3 = "arith.add"(%R10, %C1.0, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B93C3 = "arith.div"(%C1.0, %R12, %D15C3) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B94C3 = "arith.mul"(%R10, %R14.0x2200, %D15C3) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B95C3 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D15C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B96C3 = "tsbc.s_bc"(%R0.0x580, %D15C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B97C3 = "arith.sub"(%C0.0, %R12, %D15C3) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B98C3 = "arith.max"(%R10.0xf00, %C-45408.0, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B99C3 = "arith.min"(%R10.0xf00, %C45408.0, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B100C3 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B101C3 = "arith.cast"(%R10, %D15C3) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B102C3 = "arith.mul"(%R9.0x400, %C0.693359375, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B103C3 = "arith.sub"(%R10.0xf00, %R10, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B104C3 = "arith.cast"(%R9.0x400, %D15C3) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B105C3 = "arith.min"(%R10.0xf00, %C15, %D15C3) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B106C3 = "arith.max"(%R9.0x400, %C-15, %D15C3) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B107C3 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D15C3) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B108C3 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D15C3) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B109C3 = "arith.mul"(%R10.0xf00, %R9.0x400, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B110C3 = "arith.add"(%R9.0x400, %C1.0, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B111C3 = "arith.div"(%C1.0, %R10, %D15C3) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B112C3 = "arith.mul"(%R9.0x400, %R12, %D15C3) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B113C3 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D15C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B114C3 = "tsbc.s_bc"(%R0.0x580, %D15C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B115C3 = "arith.sub"(%C0.0, %R10, %D15C3) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B116C3 = "arith.max"(%R12.0xf00, %C-45408.0, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B117C3 = "arith.min"(%R12.0xf00, %C45408.0, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B118C3 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B119C3 = "arith.cast"(%R12, %D15C3) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B120C3 = "arith.mul"(%R11, %C0.693359375, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B121C3 = "arith.sub"(%R12.0xf00, %R12, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B122C3 = "arith.cast"(%R11, %D15C3) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B123C3 = "arith.min"(%R12.0xf00, %C15, %D15C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B124C3 = "arith.max"(%R11, %C-15, %D15C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B125C3 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D15C3) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B126C3 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D15C3) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B127C3 = "arith.mul"(%R12.0xf00, %R11, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B128C3 = "arith.add"(%R11, %C1.0, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B129C3 = "arith.div"(%C1.0, %R12, %D15C3) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B130C3 = "arith.mul"(%R11, %R10, %D15C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B131C3 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D15C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980006e00, %D16C3 = "dma.tensor"(%R9.0x400, %B113C3) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B132C3 = "tsbc.s_bc"(%R0.0x580, %D16C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B133C3 = "arith.sub"(%C0.0, %R10.0x1040, %D16C3) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B134C3 = "arith.max"(%R9.0x1300, %C-45408.0, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B135C3 = "arith.min"(%R9.0x1300, %C45408.0, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B136C3 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B137C3 = "arith.cast"(%R9.0x400, %D16C3) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B138C3 = "arith.mul"(%R15, %C0.693359375, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B139C3 = "arith.sub"(%R9.0x1300, %R9.0x400, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B140C3 = "arith.cast"(%R15, %D16C3) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B141C3 = "arith.min"(%R9.0x1300, %C15, %D16C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B142C3 = "arith.max"(%R15, %C-15, %D16C3) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B143C3 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D16C3) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B144C3 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D16C3) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B145C3 = "arith.mul"(%R9.0x1300, %R15, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B146C3 = "arith.add"(%R15, %C1.0, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B147C3 = "arith.div"(%C1.0, %R9.0x400, %D16C3) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B148C3 = "arith.mul"(%R15, %R10.0x1040, %D16C3) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980646e00, %D17C3 = "dma.tensor"(%R11, %B131C3) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804b6e00, %D18C3 = "dma.tensor"(%R15, %B148C3) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B149C3, %msg49 = "system.send_msg"(%D18C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D19C3, %msg49 = "dma.sys.sys_send"(%B149C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D19C4, %msg49 = "@core_4"(%D1C4, %msg48) {
CHECK:          %B2C4 = "system.wait_msg"(%D1C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C4 = "dma.sys.sys_wait"(%B2C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C4 = "dma.tensor"(%G2.0xf7800, %B2C4) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R10, %B3C4 = "arith.cast"(%R0, %D3C4) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C4 = "dma.tensor"(%G1.0x1000, %B2C4) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C4 = "dma.tensor"(%G1.0x0, %B2C4) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C4 = "dma.tensor"(%G1.0x1f000, %B2C4) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C4 = "dma.tensor"(%G1.0x20000, %B2C4) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C4 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C4) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B5C4 = "tsbc.s_bc"(%R0.0x580, %D7C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B6C4 = "arith.sub"(%C0.0, %R14.0x2200, %D7C4) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B7C4 = "arith.max"(%R12.0x3e80, %C-45408.0, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B8C4 = "arith.min"(%R12.0x3e80, %C45408.0, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B9C4 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B10C4 = "arith.cast"(%R12, %D7C4) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B11C4 = "arith.mul"(%R10, %C0.693359375, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B12C4 = "arith.sub"(%R12.0x3e80, %R12, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B13C4 = "arith.cast"(%R10, %D7C4) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B14C4 = "arith.min"(%R12.0x3e80, %C15, %D7C4) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B15C4 = "arith.max"(%R10, %C-15, %D7C4) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B16C4 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D7C4) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B17C4 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D7C4) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B18C4 = "arith.mul"(%R12.0x3e80, %R10, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B19C4 = "arith.add"(%R10, %C1.0, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B20C4 = "arith.div"(%C1.0, %R12, %D7C4) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B21C4 = "arith.mul"(%R10, %R14.0x2200, %D7C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C4 = "dma.tensor"(%G1.0x14000, %B4C4) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C4 = "dma.tensor"(%G1.0x13000, %B4C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D10C4 = "dma.tensor"(%G2.0x115800, %B4C4) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R12, %B22C4 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D10C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B23C4 = "tsbc.s_bc"(%R0.0x580, %D10C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B24C4 = "arith.sub"(%C0.0, %R12, %D10C4) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B25C4 = "arith.max"(%R10.0xf00, %C-45408.0, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B26C4 = "arith.min"(%R10.0xf00, %C45408.0, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B27C4 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C4 = "arith.cast"(%R10, %D10C4) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B29C4 = "arith.mul"(%R9.0x400, %C0.693359375, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B30C4 = "arith.sub"(%R10.0xf00, %R10, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B31C4 = "arith.cast"(%R9.0x400, %D10C4) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C4 = "arith.min"(%R10.0xf00, %C15, %D10C4) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B33C4 = "arith.max"(%R9.0x400, %C-15, %D10C4) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C4 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D10C4) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B35C4 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D10C4) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C4 = "arith.mul"(%R10.0xf00, %R9.0x400, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B37C4 = "arith.add"(%R9.0x400, %C1.0, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C4 = "arith.div"(%C1.0, %R10, %D10C4) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C4 = "arith.mul"(%R9.0x400, %R12, %D10C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15.0x2580, %D11C4 = "dma.tensor"(%G1.0x1e000, %B22C4) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D12C4 = "dma.tensor"(%G1.0x1d000, %B22C4) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C4 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D12C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B41C4 = "tsbc.s_bc"(%R0.0x580, %D12C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B42C4 = "arith.sub"(%C0.0, %R10, %D12C4) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B43C4 = "arith.max"(%R12.0xf00, %C-45408.0, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B44C4 = "arith.min"(%R12.0xf00, %C45408.0, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B45C4 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B46C4 = "arith.cast"(%R12, %D12C4) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B47C4 = "arith.mul"(%R11, %C0.693359375, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B48C4 = "arith.sub"(%R12.0xf00, %R12, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B49C4 = "arith.cast"(%R11, %D12C4) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B50C4 = "arith.min"(%R12.0xf00, %C15, %D12C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B51C4 = "arith.max"(%R11, %C-15, %D12C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B52C4 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D12C4) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B53C4 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D12C4) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B54C4 = "arith.mul"(%R12.0xf00, %R11, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B55C4 = "arith.add"(%R11, %C1.0, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B56C4 = "arith.div"(%C1.0, %R12, %D12C4) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B57C4 = "arith.mul"(%R11, %R10, %D12C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C4 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D12C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980007d00, %D13C4 = "dma.tensor"(%R9.0x400, %B40C4) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B59C4 = "tsbc.s_bc"(%R0.0x580, %D13C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B60C4 = "arith.sub"(%C0.0, %R10.0x1040, %D13C4) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B61C4 = "arith.max"(%R9.0x1300, %C-45408.0, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B62C4 = "arith.min"(%R9.0x1300, %C45408.0, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C4 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B64C4 = "arith.cast"(%R9.0x400, %D13C4) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C4 = "arith.mul"(%R15, %C0.693359375, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C4 = "arith.sub"(%R9.0x1300, %R9.0x400, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B67C4 = "arith.cast"(%R15, %D13C4) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B68C4 = "arith.min"(%R9.0x1300, %C15, %D13C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B69C4 = "arith.max"(%R15, %C-15, %D13C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B70C4 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D13C4) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B71C4 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D13C4) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B72C4 = "arith.mul"(%R9.0x1300, %R15, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C4 = "arith.add"(%R15, %C1.0, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B74C4 = "arith.div"(%C1.0, %R9.0x400, %D13C4) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B75C4 = "arith.mul"(%R15, %R10.0x1040, %D13C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980647d00, %D14C4 = "dma.tensor"(%R11, %B58C4) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R10, %B76C4 = "arith.cast"(%R0, %D14C4) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %L30.0x69804b7d00, %D15C4 = "dma.tensor"(%R15, %B75C4) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R14.0x2200, %B77C4 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D15C4) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B78C4 = "tsbc.s_bc"(%R0.0x580, %D15C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B79C4 = "arith.sub"(%C0.0, %R14.0x2200, %D15C4) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B80C4 = "arith.max"(%R12.0x3e80, %C-45408.0, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B81C4 = "arith.min"(%R12.0x3e80, %C45408.0, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B82C4 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B83C4 = "arith.cast"(%R12, %D15C4) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B84C4 = "arith.mul"(%R10, %C0.693359375, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B85C4 = "arith.sub"(%R12.0x3e80, %R12, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B86C4 = "arith.cast"(%R10, %D15C4) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B87C4 = "arith.min"(%R12.0x3e80, %C15, %D15C4) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B88C4 = "arith.max"(%R10, %C-15, %D15C4) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B89C4 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D15C4) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B90C4 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D15C4) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B91C4 = "arith.mul"(%R12.0x3e80, %R10, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B92C4 = "arith.add"(%R10, %C1.0, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B93C4 = "arith.div"(%C1.0, %R12, %D15C4) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B94C4 = "arith.mul"(%R10, %R14.0x2200, %D15C4) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B95C4 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D15C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B96C4 = "tsbc.s_bc"(%R0.0x580, %D15C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B97C4 = "arith.sub"(%C0.0, %R12, %D15C4) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B98C4 = "arith.max"(%R10.0xf00, %C-45408.0, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B99C4 = "arith.min"(%R10.0xf00, %C45408.0, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B100C4 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B101C4 = "arith.cast"(%R10, %D15C4) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B102C4 = "arith.mul"(%R9.0x400, %C0.693359375, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B103C4 = "arith.sub"(%R10.0xf00, %R10, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B104C4 = "arith.cast"(%R9.0x400, %D15C4) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B105C4 = "arith.min"(%R10.0xf00, %C15, %D15C4) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B106C4 = "arith.max"(%R9.0x400, %C-15, %D15C4) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B107C4 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D15C4) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B108C4 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D15C4) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B109C4 = "arith.mul"(%R10.0xf00, %R9.0x400, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B110C4 = "arith.add"(%R9.0x400, %C1.0, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B111C4 = "arith.div"(%C1.0, %R10, %D15C4) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B112C4 = "arith.mul"(%R9.0x400, %R12, %D15C4) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B113C4 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D15C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B114C4 = "tsbc.s_bc"(%R0.0x580, %D15C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B115C4 = "arith.sub"(%C0.0, %R10, %D15C4) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B116C4 = "arith.max"(%R12.0xf00, %C-45408.0, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B117C4 = "arith.min"(%R12.0xf00, %C45408.0, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B118C4 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B119C4 = "arith.cast"(%R12, %D15C4) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B120C4 = "arith.mul"(%R11, %C0.693359375, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B121C4 = "arith.sub"(%R12.0xf00, %R12, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B122C4 = "arith.cast"(%R11, %D15C4) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B123C4 = "arith.min"(%R12.0xf00, %C15, %D15C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B124C4 = "arith.max"(%R11, %C-15, %D15C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B125C4 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D15C4) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B126C4 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D15C4) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B127C4 = "arith.mul"(%R12.0xf00, %R11, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B128C4 = "arith.add"(%R11, %C1.0, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B129C4 = "arith.div"(%C1.0, %R12, %D15C4) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B130C4 = "arith.mul"(%R11, %R10, %D15C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B131C4 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D15C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980008c00, %D16C4 = "dma.tensor"(%R9.0x400, %B113C4) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B132C4 = "tsbc.s_bc"(%R0.0x580, %D16C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B133C4 = "arith.sub"(%C0.0, %R10.0x1040, %D16C4) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B134C4 = "arith.max"(%R9.0x1300, %C-45408.0, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B135C4 = "arith.min"(%R9.0x1300, %C45408.0, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B136C4 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B137C4 = "arith.cast"(%R9.0x400, %D16C4) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B138C4 = "arith.mul"(%R15, %C0.693359375, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B139C4 = "arith.sub"(%R9.0x1300, %R9.0x400, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B140C4 = "arith.cast"(%R15, %D16C4) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B141C4 = "arith.min"(%R9.0x1300, %C15, %D16C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B142C4 = "arith.max"(%R15, %C-15, %D16C4) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B143C4 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D16C4) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B144C4 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D16C4) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B145C4 = "arith.mul"(%R9.0x1300, %R15, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B146C4 = "arith.add"(%R15, %C1.0, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B147C4 = "arith.div"(%C1.0, %R9.0x400, %D16C4) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B148C4 = "arith.mul"(%R15, %R10.0x1040, %D16C4) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980648c00, %D17C4 = "dma.tensor"(%R11, %B131C4) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804b8c00, %D18C4 = "dma.tensor"(%R15, %B148C4) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B149C4, %msg49 = "system.send_msg"(%D18C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D19C4, %msg49 = "dma.sys.sys_send"(%B149C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D19C5, %msg49 = "@core_5"(%D1C5, %msg48) {
CHECK:          %B2C5 = "system.wait_msg"(%D1C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C5 = "dma.sys.sys_wait"(%B2C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C5 = "dma.tensor"(%G2.0x133800, %B2C5) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R10, %B3C5 = "arith.cast"(%R0, %D3C5) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C5 = "dma.tensor"(%G1.0x1000, %B2C5) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C5 = "dma.tensor"(%G1.0x0, %B2C5) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C5 = "dma.tensor"(%G1.0x1f000, %B2C5) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C5 = "dma.tensor"(%G1.0x20000, %B2C5) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C5 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C5) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B5C5 = "tsbc.s_bc"(%R0.0x580, %D7C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B6C5 = "arith.sub"(%C0.0, %R14.0x2200, %D7C5) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B7C5 = "arith.max"(%R12.0x3e80, %C-45408.0, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B8C5 = "arith.min"(%R12.0x3e80, %C45408.0, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B9C5 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B10C5 = "arith.cast"(%R12, %D7C5) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B11C5 = "arith.mul"(%R10, %C0.693359375, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B12C5 = "arith.sub"(%R12.0x3e80, %R12, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B13C5 = "arith.cast"(%R10, %D7C5) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B14C5 = "arith.min"(%R12.0x3e80, %C15, %D7C5) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B15C5 = "arith.max"(%R10, %C-15, %D7C5) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B16C5 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D7C5) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B17C5 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D7C5) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B18C5 = "arith.mul"(%R12.0x3e80, %R10, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B19C5 = "arith.add"(%R10, %C1.0, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B20C5 = "arith.div"(%C1.0, %R12, %D7C5) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B21C5 = "arith.mul"(%R10, %R14.0x2200, %D7C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C5 = "dma.tensor"(%G1.0x14000, %B4C5) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C5 = "dma.tensor"(%G1.0x13000, %B4C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D10C5 = "dma.tensor"(%G2.0x151800, %B4C5) : (memref<1x3x54x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %R12, %B22C5 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D10C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B23C5 = "tsbc.s_bc"(%R0.0x580, %D10C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B24C5 = "arith.sub"(%C0.0, %R12, %D10C5) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B25C5 = "arith.max"(%R10.0xf00, %C-45408.0, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B26C5 = "arith.min"(%R10.0xf00, %C45408.0, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B27C5 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C5 = "arith.cast"(%R10, %D10C5) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B29C5 = "arith.mul"(%R9.0x400, %C0.693359375, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B30C5 = "arith.sub"(%R10.0xf00, %R10, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B31C5 = "arith.cast"(%R9.0x400, %D10C5) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C5 = "arith.min"(%R10.0xf00, %C15, %D10C5) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B33C5 = "arith.max"(%R9.0x400, %C-15, %D10C5) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C5 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D10C5) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B35C5 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D10C5) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C5 = "arith.mul"(%R10.0xf00, %R9.0x400, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B37C5 = "arith.add"(%R9.0x400, %C1.0, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C5 = "arith.div"(%C1.0, %R10, %D10C5) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C5 = "arith.mul"(%R9.0x400, %R12, %D10C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15.0x2580, %D11C5 = "dma.tensor"(%G1.0x1e000, %B22C5) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D12C5 = "dma.tensor"(%G1.0x1d000, %B22C5) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C5 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D12C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B41C5 = "tsbc.s_bc"(%R0.0x580, %D12C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B42C5 = "arith.sub"(%C0.0, %R10, %D12C5) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B43C5 = "arith.max"(%R12.0xf00, %C-45408.0, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B44C5 = "arith.min"(%R12.0xf00, %C45408.0, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B45C5 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B46C5 = "arith.cast"(%R12, %D12C5) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B47C5 = "arith.mul"(%R11, %C0.693359375, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B48C5 = "arith.sub"(%R12.0xf00, %R12, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B49C5 = "arith.cast"(%R11, %D12C5) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B50C5 = "arith.min"(%R12.0xf00, %C15, %D12C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B51C5 = "arith.max"(%R11, %C-15, %D12C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B52C5 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D12C5) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B53C5 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D12C5) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B54C5 = "arith.mul"(%R12.0xf00, %R11, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B55C5 = "arith.add"(%R11, %C1.0, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B56C5 = "arith.div"(%C1.0, %R12, %D12C5) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B57C5 = "arith.mul"(%R11, %R10, %D12C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C5 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D12C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980009b00, %D13C5 = "dma.tensor"(%R9.0x400, %B40C5) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B59C5 = "tsbc.s_bc"(%R0.0x580, %D13C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B60C5 = "arith.sub"(%C0.0, %R10.0x1040, %D13C5) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B61C5 = "arith.max"(%R9.0x1300, %C-45408.0, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B62C5 = "arith.min"(%R9.0x1300, %C45408.0, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C5 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B64C5 = "arith.cast"(%R9.0x400, %D13C5) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C5 = "arith.mul"(%R15, %C0.693359375, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C5 = "arith.sub"(%R9.0x1300, %R9.0x400, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B67C5 = "arith.cast"(%R15, %D13C5) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B68C5 = "arith.min"(%R9.0x1300, %C15, %D13C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B69C5 = "arith.max"(%R15, %C-15, %D13C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B70C5 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D13C5) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B71C5 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D13C5) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B72C5 = "arith.mul"(%R9.0x1300, %R15, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C5 = "arith.add"(%R15, %C1.0, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B74C5 = "arith.div"(%C1.0, %R9.0x400, %D13C5) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B75C5 = "arith.mul"(%R15, %R10.0x1040, %D13C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x6980649b00, %D14C5 = "dma.tensor"(%R11, %B58C5) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R10, %B76C5 = "arith.cast"(%R0, %D14C5) {round_mode = 1}: (memref<1x3x54x640xf32, strides: [34560, 34560, 640, 1]>, none) -> (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, none)
CHECK:          %L30.0x69804b9b00, %D15C5 = "dma.tensor"(%R15, %B75C5) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %R14.0x2200, %B77C5 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D15C5) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x54x640xf16, strides: [34560, 34560, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B78C5 = "tsbc.s_bc"(%R0.0x580, %D15C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B79C5 = "arith.sub"(%C0.0, %R14.0x2200, %D15C5) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B80C5 = "arith.max"(%R12.0x3e80, %C-45408.0, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B81C5 = "arith.min"(%R12.0x3e80, %C45408.0, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B82C5 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B83C5 = "arith.cast"(%R12, %D15C5) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B84C5 = "arith.mul"(%R10, %C0.693359375, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B85C5 = "arith.sub"(%R12.0x3e80, %R12, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B86C5 = "arith.cast"(%R10, %D15C5) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B87C5 = "arith.min"(%R12.0x3e80, %C15, %D15C5) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B88C5 = "arith.max"(%R10, %C-15, %D15C5) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B89C5 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D15C5) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B90C5 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D15C5) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B91C5 = "arith.mul"(%R12.0x3e80, %R10, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B92C5 = "arith.add"(%R10, %C1.0, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B93C5 = "arith.div"(%C1.0, %R12, %D15C5) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B94C5 = "arith.mul"(%R10, %R14.0x2200, %D15C5) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B95C5 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D15C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B96C5 = "tsbc.s_bc"(%R0.0x580, %D15C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B97C5 = "arith.sub"(%C0.0, %R12, %D15C5) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B98C5 = "arith.max"(%R10.0xf00, %C-45408.0, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B99C5 = "arith.min"(%R10.0xf00, %C45408.0, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B100C5 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B101C5 = "arith.cast"(%R10, %D15C5) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B102C5 = "arith.mul"(%R9.0x400, %C0.693359375, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B103C5 = "arith.sub"(%R10.0xf00, %R10, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B104C5 = "arith.cast"(%R9.0x400, %D15C5) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B105C5 = "arith.min"(%R10.0xf00, %C15, %D15C5) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B106C5 = "arith.max"(%R9.0x400, %C-15, %D15C5) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B107C5 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D15C5) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B108C5 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D15C5) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B109C5 = "arith.mul"(%R10.0xf00, %R9.0x400, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B110C5 = "arith.add"(%R9.0x400, %C1.0, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B111C5 = "arith.div"(%C1.0, %R10, %D15C5) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B112C5 = "arith.mul"(%R9.0x400, %R12, %D15C5) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B113C5 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D15C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B114C5 = "tsbc.s_bc"(%R0.0x580, %D15C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B115C5 = "arith.sub"(%C0.0, %R10, %D15C5) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B116C5 = "arith.max"(%R12.0xf00, %C-45408.0, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B117C5 = "arith.min"(%R12.0xf00, %C45408.0, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B118C5 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B119C5 = "arith.cast"(%R12, %D15C5) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B120C5 = "arith.mul"(%R11, %C0.693359375, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B121C5 = "arith.sub"(%R12.0xf00, %R12, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B122C5 = "arith.cast"(%R11, %D15C5) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B123C5 = "arith.min"(%R12.0xf00, %C15, %D15C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B124C5 = "arith.max"(%R11, %C-15, %D15C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B125C5 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D15C5) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B126C5 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D15C5) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B127C5 = "arith.mul"(%R12.0xf00, %R11, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B128C5 = "arith.add"(%R11, %C1.0, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B129C5 = "arith.div"(%C1.0, %R12, %D15C5) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B130C5 = "arith.mul"(%R11, %R10, %D15C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B131C5 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D15C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x698000aa00, %D16C5 = "dma.tensor"(%R9.0x400, %B113C5) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B132C5 = "tsbc.s_bc"(%R0.0x580, %D16C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B133C5 = "arith.sub"(%C0.0, %R10.0x1040, %D16C5) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B134C5 = "arith.max"(%R9.0x1300, %C-45408.0, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B135C5 = "arith.min"(%R9.0x1300, %C45408.0, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B136C5 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B137C5 = "arith.cast"(%R9.0x400, %D16C5) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B138C5 = "arith.mul"(%R15, %C0.693359375, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B139C5 = "arith.sub"(%R9.0x1300, %R9.0x400, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B140C5 = "arith.cast"(%R15, %D16C5) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B141C5 = "arith.min"(%R9.0x1300, %C15, %D16C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B142C5 = "arith.max"(%R15, %C-15, %D16C5) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B143C5 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D16C5) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B144C5 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D16C5) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B145C5 = "arith.mul"(%R9.0x1300, %R15, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B146C5 = "arith.add"(%R15, %C1.0, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B147C5 = "arith.div"(%C1.0, %R9.0x400, %D16C5) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B148C5 = "arith.mul"(%R15, %R10.0x1040, %D16C5) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x698064aa00, %D17C5 = "dma.tensor"(%R11, %B131C5) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804baa00, %D18C5 = "dma.tensor"(%R15, %B148C5) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B149C5, %msg49 = "system.send_msg"(%D18C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D19C5, %msg49 = "dma.sys.sys_send"(%B149C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D15C6, %msg49 = "@core_6"(%D1C6, %msg48) {
CHECK:          %B2C6 = "system.wait_msg"(%D1C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C6 = "dma.sys.sys_wait"(%B2C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D3C6 = "dma.tensor"(%G2.0x16f800, %B2C6) : (memref<1x3x52x640xf32, strides: [1228800, 409600, 640, 1]>, none) -> (memref<1x3x52x640xf32, strides: [33280, 33280, 640, 1]>, none)
CHECK:          %R10, %B3C6 = "arith.cast"(%R0, %D3C6) {round_mode = 1}: (memref<1x3x52x640xf32, strides: [33280, 33280, 640, 1]>, none) -> (memref<1x3x52x640xf16, strides: [33280, 33280, 640, 1]>, none)
CHECK:          %R9.0x2700, %D4C6 = "dma.tensor"(%G1.0x1000, %B2C6) : (memref<1x32x1x1152xi16, strides: [36864, 1152, 1152, 1]>, none) -> (memref<1x32x1x1152xi16, strides: [1152, 1152, 1152, 1]>, none)
CHECK:          %R9.0x3000, %D5C6 = "dma.tensor"(%G1.0x0, %B2C6) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R9.0x30c0, %D6C6 = "dma.tensor"(%G1.0x1f000, %B2C6) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R15.0x2600, %D7C6 = "dma.tensor"(%G1.0x20000, %B2C6) : (memref<1x32x1x32xi16, strides: [1024, 32, 32, 1]>, none) -> (memref<1x32x1x32xi16, strides: [32, 32, 32, 1]>, none)
CHECK:          %R14.0x2200, %B4C6 = "conv.normal"(%R10, %R9.0x2700, %R9.0x3000, %C0.0, %D7C6) {kernel = [6, 6], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 2, 2, 2], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x3x52x640xf16, strides: [33280, 33280, 640, 1]>, memref<32x3x6x6xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R13.0x3d00, %B5C6 = "tsbc.s_bc"(%R0.0x580, %D7C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0x3e80, %B6C6 = "arith.sub"(%C0.0, %R14.0x2200, %D7C6) {round_mode = 0}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B7C6 = "arith.max"(%R12.0x3e80, %C-45408.0, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B8C6 = "arith.min"(%R12.0x3e80, %C45408.0, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B9C6 = "arith.mul"(%R12.0x3e80, %C1.4423828125, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B10C6 = "arith.cast"(%R12, %D7C6) {round_mode = 3}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B11C6 = "arith.mul"(%R10, %C0.693359375, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B12C6 = "arith.sub"(%R12.0x3e80, %R12, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B13C6 = "arith.cast"(%R10, %D7C6) {round_mode = 1}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B14C6 = "arith.min"(%R12.0x3e80, %C15, %D7C6) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B15C6 = "arith.max"(%R10, %C-15, %D7C6) {round_mode = 0}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si8, none) -> (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B16C6 = "arith.add_satu"(%R12.0x3e80, %C15, %C10, %D7C6) {round_mode = 1}: (memref<1x32x25x320xsi8, strides: [8000, 8000, 320, 1]>, si16, ui8, none) -> (memref<1x32x25x320xsi16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12.0x3e80, %B17C6 = "sfu.taylor_4x"(%R12, %R13.0x3d00, %D7C6) : (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B18C6 = "arith.mul"(%R12.0x3e80, %R10, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R12, %B19C6 = "arith.add"(%R10, %C1.0, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, f16, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B20C6 = "arith.div"(%C1.0, %R12, %D7C6) {iter = 3}: (f16, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R10, %B21C6 = "arith.mul"(%R10, %R14.0x2200, %D7C6) {round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none) -> (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, none)
CHECK:          %R9.0x24c0, %D8C6 = "dma.tensor"(%G1.0x14000, %B4C6) : (memref<1x64x1x288xi16, strides: [18432, 288, 288, 1]>, none) -> (memref<1x64x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R9.0x3040, %D9C6 = "dma.tensor"(%G1.0x13000, %B4C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R12, %B22C6 = "conv.normal"(%R10, %R9.0x24c0, %R9.0x3040, %C0.0, %D9C6) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x25x320xf16, strides: [8000, 8000, 320, 1]>, memref<64x32x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1e00, %B23C6 = "tsbc.s_bc"(%R0.0x580, %D9C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R10.0xf00, %B24C6 = "arith.sub"(%C0.0, %R12, %D9C6) {round_mode = 0}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B25C6 = "arith.max"(%R10.0xf00, %C-45408.0, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B26C6 = "arith.min"(%R10.0xf00, %C45408.0, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B27C6 = "arith.mul"(%R10.0xf00, %C1.4423828125, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B28C6 = "arith.cast"(%R10, %D9C6) {round_mode = 3}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B29C6 = "arith.mul"(%R9.0x400, %C0.693359375, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B30C6 = "arith.sub"(%R10.0xf00, %R10, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B31C6 = "arith.cast"(%R9.0x400, %D9C6) {round_mode = 1}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B32C6 = "arith.min"(%R10.0xf00, %C15, %D9C6) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B33C6 = "arith.max"(%R9.0x400, %C-15, %D9C6) {round_mode = 0}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B34C6 = "arith.add_satu"(%R10.0xf00, %C15, %C10, %D9C6) {round_mode = 1}: (memref<1x64x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x64x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0xf00, %B35C6 = "sfu.taylor_4x"(%R10, %R10.0x1e00, %D9C6) : (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B36C6 = "arith.mul"(%R10.0xf00, %R9.0x400, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10, %B37C6 = "arith.add"(%R9.0x400, %C1.0, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B38C6 = "arith.div"(%C1.0, %R10, %D9C6) {iter = 3}: (f16, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B39C6 = "arith.mul"(%R9.0x400, %R12, %D9C6) {round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15.0x2580, %D10C6 = "dma.tensor"(%G1.0x1e000, %B22C6) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R9.0x3080, %D11C6 = "dma.tensor"(%G1.0x1d000, %B22C6) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R10, %B40C6 = "conv.normal"(%R9.0x400, %R15.0x2580, %R9.0x3080, %C0.0, %D11C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0x1e00, %B41C6 = "tsbc.s_bc"(%R0.0x580, %D11C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R12.0xf00, %B42C6 = "arith.sub"(%C0.0, %R10, %D11C6) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B43C6 = "arith.max"(%R12.0xf00, %C-45408.0, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B44C6 = "arith.min"(%R12.0xf00, %C45408.0, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B45C6 = "arith.mul"(%R12.0xf00, %C1.4423828125, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B46C6 = "arith.cast"(%R12, %D11C6) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B47C6 = "arith.mul"(%R11, %C0.693359375, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B48C6 = "arith.sub"(%R12.0xf00, %R12, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B49C6 = "arith.cast"(%R11, %D11C6) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B50C6 = "arith.min"(%R12.0xf00, %C15, %D11C6) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B51C6 = "arith.max"(%R11, %C-15, %D11C6) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B52C6 = "arith.add_satu"(%R12.0xf00, %C15, %C10, %D11C6) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12.0xf00, %B53C6 = "sfu.taylor_4x"(%R12, %R12.0x1e00, %D11C6) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B54C6 = "arith.mul"(%R12.0xf00, %R11, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R12, %B55C6 = "arith.add"(%R11, %C1.0, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B56C6 = "arith.div"(%C1.0, %R12, %D11C6) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R11, %B57C6 = "arith.mul"(%R11, %R10, %D11C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R10.0x1040, %B58C6 = "conv.normal"(%R11, %R15.0x2600, %R9.0x30c0, %C0.0, %D11C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<32x32x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x698000b900, %D12C6 = "dma.tensor"(%R9.0x400, %B40C6) : (memref<1x64x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x64x12x160xi16, strides: [1638400, 25600, 160, 1]>, none)
CHECK:          %R9.0x2200, %B59C6 = "tsbc.s_bc"(%R0.0x580, %D12C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R9.0x1300, %B60C6 = "arith.sub"(%C0.0, %R10.0x1040, %D12C6) {round_mode = 0}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B61C6 = "arith.max"(%R9.0x1300, %C-45408.0, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B62C6 = "arith.min"(%R9.0x1300, %C45408.0, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B63C6 = "arith.mul"(%R9.0x1300, %C1.4423828125, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B64C6 = "arith.cast"(%R9.0x400, %D12C6) {round_mode = 3}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B65C6 = "arith.mul"(%R15, %C0.693359375, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B66C6 = "arith.sub"(%R9.0x1300, %R9.0x400, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B67C6 = "arith.cast"(%R15, %D12C6) {round_mode = 1}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B68C6 = "arith.min"(%R9.0x1300, %C15, %D12C6) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B69C6 = "arith.max"(%R15, %C-15, %D12C6) {round_mode = 0}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si8, none) -> (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B70C6 = "arith.add_satu"(%R9.0x1300, %C15, %C10, %D12C6) {round_mode = 1}: (memref<1x32x12x160xsi8, strides: [1920, 1920, 160, 1]>, si16, ui8, none) -> (memref<1x32x12x160xsi16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x1300, %B71C6 = "sfu.taylor_4x"(%R9.0x400, %R9.0x2200, %D12C6) : (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B72C6 = "arith.mul"(%R9.0x1300, %R15, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R9.0x400, %B73C6 = "arith.add"(%R15, %C1.0, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, f16, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B74C6 = "arith.div"(%C1.0, %R9.0x400, %D12C6) {iter = 3}: (f16, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %R15, %B75C6 = "arith.mul"(%R15, %R10.0x1040, %D12C6) {round_mode = 0}: (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xf16, strides: [1920, 1920, 160, 1]>, none)
CHECK:          %L30.0x698064b900, %D13C6 = "dma.tensor"(%R11, %B58C6) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %L30.0x69804bb900, %D14C6 = "dma.tensor"(%R15, %B75C6) : (memref<1x32x12x160xi16, strides: [1920, 1920, 160, 1]>, none) -> (memref<1x32x12x160xi16, strides: [819200, 25600, 160, 1]>, none)
CHECK:          %B76C6, %msg49 = "system.send_msg"(%D14C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D15C6, %msg49 = "dma.sys.sys_send"(%B76C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D3C7, %msg49 = "@core_7"(%D1C7, %msg48) {
CHECK:          %B2C7 = "system.wait_msg"(%D1C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D2C7 = "dma.sys.sys_wait"(%B2C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B3C7, %msg49 = "system.send_msg"(%D2C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D3C7, %msg49 = "dma.sys.sys_send"(%B3C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D21C0, %msg48 = "@core_0"(%D19C0, %msg49) {
CHECK:          %B150C0 = "system.wait_msg"(%D19C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D20C0 = "dma.sys.sys_wait"(%B150C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B151C0, %msg48 = "system.send_msg"(%D20C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D21C0, %msg48 = "dma.sys.sys_send"(%B151C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D21C1, %msg48 = "@core_1"(%D19C1, %msg49) {
CHECK:          %B150C1 = "system.wait_msg"(%D19C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D20C1 = "dma.sys.sys_wait"(%B150C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B151C1, %msg48 = "system.send_msg"(%D20C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D21C1, %msg48 = "dma.sys.sys_send"(%B151C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D21C2, %msg48 = "@core_2"(%D19C2, %msg49) {
CHECK:          %B150C2 = "system.wait_msg"(%D19C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D20C2 = "dma.sys.sys_wait"(%B150C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B151C2, %msg48 = "system.send_msg"(%D20C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D21C2, %msg48 = "dma.sys.sys_send"(%B151C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D21C3, %msg48 = "@core_3"(%D19C3, %msg49) {
CHECK:          %B150C3 = "system.wait_msg"(%D19C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D20C3 = "dma.sys.sys_wait"(%B150C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B151C3, %msg48 = "system.send_msg"(%D20C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D21C3, %msg48 = "dma.sys.sys_send"(%B151C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D21C4, %msg48 = "@core_4"(%D19C4, %msg49) {
CHECK:          %B150C4 = "system.wait_msg"(%D19C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D20C4 = "dma.sys.sys_wait"(%B150C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B151C4, %msg48 = "system.send_msg"(%D20C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D21C4, %msg48 = "dma.sys.sys_send"(%B151C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D21C5, %msg48 = "@core_5"(%D19C5, %msg49) {
CHECK:          %B150C5 = "system.wait_msg"(%D19C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D20C5 = "dma.sys.sys_wait"(%B150C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B151C5, %msg48 = "system.send_msg"(%D20C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D21C5, %msg48 = "dma.sys.sys_send"(%B151C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D17C6, %msg48 = "@core_6"(%D15C6, %msg49) {
CHECK:          %B77C6 = "system.wait_msg"(%D15C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D16C6 = "dma.sys.sys_wait"(%B77C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B78C6, %msg48 = "system.send_msg"(%D16C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D17C6, %msg48 = "dma.sys.sys_send"(%B78C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D5C7, %msg48 = "@core_7"(%D3C7, %msg49) {
CHECK:          %B4C7 = "system.wait_msg"(%D3C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D4C7 = "dma.sys.sys_wait"(%B4C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B5C7, %msg48 = "system.send_msg"(%D4C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D5C7, %msg48 = "dma.sys.sys_send"(%B5C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D41C0, %msg49 = "@core_0"(%D21C0, %msg48) {
CHECK:          %B152C0 = "system.wait_msg"(%D21C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D22C0 = "dma.sys.sys_wait"(%B152C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D23C0 = "dma.tensor"(%L30.0x69804b0000, %B152C0) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D24C0 = "dma.tensor"(%G1.0x22000, %B152C0) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D25C0 = "dma.tensor"(%G1.0x21000, %B152C0) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B153C0 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D25C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %D26C0 = "dma.tensor"(%L30.0x6980640000, %B152C0) : (memref<1x32x20x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x20x160xi16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R5, %D27C0 = "dma.tensor"(%G1.0x27000, %B152C0) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D28C0 = "dma.tensor"(%G1.0x28000, %B152C0) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x15c0, %B154C0 = "tsbc.s_bc"(%R0.0x580, %D28C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3cc0, %B155C0 = "arith.sub"(%C0.0, %R3, %D28C0) {round_mode = 0}: (f16, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x3cc0, %B156C0 = "arith.max"(%R1.0x3cc0, %C-45408.0, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x3cc0, %B157C0 = "arith.min"(%R1.0x3cc0, %C45408.0, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B158C0 = "arith.mul"(%R1.0x3cc0, %C1.4423828125, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B159C0 = "arith.cast"(%R1.0x23c0, %D28C0) {round_mode = 3}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B160C0 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B161C0 = "arith.sub"(%R1.0x3cc0, %R1.0x23c0, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x3cc0, %B162C0 = "arith.cast"(%R0.0x1a40, %D28C0) {round_mode = 1}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B163C0 = "arith.min"(%R1.0x3cc0, %C15, %D28C0) {round_mode = 0}: (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, si8, none) -> (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x3cc0, %B164C0 = "arith.max"(%R0.0x1a40, %C-15, %D28C0) {round_mode = 0}: (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, si8, none) -> (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B165C0 = "arith.add_satu"(%R1.0x3cc0, %C15, %C10, %D28C0) {round_mode = 1}: (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, si16, ui8, none) -> (memref<1x32x20x160xsi16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x3cc0, %B166C0 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x15c0, %D28C0) : (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B167C0 = "arith.mul"(%R1.0x3cc0, %R0.0x1a40, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B168C0 = "arith.add"(%R0.0x1a40, %C1.0, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B169C0 = "arith.div"(%C1.0, %R1.0x23c0, %D28C0) {iter = 3}: (f16, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B170C0 = "arith.mul"(%R0.0x1a40, %R3, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0, %B171C0 = "arith.add"(%R1.0x900, %R0.0x1a40, %D28C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [0, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [0, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R4, %D29C0 = "dma.tensor"(%L30.0x6980000000, %B153C0) : (memref<1x64x20x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x20x160xi16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B172C0 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D29C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.0x3200, %B173C0 = "tsbc.s_bc"(%R0.0x580, %D29C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1900, %B174C0 = "arith.sub"(%C0.0, %R0.0x1a40, %D29C0) {round_mode = 0}: (f16, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.0x1900, %B175C0 = "arith.max"(%R2.0x1900, %C-45408.0, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.0x1900, %B176C0 = "arith.min"(%R2.0x1900, %C45408.0, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B177C0 = "arith.mul"(%R2.0x1900, %C1.4423828125, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %B178C0 = "arith.cast"(%R2, %D29C0) {round_mode = 3}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B179C0 = "arith.mul"(%R1.0x900, %C0.693359375, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B180C0 = "arith.sub"(%R2.0x1900, %R2, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.0x1900, %B181C0 = "arith.cast"(%R1.0x900, %D29C0) {round_mode = 1}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %B182C0 = "arith.min"(%R2.0x1900, %C15, %D29C0) {round_mode = 0}: (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, si8, none) -> (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.0x1900, %B183C0 = "arith.max"(%R1.0x900, %C-15, %D29C0) {round_mode = 0}: (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, si8, none) -> (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %B184C0 = "arith.add_satu"(%R2.0x1900, %C15, %C10, %D29C0) {round_mode = 1}: (memref<1x32x20x160xsi8, strides: [3200, 3200, 160, 1]>, si16, ui8, none) -> (memref<1x32x20x160xsi16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.0x1900, %B185C0 = "sfu.taylor_4x"(%R2, %R2.0x3200, %D29C0) : (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %B186C0 = "arith.mul"(%R2.0x1900, %R1.0x900, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B187C0 = "arith.add"(%R1.0x900, %C1.0, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %B188C0 = "arith.div"(%C1.0, %R2, %D29C0) {iter = 3}: (f16, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1.0x900, %B189C0 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D29C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D30C0 = "dma.tensor"(%G1.0x29000, %B172C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B190C0 = "arith.copy"(%R0, %D30C0) {round_mode = 0}: (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2.L0x20, %B191C0 = "tsbc.l_copy"(%R1.0x900, %D30C0) : (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x32x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D31C0 = "dma.tensor"(%G1.0x2a000, %B189C0) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B192C0 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D31C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x3200, %B193C0 = "tsbc.s_bc"(%R0.0x580, %D31C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1900, %B194C0 = "arith.sub"(%C0.0, %R0, %D31C0) {round_mode = 0}: (f16, memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x1900, %B195C0 = "arith.max"(%R3.0x1900, %C-45408.0, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x1900, %B196C0 = "arith.min"(%R3.0x1900, %C45408.0, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3, %B197C0 = "arith.mul"(%R3.0x1900, %C1.4423828125, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B198C0 = "arith.cast"(%R3, %D31C0) {round_mode = 3}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3, %B199C0 = "arith.mul"(%R2, %C0.693359375, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3, %B200C0 = "arith.sub"(%R3.0x1900, %R3, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x1900, %B201C0 = "arith.cast"(%R2, %D31C0) {round_mode = 1}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B202C0 = "arith.min"(%R3.0x1900, %C15, %D31C0) {round_mode = 0}: (memref<1x64x20x160xsi8, strides: [3200, 3200, 160, 1]>, si8, none) -> (memref<1x64x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x1900, %B203C0 = "arith.max"(%R2, %C-15, %D31C0) {round_mode = 0}: (memref<1x64x20x160xsi8, strides: [3200, 3200, 160, 1]>, si8, none) -> (memref<1x64x20x160xsi8, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B204C0 = "arith.add_satu"(%R3.0x1900, %C15, %C10, %D31C0) {round_mode = 1}: (memref<1x64x20x160xsi8, strides: [3200, 3200, 160, 1]>, si16, ui8, none) -> (memref<1x64x20x160xsi16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3.0x1900, %B205C0 = "sfu.taylor_4x"(%R3, %R3.0x3200, %D31C0) : (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B206C0 = "arith.mul"(%R3.0x1900, %R2, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R3, %B207C0 = "arith.add"(%R2, %C1.0, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, f16, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B208C0 = "arith.div"(%C1.0, %R3, %D31C0) {iter = 3}: (f16, memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R2, %B209C0 = "arith.mul"(%R2, %R0, %D31C0) {round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none) -> (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, none)
CHECK:          %R1, %D32C0 = "dma.tensor"(%G1.0x2d000, %B192C0) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D33C0 = "dma.tensor"(%G1.0x2c000, %B192C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B210C0 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D33C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x20x160xf16, strides: [3200, 3200, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B211C0 = "tsbc.s_bc"(%R0.0x580, %D33C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B212C0 = "arith.sub"(%C0.0, %R3, %D33C0) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B213C0 = "arith.max"(%R1.0x1580, %C-45408.0, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B214C0 = "arith.min"(%R1.0x1580, %C45408.0, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B215C0 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B216C0 = "arith.cast"(%R1.0x900, %D33C0) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B217C0 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B218C0 = "arith.sub"(%R1.0x1580, %R1.0x900, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B219C0 = "arith.cast"(%R0.0x1cc0, %D33C0) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B220C0 = "arith.min"(%R1.0x1580, %C15, %D33C0) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B221C0 = "arith.max"(%R0.0x1cc0, %C-15, %D33C0) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B222C0 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D33C0) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B223C0 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D33C0) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B224C0 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B225C0 = "arith.add"(%R0.0x1cc0, %C1.0, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B226C0 = "arith.div"(%C1.0, %R1.0x900, %D33C0) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B227C0 = "arith.mul"(%R0.0x1cc0, %R3, %D33C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D34C0 = "dma.tensor"(%G1.0x52000, %B210C0) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D35C0 = "dma.tensor"(%G1.0x51000, %B210C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B228C0 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D35C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D36C0 = "dma.tensor"(%G1.0x56000, %B227C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D37C0 = "dma.tensor"(%G1.0x57000, %B227C0) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B229C0 = "tsbc.s_bc"(%R0.0x580, %D37C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B230C0 = "arith.sub"(%C0.0, %R1.0x900, %D37C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B231C0 = "arith.max"(%R3.0x640, %C-45408.0, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B232C0 = "arith.min"(%R3.0x640, %C45408.0, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B233C0 = "arith.mul"(%R3.0x640, %C1.4423828125, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B234C0 = "arith.cast"(%R3, %D37C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B235C0 = "arith.mul"(%R2, %C0.693359375, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B236C0 = "arith.sub"(%R3.0x640, %R3, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B237C0 = "arith.cast"(%R2, %D37C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B238C0 = "arith.min"(%R3.0x640, %C15, %D37C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B239C0 = "arith.max"(%R2, %C-15, %D37C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B240C0 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D37C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B241C0 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D37C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B242C0 = "arith.mul"(%R3.0x640, %R2, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B243C0 = "arith.add"(%R2, %C1.0, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B244C0 = "arith.div"(%C1.0, %R3, %D37C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B245C0 = "arith.mul"(%R2, %R1.0x900, %D37C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B246C0 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D37C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980320000, %D38C0 = "dma.tensor"(%R0.0x1cc0, %B228C0) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B247C0 = "tsbc.s_bc"(%R0.0x580, %D38C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B248C0 = "arith.sub"(%C0.0, %R1.0xf40, %D38C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B249C0 = "arith.max"(%R0.0x2300, %C-45408.0, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B250C0 = "arith.min"(%R0.0x2300, %C45408.0, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B251C0 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B252C0 = "arith.cast"(%R0.0x1cc0, %D38C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B253C0 = "arith.mul"(%R4, %C0.693359375, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B254C0 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B255C0 = "arith.cast"(%R4, %D38C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B256C0 = "arith.min"(%R0.0x2300, %C15, %D38C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B257C0 = "arith.max"(%R4, %C-15, %D38C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B258C0 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D38C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B259C0 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D38C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B260C0 = "arith.mul"(%R0.0x2300, %R4, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B261C0 = "arith.add"(%R4, %C1.0, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B262C0 = "arith.div"(%C1.0, %R0.0x1cc0, %D38C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B263C0 = "arith.mul"(%R4, %R1.0xf40, %D38C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d0000, %D39C0 = "dma.tensor"(%R2, %B246C0) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980898000, %D40C0 = "dma.tensor"(%R4, %B263C0) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B264C0, %msg49 = "system.send_msg"(%D40C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D41C0, %msg49 = "dma.sys.sys_send"(%B264C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D41C1, %msg49 = "@core_1"(%D21C1, %msg48) {
CHECK:          %B152C1 = "system.wait_msg"(%D21C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D22C1 = "dma.sys.sys_wait"(%B152C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D23C1 = "dma.tensor"(%L30.0x69804b1680, %B152C1) : (memref<1x32x23x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x23x160xi16, strides: [3680, 3680, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D24C1 = "dma.tensor"(%G1.0x22000, %B152C1) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D25C1 = "dma.tensor"(%G1.0x21000, %B152C1) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B153C1 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D25C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x23x160xf16, strides: [3680, 3680, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D26C1 = "dma.tensor"(%L30.0x69806417c0, %B152C1) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D27C1 = "dma.tensor"(%G1.0x27000, %B152C1) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D28C1 = "dma.tensor"(%G1.0x28000, %B152C1) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B154C1 = "tsbc.s_bc"(%R0.0x580, %D28C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B155C1 = "arith.sub"(%C0.0, %R3, %D28C1) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B156C1 = "arith.max"(%R1.0x3e00, %C-45408.0, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B157C1 = "arith.min"(%R1.0x3e00, %C45408.0, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B158C1 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B159C1 = "arith.cast"(%R1.0x23c0, %D28C1) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B160C1 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B161C1 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B162C1 = "arith.cast"(%R0.0x1a40, %D28C1) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B163C1 = "arith.min"(%R1.0x3e00, %C15, %D28C1) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B164C1 = "arith.max"(%R0.0x1a40, %C-15, %D28C1) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B165C1 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D28C1) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B166C1 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D28C1) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B167C1 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B168C1 = "arith.add"(%R0.0x1a40, %C1.0, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B169C1 = "arith.div"(%C1.0, %R1.0x23c0, %D28C1) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B170C1 = "arith.mul"(%R0.0x1a40, %R3, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B171C1 = "arith.add"(%R1.0x900, %R0.0x1a40, %D28C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D29C1 = "dma.tensor"(%L30.0x69800017c0, %B153C1) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B172C1 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D29C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B173C1 = "tsbc.s_bc"(%R0.0x580, %D29C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B174C1 = "arith.sub"(%C0.0, %R0.0x1a40, %D29C1) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B175C1 = "arith.max"(%R2.0x1a40, %C-45408.0, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B176C1 = "arith.min"(%R2.0x1a40, %C45408.0, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B177C1 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B178C1 = "arith.cast"(%R2, %D29C1) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B179C1 = "arith.mul"(%R1.0x900, %C0.693359375, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B180C1 = "arith.sub"(%R2.0x1a40, %R2, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B181C1 = "arith.cast"(%R1.0x900, %D29C1) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B182C1 = "arith.min"(%R2.0x1a40, %C15, %D29C1) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B183C1 = "arith.max"(%R1.0x900, %C-15, %D29C1) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B184C1 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D29C1) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B185C1 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D29C1) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B186C1 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B187C1 = "arith.add"(%R1.0x900, %C1.0, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B188C1 = "arith.div"(%C1.0, %R2, %D29C1) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B189C1 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D29C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D30C1 = "dma.tensor"(%G1.0x29000, %B172C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B190C1 = "arith.copy"(%R0, %D30C1) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B191C1 = "tsbc.l_copy"(%R1.0x900, %D30C1) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D31C1 = "dma.tensor"(%G1.0x2a000, %B189C1) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B192C1 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D31C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B193C1 = "tsbc.s_bc"(%R0.0x580, %D31C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B194C1 = "arith.sub"(%C0.0, %R0, %D31C1) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B195C1 = "arith.max"(%R3.0x1a40, %C-45408.0, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B196C1 = "arith.min"(%R3.0x1a40, %C45408.0, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B197C1 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B198C1 = "arith.cast"(%R3, %D31C1) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B199C1 = "arith.mul"(%R2, %C0.693359375, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B200C1 = "arith.sub"(%R3.0x1a40, %R3, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B201C1 = "arith.cast"(%R2, %D31C1) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B202C1 = "arith.min"(%R3.0x1a40, %C15, %D31C1) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B203C1 = "arith.max"(%R2, %C-15, %D31C1) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B204C1 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D31C1) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B205C1 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D31C1) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B206C1 = "arith.mul"(%R3.0x1a40, %R2, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B207C1 = "arith.add"(%R2, %C1.0, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B208C1 = "arith.div"(%C1.0, %R3, %D31C1) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B209C1 = "arith.mul"(%R2, %R0, %D31C1) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D32C1 = "dma.tensor"(%G1.0x2d000, %B192C1) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D33C1 = "dma.tensor"(%G1.0x2c000, %B192C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B210C1 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D33C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B211C1 = "tsbc.s_bc"(%R0.0x580, %D33C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B212C1 = "arith.sub"(%C0.0, %R3, %D33C1) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B213C1 = "arith.max"(%R1.0x1580, %C-45408.0, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B214C1 = "arith.min"(%R1.0x1580, %C45408.0, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B215C1 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B216C1 = "arith.cast"(%R1.0x900, %D33C1) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B217C1 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B218C1 = "arith.sub"(%R1.0x1580, %R1.0x900, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B219C1 = "arith.cast"(%R0.0x1cc0, %D33C1) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B220C1 = "arith.min"(%R1.0x1580, %C15, %D33C1) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B221C1 = "arith.max"(%R0.0x1cc0, %C-15, %D33C1) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B222C1 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D33C1) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B223C1 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D33C1) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B224C1 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B225C1 = "arith.add"(%R0.0x1cc0, %C1.0, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B226C1 = "arith.div"(%C1.0, %R1.0x900, %D33C1) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B227C1 = "arith.mul"(%R0.0x1cc0, %R3, %D33C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D34C1 = "dma.tensor"(%G1.0x52000, %B210C1) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D35C1 = "dma.tensor"(%G1.0x51000, %B210C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B228C1 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D35C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D36C1 = "dma.tensor"(%G1.0x56000, %B227C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D37C1 = "dma.tensor"(%G1.0x57000, %B227C1) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B229C1 = "tsbc.s_bc"(%R0.0x580, %D37C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B230C1 = "arith.sub"(%C0.0, %R1.0x900, %D37C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B231C1 = "arith.max"(%R3.0x640, %C-45408.0, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B232C1 = "arith.min"(%R3.0x640, %C45408.0, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B233C1 = "arith.mul"(%R3.0x640, %C1.4423828125, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B234C1 = "arith.cast"(%R3, %D37C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B235C1 = "arith.mul"(%R2, %C0.693359375, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B236C1 = "arith.sub"(%R3.0x640, %R3, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B237C1 = "arith.cast"(%R2, %D37C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B238C1 = "arith.min"(%R3.0x640, %C15, %D37C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B239C1 = "arith.max"(%R2, %C-15, %D37C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B240C1 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D37C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B241C1 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D37C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B242C1 = "arith.mul"(%R3.0x640, %R2, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B243C1 = "arith.add"(%R2, %C1.0, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B244C1 = "arith.div"(%C1.0, %R3, %D37C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B245C1 = "arith.mul"(%R2, %R1.0x900, %D37C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B246C1 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D37C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980320640, %D38C1 = "dma.tensor"(%R0.0x1cc0, %B228C1) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B247C1 = "tsbc.s_bc"(%R0.0x580, %D38C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B248C1 = "arith.sub"(%C0.0, %R1.0xf40, %D38C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B249C1 = "arith.max"(%R0.0x2300, %C-45408.0, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B250C1 = "arith.min"(%R0.0x2300, %C45408.0, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B251C1 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B252C1 = "arith.cast"(%R0.0x1cc0, %D38C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B253C1 = "arith.mul"(%R4, %C0.693359375, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B254C1 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B255C1 = "arith.cast"(%R4, %D38C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B256C1 = "arith.min"(%R0.0x2300, %C15, %D38C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B257C1 = "arith.max"(%R4, %C-15, %D38C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B258C1 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D38C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B259C1 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D38C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B260C1 = "arith.mul"(%R0.0x2300, %R4, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B261C1 = "arith.add"(%R4, %C1.0, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B262C1 = "arith.div"(%C1.0, %R0.0x1cc0, %D38C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B263C1 = "arith.mul"(%R4, %R1.0xf40, %D38C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d0640, %D39C1 = "dma.tensor"(%R2, %B246C1) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980898640, %D40C1 = "dma.tensor"(%R4, %B263C1) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B264C1, %msg49 = "system.send_msg"(%D40C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D41C1, %msg49 = "dma.sys.sys_send"(%B264C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D41C2, %msg49 = "@core_2"(%D21C2, %msg48) {
CHECK:          %B152C2 = "system.wait_msg"(%D21C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D22C2 = "dma.sys.sys_wait"(%B152C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D23C2 = "dma.tensor"(%L30.0x69804b2f80, %B152C2) : (memref<1x32x23x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x23x160xi16, strides: [3680, 3680, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D24C2 = "dma.tensor"(%G1.0x22000, %B152C2) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D25C2 = "dma.tensor"(%G1.0x21000, %B152C2) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B153C2 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D25C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x23x160xf16, strides: [3680, 3680, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D26C2 = "dma.tensor"(%L30.0x69806430c0, %B152C2) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D27C2 = "dma.tensor"(%G1.0x27000, %B152C2) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D28C2 = "dma.tensor"(%G1.0x28000, %B152C2) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B154C2 = "tsbc.s_bc"(%R0.0x580, %D28C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B155C2 = "arith.sub"(%C0.0, %R3, %D28C2) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B156C2 = "arith.max"(%R1.0x3e00, %C-45408.0, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B157C2 = "arith.min"(%R1.0x3e00, %C45408.0, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B158C2 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B159C2 = "arith.cast"(%R1.0x23c0, %D28C2) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B160C2 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B161C2 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B162C2 = "arith.cast"(%R0.0x1a40, %D28C2) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B163C2 = "arith.min"(%R1.0x3e00, %C15, %D28C2) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B164C2 = "arith.max"(%R0.0x1a40, %C-15, %D28C2) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B165C2 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D28C2) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B166C2 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D28C2) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B167C2 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B168C2 = "arith.add"(%R0.0x1a40, %C1.0, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B169C2 = "arith.div"(%C1.0, %R1.0x23c0, %D28C2) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B170C2 = "arith.mul"(%R0.0x1a40, %R3, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B171C2 = "arith.add"(%R1.0x900, %R0.0x1a40, %D28C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D29C2 = "dma.tensor"(%L30.0x69800030c0, %B153C2) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B172C2 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D29C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B173C2 = "tsbc.s_bc"(%R0.0x580, %D29C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B174C2 = "arith.sub"(%C0.0, %R0.0x1a40, %D29C2) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B175C2 = "arith.max"(%R2.0x1a40, %C-45408.0, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B176C2 = "arith.min"(%R2.0x1a40, %C45408.0, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B177C2 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B178C2 = "arith.cast"(%R2, %D29C2) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B179C2 = "arith.mul"(%R1.0x900, %C0.693359375, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B180C2 = "arith.sub"(%R2.0x1a40, %R2, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B181C2 = "arith.cast"(%R1.0x900, %D29C2) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B182C2 = "arith.min"(%R2.0x1a40, %C15, %D29C2) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B183C2 = "arith.max"(%R1.0x900, %C-15, %D29C2) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B184C2 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D29C2) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B185C2 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D29C2) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B186C2 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B187C2 = "arith.add"(%R1.0x900, %C1.0, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B188C2 = "arith.div"(%C1.0, %R2, %D29C2) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B189C2 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D29C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D30C2 = "dma.tensor"(%G1.0x29000, %B172C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B190C2 = "arith.copy"(%R0, %D30C2) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B191C2 = "tsbc.l_copy"(%R1.0x900, %D30C2) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D31C2 = "dma.tensor"(%G1.0x2a000, %B189C2) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B192C2 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D31C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B193C2 = "tsbc.s_bc"(%R0.0x580, %D31C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B194C2 = "arith.sub"(%C0.0, %R0, %D31C2) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B195C2 = "arith.max"(%R3.0x1a40, %C-45408.0, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B196C2 = "arith.min"(%R3.0x1a40, %C45408.0, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B197C2 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B198C2 = "arith.cast"(%R3, %D31C2) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B199C2 = "arith.mul"(%R2, %C0.693359375, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B200C2 = "arith.sub"(%R3.0x1a40, %R3, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B201C2 = "arith.cast"(%R2, %D31C2) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B202C2 = "arith.min"(%R3.0x1a40, %C15, %D31C2) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B203C2 = "arith.max"(%R2, %C-15, %D31C2) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B204C2 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D31C2) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B205C2 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D31C2) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B206C2 = "arith.mul"(%R3.0x1a40, %R2, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B207C2 = "arith.add"(%R2, %C1.0, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B208C2 = "arith.div"(%C1.0, %R3, %D31C2) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B209C2 = "arith.mul"(%R2, %R0, %D31C2) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D32C2 = "dma.tensor"(%G1.0x2d000, %B192C2) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D33C2 = "dma.tensor"(%G1.0x2c000, %B192C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B210C2 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D33C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B211C2 = "tsbc.s_bc"(%R0.0x580, %D33C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B212C2 = "arith.sub"(%C0.0, %R3, %D33C2) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B213C2 = "arith.max"(%R1.0x1580, %C-45408.0, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B214C2 = "arith.min"(%R1.0x1580, %C45408.0, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B215C2 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B216C2 = "arith.cast"(%R1.0x900, %D33C2) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B217C2 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B218C2 = "arith.sub"(%R1.0x1580, %R1.0x900, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B219C2 = "arith.cast"(%R0.0x1cc0, %D33C2) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B220C2 = "arith.min"(%R1.0x1580, %C15, %D33C2) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B221C2 = "arith.max"(%R0.0x1cc0, %C-15, %D33C2) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B222C2 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D33C2) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B223C2 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D33C2) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B224C2 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B225C2 = "arith.add"(%R0.0x1cc0, %C1.0, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B226C2 = "arith.div"(%C1.0, %R1.0x900, %D33C2) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B227C2 = "arith.mul"(%R0.0x1cc0, %R3, %D33C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D34C2 = "dma.tensor"(%G1.0x52000, %B210C2) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D35C2 = "dma.tensor"(%G1.0x51000, %B210C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B228C2 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D35C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D36C2 = "dma.tensor"(%G1.0x56000, %B227C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D37C2 = "dma.tensor"(%G1.0x57000, %B227C2) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B229C2 = "tsbc.s_bc"(%R0.0x580, %D37C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B230C2 = "arith.sub"(%C0.0, %R1.0x900, %D37C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B231C2 = "arith.max"(%R3.0x640, %C-45408.0, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B232C2 = "arith.min"(%R3.0x640, %C45408.0, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B233C2 = "arith.mul"(%R3.0x640, %C1.4423828125, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B234C2 = "arith.cast"(%R3, %D37C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B235C2 = "arith.mul"(%R2, %C0.693359375, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B236C2 = "arith.sub"(%R3.0x640, %R3, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B237C2 = "arith.cast"(%R2, %D37C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B238C2 = "arith.min"(%R3.0x640, %C15, %D37C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B239C2 = "arith.max"(%R2, %C-15, %D37C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B240C2 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D37C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B241C2 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D37C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B242C2 = "arith.mul"(%R3.0x640, %R2, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B243C2 = "arith.add"(%R2, %C1.0, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B244C2 = "arith.div"(%C1.0, %R3, %D37C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B245C2 = "arith.mul"(%R2, %R1.0x900, %D37C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B246C2 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D37C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980320c80, %D38C2 = "dma.tensor"(%R0.0x1cc0, %B228C2) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B247C2 = "tsbc.s_bc"(%R0.0x580, %D38C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B248C2 = "arith.sub"(%C0.0, %R1.0xf40, %D38C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B249C2 = "arith.max"(%R0.0x2300, %C-45408.0, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B250C2 = "arith.min"(%R0.0x2300, %C45408.0, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B251C2 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B252C2 = "arith.cast"(%R0.0x1cc0, %D38C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B253C2 = "arith.mul"(%R4, %C0.693359375, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B254C2 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B255C2 = "arith.cast"(%R4, %D38C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B256C2 = "arith.min"(%R0.0x2300, %C15, %D38C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B257C2 = "arith.max"(%R4, %C-15, %D38C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B258C2 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D38C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B259C2 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D38C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B260C2 = "arith.mul"(%R0.0x2300, %R4, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B261C2 = "arith.add"(%R4, %C1.0, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B262C2 = "arith.div"(%C1.0, %R0.0x1cc0, %D38C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B263C2 = "arith.mul"(%R4, %R1.0xf40, %D38C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d0c80, %D39C2 = "dma.tensor"(%R2, %B246C2) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980898c80, %D40C2 = "dma.tensor"(%R4, %B263C2) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B264C2, %msg49 = "system.send_msg"(%D40C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D41C2, %msg49 = "dma.sys.sys_send"(%B264C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D41C3, %msg49 = "@core_3"(%D21C3, %msg48) {
CHECK:          %B152C3 = "system.wait_msg"(%D21C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D22C3 = "dma.sys.sys_wait"(%B152C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D23C3 = "dma.tensor"(%L30.0x69804b4880, %B152C3) : (memref<1x32x23x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x23x160xi16, strides: [3680, 3680, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D24C3 = "dma.tensor"(%G1.0x22000, %B152C3) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D25C3 = "dma.tensor"(%G1.0x21000, %B152C3) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B153C3 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D25C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x23x160xf16, strides: [3680, 3680, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D26C3 = "dma.tensor"(%L30.0x69806449c0, %B152C3) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D27C3 = "dma.tensor"(%G1.0x27000, %B152C3) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D28C3 = "dma.tensor"(%G1.0x28000, %B152C3) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B154C3 = "tsbc.s_bc"(%R0.0x580, %D28C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B155C3 = "arith.sub"(%C0.0, %R3, %D28C3) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B156C3 = "arith.max"(%R1.0x3e00, %C-45408.0, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B157C3 = "arith.min"(%R1.0x3e00, %C45408.0, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B158C3 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B159C3 = "arith.cast"(%R1.0x23c0, %D28C3) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B160C3 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B161C3 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B162C3 = "arith.cast"(%R0.0x1a40, %D28C3) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B163C3 = "arith.min"(%R1.0x3e00, %C15, %D28C3) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B164C3 = "arith.max"(%R0.0x1a40, %C-15, %D28C3) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B165C3 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D28C3) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B166C3 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D28C3) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B167C3 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B168C3 = "arith.add"(%R0.0x1a40, %C1.0, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B169C3 = "arith.div"(%C1.0, %R1.0x23c0, %D28C3) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B170C3 = "arith.mul"(%R0.0x1a40, %R3, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B171C3 = "arith.add"(%R1.0x900, %R0.0x1a40, %D28C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D29C3 = "dma.tensor"(%L30.0x69800049c0, %B153C3) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B172C3 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D29C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B173C3 = "tsbc.s_bc"(%R0.0x580, %D29C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B174C3 = "arith.sub"(%C0.0, %R0.0x1a40, %D29C3) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B175C3 = "arith.max"(%R2.0x1a40, %C-45408.0, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B176C3 = "arith.min"(%R2.0x1a40, %C45408.0, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B177C3 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B178C3 = "arith.cast"(%R2, %D29C3) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B179C3 = "arith.mul"(%R1.0x900, %C0.693359375, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B180C3 = "arith.sub"(%R2.0x1a40, %R2, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B181C3 = "arith.cast"(%R1.0x900, %D29C3) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B182C3 = "arith.min"(%R2.0x1a40, %C15, %D29C3) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B183C3 = "arith.max"(%R1.0x900, %C-15, %D29C3) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B184C3 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D29C3) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B185C3 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D29C3) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B186C3 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B187C3 = "arith.add"(%R1.0x900, %C1.0, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B188C3 = "arith.div"(%C1.0, %R2, %D29C3) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B189C3 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D29C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D30C3 = "dma.tensor"(%G1.0x29000, %B172C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B190C3 = "arith.copy"(%R0, %D30C3) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B191C3 = "tsbc.l_copy"(%R1.0x900, %D30C3) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D31C3 = "dma.tensor"(%G1.0x2a000, %B189C3) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B192C3 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D31C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B193C3 = "tsbc.s_bc"(%R0.0x580, %D31C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B194C3 = "arith.sub"(%C0.0, %R0, %D31C3) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B195C3 = "arith.max"(%R3.0x1a40, %C-45408.0, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B196C3 = "arith.min"(%R3.0x1a40, %C45408.0, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B197C3 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B198C3 = "arith.cast"(%R3, %D31C3) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B199C3 = "arith.mul"(%R2, %C0.693359375, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B200C3 = "arith.sub"(%R3.0x1a40, %R3, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B201C3 = "arith.cast"(%R2, %D31C3) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B202C3 = "arith.min"(%R3.0x1a40, %C15, %D31C3) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B203C3 = "arith.max"(%R2, %C-15, %D31C3) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B204C3 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D31C3) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B205C3 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D31C3) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B206C3 = "arith.mul"(%R3.0x1a40, %R2, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B207C3 = "arith.add"(%R2, %C1.0, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B208C3 = "arith.div"(%C1.0, %R3, %D31C3) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B209C3 = "arith.mul"(%R2, %R0, %D31C3) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D32C3 = "dma.tensor"(%G1.0x2d000, %B192C3) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D33C3 = "dma.tensor"(%G1.0x2c000, %B192C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B210C3 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D33C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B211C3 = "tsbc.s_bc"(%R0.0x580, %D33C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B212C3 = "arith.sub"(%C0.0, %R3, %D33C3) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B213C3 = "arith.max"(%R1.0x1580, %C-45408.0, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B214C3 = "arith.min"(%R1.0x1580, %C45408.0, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B215C3 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B216C3 = "arith.cast"(%R1.0x900, %D33C3) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B217C3 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B218C3 = "arith.sub"(%R1.0x1580, %R1.0x900, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B219C3 = "arith.cast"(%R0.0x1cc0, %D33C3) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B220C3 = "arith.min"(%R1.0x1580, %C15, %D33C3) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B221C3 = "arith.max"(%R0.0x1cc0, %C-15, %D33C3) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B222C3 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D33C3) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B223C3 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D33C3) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B224C3 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B225C3 = "arith.add"(%R0.0x1cc0, %C1.0, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B226C3 = "arith.div"(%C1.0, %R1.0x900, %D33C3) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B227C3 = "arith.mul"(%R0.0x1cc0, %R3, %D33C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D34C3 = "dma.tensor"(%G1.0x52000, %B210C3) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D35C3 = "dma.tensor"(%G1.0x51000, %B210C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B228C3 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D35C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D36C3 = "dma.tensor"(%G1.0x56000, %B227C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D37C3 = "dma.tensor"(%G1.0x57000, %B227C3) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B229C3 = "tsbc.s_bc"(%R0.0x580, %D37C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B230C3 = "arith.sub"(%C0.0, %R1.0x900, %D37C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B231C3 = "arith.max"(%R3.0x640, %C-45408.0, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B232C3 = "arith.min"(%R3.0x640, %C45408.0, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B233C3 = "arith.mul"(%R3.0x640, %C1.4423828125, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B234C3 = "arith.cast"(%R3, %D37C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B235C3 = "arith.mul"(%R2, %C0.693359375, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B236C3 = "arith.sub"(%R3.0x640, %R3, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B237C3 = "arith.cast"(%R2, %D37C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B238C3 = "arith.min"(%R3.0x640, %C15, %D37C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B239C3 = "arith.max"(%R2, %C-15, %D37C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B240C3 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D37C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B241C3 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D37C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B242C3 = "arith.mul"(%R3.0x640, %R2, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B243C3 = "arith.add"(%R2, %C1.0, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B244C3 = "arith.div"(%C1.0, %R3, %D37C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B245C3 = "arith.mul"(%R2, %R1.0x900, %D37C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B246C3 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D37C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69803212c0, %D38C3 = "dma.tensor"(%R0.0x1cc0, %B228C3) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B247C3 = "tsbc.s_bc"(%R0.0x580, %D38C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B248C3 = "arith.sub"(%C0.0, %R1.0xf40, %D38C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B249C3 = "arith.max"(%R0.0x2300, %C-45408.0, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B250C3 = "arith.min"(%R0.0x2300, %C45408.0, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B251C3 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B252C3 = "arith.cast"(%R0.0x1cc0, %D38C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B253C3 = "arith.mul"(%R4, %C0.693359375, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B254C3 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B255C3 = "arith.cast"(%R4, %D38C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B256C3 = "arith.min"(%R0.0x2300, %C15, %D38C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B257C3 = "arith.max"(%R4, %C-15, %D38C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B258C3 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D38C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B259C3 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D38C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B260C3 = "arith.mul"(%R0.0x2300, %R4, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B261C3 = "arith.add"(%R4, %C1.0, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B262C3 = "arith.div"(%C1.0, %R0.0x1cc0, %D38C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B263C3 = "arith.mul"(%R4, %R1.0xf40, %D38C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d12c0, %D39C3 = "dma.tensor"(%R2, %B246C3) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x69808992c0, %D40C3 = "dma.tensor"(%R4, %B263C3) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B264C3, %msg49 = "system.send_msg"(%D40C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D41C3, %msg49 = "dma.sys.sys_send"(%B264C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D41C4, %msg49 = "@core_4"(%D21C4, %msg48) {
CHECK:          %B152C4 = "system.wait_msg"(%D21C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D22C4 = "dma.sys.sys_wait"(%B152C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D23C4 = "dma.tensor"(%L30.0x69804b6180, %B152C4) : (memref<1x32x23x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x23x160xi16, strides: [3680, 3680, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D24C4 = "dma.tensor"(%G1.0x22000, %B152C4) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D25C4 = "dma.tensor"(%G1.0x21000, %B152C4) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B153C4 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D25C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x23x160xf16, strides: [3680, 3680, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D26C4 = "dma.tensor"(%L30.0x69806462c0, %B152C4) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D27C4 = "dma.tensor"(%G1.0x27000, %B152C4) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D28C4 = "dma.tensor"(%G1.0x28000, %B152C4) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B154C4 = "tsbc.s_bc"(%R0.0x580, %D28C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B155C4 = "arith.sub"(%C0.0, %R3, %D28C4) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B156C4 = "arith.max"(%R1.0x3e00, %C-45408.0, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B157C4 = "arith.min"(%R1.0x3e00, %C45408.0, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B158C4 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B159C4 = "arith.cast"(%R1.0x23c0, %D28C4) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B160C4 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B161C4 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B162C4 = "arith.cast"(%R0.0x1a40, %D28C4) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B163C4 = "arith.min"(%R1.0x3e00, %C15, %D28C4) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B164C4 = "arith.max"(%R0.0x1a40, %C-15, %D28C4) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B165C4 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D28C4) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B166C4 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D28C4) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B167C4 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B168C4 = "arith.add"(%R0.0x1a40, %C1.0, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B169C4 = "arith.div"(%C1.0, %R1.0x23c0, %D28C4) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B170C4 = "arith.mul"(%R0.0x1a40, %R3, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B171C4 = "arith.add"(%R1.0x900, %R0.0x1a40, %D28C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D29C4 = "dma.tensor"(%L30.0x69800062c0, %B153C4) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B172C4 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D29C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B173C4 = "tsbc.s_bc"(%R0.0x580, %D29C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B174C4 = "arith.sub"(%C0.0, %R0.0x1a40, %D29C4) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B175C4 = "arith.max"(%R2.0x1a40, %C-45408.0, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B176C4 = "arith.min"(%R2.0x1a40, %C45408.0, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B177C4 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B178C4 = "arith.cast"(%R2, %D29C4) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B179C4 = "arith.mul"(%R1.0x900, %C0.693359375, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B180C4 = "arith.sub"(%R2.0x1a40, %R2, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B181C4 = "arith.cast"(%R1.0x900, %D29C4) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B182C4 = "arith.min"(%R2.0x1a40, %C15, %D29C4) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B183C4 = "arith.max"(%R1.0x900, %C-15, %D29C4) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B184C4 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D29C4) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B185C4 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D29C4) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B186C4 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B187C4 = "arith.add"(%R1.0x900, %C1.0, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B188C4 = "arith.div"(%C1.0, %R2, %D29C4) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B189C4 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D29C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D30C4 = "dma.tensor"(%G1.0x29000, %B172C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B190C4 = "arith.copy"(%R0, %D30C4) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B191C4 = "tsbc.l_copy"(%R1.0x900, %D30C4) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D31C4 = "dma.tensor"(%G1.0x2a000, %B189C4) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B192C4 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D31C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B193C4 = "tsbc.s_bc"(%R0.0x580, %D31C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B194C4 = "arith.sub"(%C0.0, %R0, %D31C4) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B195C4 = "arith.max"(%R3.0x1a40, %C-45408.0, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B196C4 = "arith.min"(%R3.0x1a40, %C45408.0, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B197C4 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B198C4 = "arith.cast"(%R3, %D31C4) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B199C4 = "arith.mul"(%R2, %C0.693359375, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B200C4 = "arith.sub"(%R3.0x1a40, %R3, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B201C4 = "arith.cast"(%R2, %D31C4) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B202C4 = "arith.min"(%R3.0x1a40, %C15, %D31C4) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B203C4 = "arith.max"(%R2, %C-15, %D31C4) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B204C4 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D31C4) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B205C4 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D31C4) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B206C4 = "arith.mul"(%R3.0x1a40, %R2, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B207C4 = "arith.add"(%R2, %C1.0, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B208C4 = "arith.div"(%C1.0, %R3, %D31C4) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B209C4 = "arith.mul"(%R2, %R0, %D31C4) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D32C4 = "dma.tensor"(%G1.0x2d000, %B192C4) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D33C4 = "dma.tensor"(%G1.0x2c000, %B192C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B210C4 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D33C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B211C4 = "tsbc.s_bc"(%R0.0x580, %D33C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B212C4 = "arith.sub"(%C0.0, %R3, %D33C4) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B213C4 = "arith.max"(%R1.0x1580, %C-45408.0, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B214C4 = "arith.min"(%R1.0x1580, %C45408.0, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B215C4 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B216C4 = "arith.cast"(%R1.0x900, %D33C4) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B217C4 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B218C4 = "arith.sub"(%R1.0x1580, %R1.0x900, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B219C4 = "arith.cast"(%R0.0x1cc0, %D33C4) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B220C4 = "arith.min"(%R1.0x1580, %C15, %D33C4) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B221C4 = "arith.max"(%R0.0x1cc0, %C-15, %D33C4) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B222C4 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D33C4) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B223C4 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D33C4) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B224C4 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B225C4 = "arith.add"(%R0.0x1cc0, %C1.0, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B226C4 = "arith.div"(%C1.0, %R1.0x900, %D33C4) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B227C4 = "arith.mul"(%R0.0x1cc0, %R3, %D33C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D34C4 = "dma.tensor"(%G1.0x52000, %B210C4) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D35C4 = "dma.tensor"(%G1.0x51000, %B210C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B228C4 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D35C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D36C4 = "dma.tensor"(%G1.0x56000, %B227C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D37C4 = "dma.tensor"(%G1.0x57000, %B227C4) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B229C4 = "tsbc.s_bc"(%R0.0x580, %D37C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B230C4 = "arith.sub"(%C0.0, %R1.0x900, %D37C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B231C4 = "arith.max"(%R3.0x640, %C-45408.0, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B232C4 = "arith.min"(%R3.0x640, %C45408.0, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B233C4 = "arith.mul"(%R3.0x640, %C1.4423828125, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B234C4 = "arith.cast"(%R3, %D37C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B235C4 = "arith.mul"(%R2, %C0.693359375, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B236C4 = "arith.sub"(%R3.0x640, %R3, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B237C4 = "arith.cast"(%R2, %D37C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B238C4 = "arith.min"(%R3.0x640, %C15, %D37C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B239C4 = "arith.max"(%R2, %C-15, %D37C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B240C4 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D37C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B241C4 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D37C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B242C4 = "arith.mul"(%R3.0x640, %R2, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B243C4 = "arith.add"(%R2, %C1.0, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B244C4 = "arith.div"(%C1.0, %R3, %D37C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B245C4 = "arith.mul"(%R2, %R1.0x900, %D37C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B246C4 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D37C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980321900, %D38C4 = "dma.tensor"(%R0.0x1cc0, %B228C4) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B247C4 = "tsbc.s_bc"(%R0.0x580, %D38C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B248C4 = "arith.sub"(%C0.0, %R1.0xf40, %D38C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B249C4 = "arith.max"(%R0.0x2300, %C-45408.0, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B250C4 = "arith.min"(%R0.0x2300, %C45408.0, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B251C4 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B252C4 = "arith.cast"(%R0.0x1cc0, %D38C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B253C4 = "arith.mul"(%R4, %C0.693359375, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B254C4 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B255C4 = "arith.cast"(%R4, %D38C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B256C4 = "arith.min"(%R0.0x2300, %C15, %D38C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B257C4 = "arith.max"(%R4, %C-15, %D38C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B258C4 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D38C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B259C4 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D38C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B260C4 = "arith.mul"(%R0.0x2300, %R4, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B261C4 = "arith.add"(%R4, %C1.0, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B262C4 = "arith.div"(%C1.0, %R0.0x1cc0, %D38C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B263C4 = "arith.mul"(%R4, %R1.0xf40, %D38C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d1900, %D39C4 = "dma.tensor"(%R2, %B246C4) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980899900, %D40C4 = "dma.tensor"(%R4, %B263C4) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B264C4, %msg49 = "system.send_msg"(%D40C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D41C4, %msg49 = "dma.sys.sys_send"(%B264C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D41C5, %msg49 = "@core_5"(%D21C5, %msg48) {
CHECK:          %B152C5 = "system.wait_msg"(%D21C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D22C5 = "dma.sys.sys_wait"(%B152C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D23C5 = "dma.tensor"(%L30.0x69804b7a80, %B152C5) : (memref<1x32x23x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x23x160xi16, strides: [3680, 3680, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D24C5 = "dma.tensor"(%G1.0x22000, %B152C5) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D25C5 = "dma.tensor"(%G1.0x21000, %B152C5) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B153C5 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D25C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x23x160xf16, strides: [3680, 3680, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D26C5 = "dma.tensor"(%L30.0x6980647bc0, %B152C5) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D27C5 = "dma.tensor"(%G1.0x27000, %B152C5) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D28C5 = "dma.tensor"(%G1.0x28000, %B152C5) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B154C5 = "tsbc.s_bc"(%R0.0x580, %D28C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B155C5 = "arith.sub"(%C0.0, %R3, %D28C5) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B156C5 = "arith.max"(%R1.0x3e00, %C-45408.0, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B157C5 = "arith.min"(%R1.0x3e00, %C45408.0, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B158C5 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B159C5 = "arith.cast"(%R1.0x23c0, %D28C5) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B160C5 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B161C5 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B162C5 = "arith.cast"(%R0.0x1a40, %D28C5) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B163C5 = "arith.min"(%R1.0x3e00, %C15, %D28C5) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B164C5 = "arith.max"(%R0.0x1a40, %C-15, %D28C5) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B165C5 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D28C5) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B166C5 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D28C5) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B167C5 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B168C5 = "arith.add"(%R0.0x1a40, %C1.0, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B169C5 = "arith.div"(%C1.0, %R1.0x23c0, %D28C5) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B170C5 = "arith.mul"(%R0.0x1a40, %R3, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B171C5 = "arith.add"(%R1.0x900, %R0.0x1a40, %D28C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D29C5 = "dma.tensor"(%L30.0x6980007bc0, %B153C5) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B172C5 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D29C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B173C5 = "tsbc.s_bc"(%R0.0x580, %D29C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B174C5 = "arith.sub"(%C0.0, %R0.0x1a40, %D29C5) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B175C5 = "arith.max"(%R2.0x1a40, %C-45408.0, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B176C5 = "arith.min"(%R2.0x1a40, %C45408.0, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B177C5 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B178C5 = "arith.cast"(%R2, %D29C5) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B179C5 = "arith.mul"(%R1.0x900, %C0.693359375, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B180C5 = "arith.sub"(%R2.0x1a40, %R2, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B181C5 = "arith.cast"(%R1.0x900, %D29C5) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B182C5 = "arith.min"(%R2.0x1a40, %C15, %D29C5) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B183C5 = "arith.max"(%R1.0x900, %C-15, %D29C5) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B184C5 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D29C5) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B185C5 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D29C5) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B186C5 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B187C5 = "arith.add"(%R1.0x900, %C1.0, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B188C5 = "arith.div"(%C1.0, %R2, %D29C5) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B189C5 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D29C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D30C5 = "dma.tensor"(%G1.0x29000, %B172C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B190C5 = "arith.copy"(%R0, %D30C5) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B191C5 = "tsbc.l_copy"(%R1.0x900, %D30C5) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D31C5 = "dma.tensor"(%G1.0x2a000, %B189C5) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B192C5 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D31C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B193C5 = "tsbc.s_bc"(%R0.0x580, %D31C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B194C5 = "arith.sub"(%C0.0, %R0, %D31C5) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B195C5 = "arith.max"(%R3.0x1a40, %C-45408.0, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B196C5 = "arith.min"(%R3.0x1a40, %C45408.0, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B197C5 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B198C5 = "arith.cast"(%R3, %D31C5) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B199C5 = "arith.mul"(%R2, %C0.693359375, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B200C5 = "arith.sub"(%R3.0x1a40, %R3, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B201C5 = "arith.cast"(%R2, %D31C5) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B202C5 = "arith.min"(%R3.0x1a40, %C15, %D31C5) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B203C5 = "arith.max"(%R2, %C-15, %D31C5) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B204C5 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D31C5) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B205C5 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D31C5) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B206C5 = "arith.mul"(%R3.0x1a40, %R2, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B207C5 = "arith.add"(%R2, %C1.0, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B208C5 = "arith.div"(%C1.0, %R3, %D31C5) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B209C5 = "arith.mul"(%R2, %R0, %D31C5) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D32C5 = "dma.tensor"(%G1.0x2d000, %B192C5) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D33C5 = "dma.tensor"(%G1.0x2c000, %B192C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B210C5 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D33C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B211C5 = "tsbc.s_bc"(%R0.0x580, %D33C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B212C5 = "arith.sub"(%C0.0, %R3, %D33C5) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B213C5 = "arith.max"(%R1.0x1580, %C-45408.0, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B214C5 = "arith.min"(%R1.0x1580, %C45408.0, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B215C5 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B216C5 = "arith.cast"(%R1.0x900, %D33C5) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B217C5 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B218C5 = "arith.sub"(%R1.0x1580, %R1.0x900, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B219C5 = "arith.cast"(%R0.0x1cc0, %D33C5) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B220C5 = "arith.min"(%R1.0x1580, %C15, %D33C5) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B221C5 = "arith.max"(%R0.0x1cc0, %C-15, %D33C5) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B222C5 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D33C5) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B223C5 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D33C5) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B224C5 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B225C5 = "arith.add"(%R0.0x1cc0, %C1.0, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B226C5 = "arith.div"(%C1.0, %R1.0x900, %D33C5) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B227C5 = "arith.mul"(%R0.0x1cc0, %R3, %D33C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D34C5 = "dma.tensor"(%G1.0x52000, %B210C5) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D35C5 = "dma.tensor"(%G1.0x51000, %B210C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B228C5 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D35C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D36C5 = "dma.tensor"(%G1.0x56000, %B227C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D37C5 = "dma.tensor"(%G1.0x57000, %B227C5) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B229C5 = "tsbc.s_bc"(%R0.0x580, %D37C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B230C5 = "arith.sub"(%C0.0, %R1.0x900, %D37C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B231C5 = "arith.max"(%R3.0x640, %C-45408.0, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B232C5 = "arith.min"(%R3.0x640, %C45408.0, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B233C5 = "arith.mul"(%R3.0x640, %C1.4423828125, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B234C5 = "arith.cast"(%R3, %D37C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B235C5 = "arith.mul"(%R2, %C0.693359375, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B236C5 = "arith.sub"(%R3.0x640, %R3, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B237C5 = "arith.cast"(%R2, %D37C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B238C5 = "arith.min"(%R3.0x640, %C15, %D37C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B239C5 = "arith.max"(%R2, %C-15, %D37C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B240C5 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D37C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B241C5 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D37C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B242C5 = "arith.mul"(%R3.0x640, %R2, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B243C5 = "arith.add"(%R2, %C1.0, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B244C5 = "arith.div"(%C1.0, %R3, %D37C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B245C5 = "arith.mul"(%R2, %R1.0x900, %D37C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B246C5 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D37C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980321f40, %D38C5 = "dma.tensor"(%R0.0x1cc0, %B228C5) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B247C5 = "tsbc.s_bc"(%R0.0x580, %D38C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B248C5 = "arith.sub"(%C0.0, %R1.0xf40, %D38C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B249C5 = "arith.max"(%R0.0x2300, %C-45408.0, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B250C5 = "arith.min"(%R0.0x2300, %C45408.0, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B251C5 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B252C5 = "arith.cast"(%R0.0x1cc0, %D38C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B253C5 = "arith.mul"(%R4, %C0.693359375, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B254C5 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B255C5 = "arith.cast"(%R4, %D38C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B256C5 = "arith.min"(%R0.0x2300, %C15, %D38C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B257C5 = "arith.max"(%R4, %C-15, %D38C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B258C5 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D38C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B259C5 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D38C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B260C5 = "arith.mul"(%R0.0x2300, %R4, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B261C5 = "arith.add"(%R4, %C1.0, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B262C5 = "arith.div"(%C1.0, %R0.0x1cc0, %D38C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B263C5 = "arith.mul"(%R4, %R1.0xf40, %D38C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d1f40, %D39C5 = "dma.tensor"(%R2, %B246C5) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980899f40, %D40C5 = "dma.tensor"(%R4, %B263C5) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B264C5, %msg49 = "system.send_msg"(%D40C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D41C5, %msg49 = "dma.sys.sys_send"(%B264C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D37C6, %msg49 = "@core_6"(%D17C6, %msg48) {
CHECK:          %B79C6 = "system.wait_msg"(%D17C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D18C6 = "dma.sys.sys_wait"(%B79C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D19C6 = "dma.tensor"(%L30.0x69804b9380, %B79C6) : (memref<1x32x23x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x23x160xi16, strides: [3680, 3680, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D20C6 = "dma.tensor"(%G1.0x22000, %B79C6) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D21C6 = "dma.tensor"(%G1.0x21000, %B79C6) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B80C6 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D21C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x23x160xf16, strides: [3680, 3680, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D22C6 = "dma.tensor"(%L30.0x69806494c0, %B79C6) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D23C6 = "dma.tensor"(%G1.0x27000, %B79C6) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D24C6 = "dma.tensor"(%G1.0x28000, %B79C6) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B81C6 = "tsbc.s_bc"(%R0.0x580, %D24C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B82C6 = "arith.sub"(%C0.0, %R3, %D24C6) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B83C6 = "arith.max"(%R1.0x3e00, %C-45408.0, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B84C6 = "arith.min"(%R1.0x3e00, %C45408.0, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B85C6 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B86C6 = "arith.cast"(%R1.0x23c0, %D24C6) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B87C6 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B88C6 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B89C6 = "arith.cast"(%R0.0x1a40, %D24C6) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B90C6 = "arith.min"(%R1.0x3e00, %C15, %D24C6) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B91C6 = "arith.max"(%R0.0x1a40, %C-15, %D24C6) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B92C6 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D24C6) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B93C6 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D24C6) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B94C6 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B95C6 = "arith.add"(%R0.0x1a40, %C1.0, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B96C6 = "arith.div"(%C1.0, %R1.0x23c0, %D24C6) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B97C6 = "arith.mul"(%R0.0x1a40, %R3, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B98C6 = "arith.add"(%R1.0x900, %R0.0x1a40, %D24C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D25C6 = "dma.tensor"(%L30.0x69800094c0, %B80C6) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B99C6 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D25C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B100C6 = "tsbc.s_bc"(%R0.0x580, %D25C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B101C6 = "arith.sub"(%C0.0, %R0.0x1a40, %D25C6) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B102C6 = "arith.max"(%R2.0x1a40, %C-45408.0, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B103C6 = "arith.min"(%R2.0x1a40, %C45408.0, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B104C6 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B105C6 = "arith.cast"(%R2, %D25C6) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B106C6 = "arith.mul"(%R1.0x900, %C0.693359375, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B107C6 = "arith.sub"(%R2.0x1a40, %R2, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B108C6 = "arith.cast"(%R1.0x900, %D25C6) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B109C6 = "arith.min"(%R2.0x1a40, %C15, %D25C6) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B110C6 = "arith.max"(%R1.0x900, %C-15, %D25C6) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B111C6 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D25C6) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B112C6 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D25C6) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B113C6 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B114C6 = "arith.add"(%R1.0x900, %C1.0, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B115C6 = "arith.div"(%C1.0, %R2, %D25C6) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B116C6 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D25C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D26C6 = "dma.tensor"(%G1.0x29000, %B99C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B117C6 = "arith.copy"(%R0, %D26C6) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B118C6 = "tsbc.l_copy"(%R1.0x900, %D26C6) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D27C6 = "dma.tensor"(%G1.0x2a000, %B116C6) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B119C6 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D27C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B120C6 = "tsbc.s_bc"(%R0.0x580, %D27C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B121C6 = "arith.sub"(%C0.0, %R0, %D27C6) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B122C6 = "arith.max"(%R3.0x1a40, %C-45408.0, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B123C6 = "arith.min"(%R3.0x1a40, %C45408.0, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B124C6 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B125C6 = "arith.cast"(%R3, %D27C6) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B126C6 = "arith.mul"(%R2, %C0.693359375, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B127C6 = "arith.sub"(%R3.0x1a40, %R3, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B128C6 = "arith.cast"(%R2, %D27C6) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B129C6 = "arith.min"(%R3.0x1a40, %C15, %D27C6) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B130C6 = "arith.max"(%R2, %C-15, %D27C6) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B131C6 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D27C6) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B132C6 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D27C6) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B133C6 = "arith.mul"(%R3.0x1a40, %R2, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B134C6 = "arith.add"(%R2, %C1.0, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B135C6 = "arith.div"(%C1.0, %R3, %D27C6) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B136C6 = "arith.mul"(%R2, %R0, %D27C6) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D28C6 = "dma.tensor"(%G1.0x2d000, %B119C6) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D29C6 = "dma.tensor"(%G1.0x2c000, %B119C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B137C6 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D29C6) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B138C6 = "tsbc.s_bc"(%R0.0x580, %D29C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B139C6 = "arith.sub"(%C0.0, %R3, %D29C6) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B140C6 = "arith.max"(%R1.0x1580, %C-45408.0, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B141C6 = "arith.min"(%R1.0x1580, %C45408.0, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B142C6 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B143C6 = "arith.cast"(%R1.0x900, %D29C6) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B144C6 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B145C6 = "arith.sub"(%R1.0x1580, %R1.0x900, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B146C6 = "arith.cast"(%R0.0x1cc0, %D29C6) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B147C6 = "arith.min"(%R1.0x1580, %C15, %D29C6) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B148C6 = "arith.max"(%R0.0x1cc0, %C-15, %D29C6) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B149C6 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D29C6) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B150C6 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D29C6) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B151C6 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B152C6 = "arith.add"(%R0.0x1cc0, %C1.0, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B153C6 = "arith.div"(%C1.0, %R1.0x900, %D29C6) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B154C6 = "arith.mul"(%R0.0x1cc0, %R3, %D29C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D30C6 = "dma.tensor"(%G1.0x52000, %B137C6) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D31C6 = "dma.tensor"(%G1.0x51000, %B137C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B155C6 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D31C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D32C6 = "dma.tensor"(%G1.0x56000, %B154C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D33C6 = "dma.tensor"(%G1.0x57000, %B154C6) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B156C6 = "tsbc.s_bc"(%R0.0x580, %D33C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B157C6 = "arith.sub"(%C0.0, %R1.0x900, %D33C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B158C6 = "arith.max"(%R3.0x640, %C-45408.0, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B159C6 = "arith.min"(%R3.0x640, %C45408.0, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B160C6 = "arith.mul"(%R3.0x640, %C1.4423828125, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B161C6 = "arith.cast"(%R3, %D33C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B162C6 = "arith.mul"(%R2, %C0.693359375, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B163C6 = "arith.sub"(%R3.0x640, %R3, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B164C6 = "arith.cast"(%R2, %D33C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B165C6 = "arith.min"(%R3.0x640, %C15, %D33C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B166C6 = "arith.max"(%R2, %C-15, %D33C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B167C6 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D33C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B168C6 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D33C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B169C6 = "arith.mul"(%R3.0x640, %R2, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B170C6 = "arith.add"(%R2, %C1.0, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B171C6 = "arith.div"(%C1.0, %R3, %D33C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B172C6 = "arith.mul"(%R2, %R1.0x900, %D33C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B173C6 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D33C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980322580, %D34C6 = "dma.tensor"(%R0.0x1cc0, %B155C6) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B174C6 = "tsbc.s_bc"(%R0.0x580, %D34C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B175C6 = "arith.sub"(%C0.0, %R1.0xf40, %D34C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B176C6 = "arith.max"(%R0.0x2300, %C-45408.0, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B177C6 = "arith.min"(%R0.0x2300, %C45408.0, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B178C6 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B179C6 = "arith.cast"(%R0.0x1cc0, %D34C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B180C6 = "arith.mul"(%R4, %C0.693359375, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B181C6 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B182C6 = "arith.cast"(%R4, %D34C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B183C6 = "arith.min"(%R0.0x2300, %C15, %D34C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B184C6 = "arith.max"(%R4, %C-15, %D34C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B185C6 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D34C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B186C6 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D34C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B187C6 = "arith.mul"(%R0.0x2300, %R4, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B188C6 = "arith.add"(%R4, %C1.0, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B189C6 = "arith.div"(%C1.0, %R0.0x1cc0, %D34C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B190C6 = "arith.mul"(%R4, %R1.0xf40, %D34C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d2580, %D35C6 = "dma.tensor"(%R2, %B173C6) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x698089a580, %D36C6 = "dma.tensor"(%R4, %B190C6) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B191C6, %msg49 = "system.send_msg"(%D36C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D37C6, %msg49 = "dma.sys.sys_send"(%B191C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D25C7, %msg49 = "@core_7"(%D5C7, %msg48) {
CHECK:          %B6C7 = "system.wait_msg"(%D5C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D6C7 = "dma.sys.sys_wait"(%B6C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D7C7 = "dma.tensor"(%L30.0x69804bac80, %B6C7) : (memref<1x32x22x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x22x160xi16, strides: [3520, 3520, 160, 1]>, none)
CHECK:          %R2.0x34c0, %D8C7 = "dma.tensor"(%G1.0x22000, %B6C7) : (memref<1x32x1x288xi16, strides: [9216, 288, 288, 1]>, none) -> (memref<1x32x1x288xi16, strides: [288, 288, 288, 1]>, none)
CHECK:          %R6, %D9C7 = "dma.tensor"(%G1.0x21000, %B6C7) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3, %B7C7 = "conv.normal"(%R0, %R2.0x34c0, %R6, %C0.0, %D9C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x32x22x160xf16, strides: [3520, 3520, 160, 1]>, memref<32x32x3x3xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %D10C7 = "dma.tensor"(%L30.0x698064adc0, %B6C7) : (memref<1x32x21x160xi16, strides: [819200, 25600, 160, 1]>, none) -> (memref<1x32x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R5, %D11C7 = "dma.tensor"(%G1.0x27000, %B6C7) : (memref<1x32x1x1xf32, strides: [32, 1, 1, 1]>, none) -> (memref<1x32x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x2340, %D12C7 = "dma.tensor"(%G1.0x28000, %B6C7) : (memref<1x32x1x64xi16, strides: [2048, 64, 64, 1]>, none) -> (memref<1x32x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R2.0x1840, %B8C7 = "tsbc.s_bc"(%R0.0x580, %D12C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x3e00, %B9C7 = "arith.sub"(%C0.0, %R3, %D12C7) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B10C7 = "arith.max"(%R1.0x3e00, %C-45408.0, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B11C7 = "arith.min"(%R1.0x3e00, %C45408.0, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B12C7 = "arith.mul"(%R1.0x3e00, %C1.4423828125, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B13C7 = "arith.cast"(%R1.0x23c0, %D12C7) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B14C7 = "arith.mul"(%R0.0x1a40, %C0.693359375, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B15C7 = "arith.sub"(%R1.0x3e00, %R1.0x23c0, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B16C7 = "arith.cast"(%R0.0x1a40, %D12C7) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B17C7 = "arith.min"(%R1.0x3e00, %C15, %D12C7) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B18C7 = "arith.max"(%R0.0x1a40, %C-15, %D12C7) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B19C7 = "arith.add_satu"(%R1.0x3e00, %C15, %C10, %D12C7) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x3e00, %B20C7 = "sfu.taylor_4x"(%R1.0x23c0, %R2.0x1840, %D12C7) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B21C7 = "arith.mul"(%R1.0x3e00, %R0.0x1a40, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x23c0, %B22C7 = "arith.add"(%R0.0x1a40, %C1.0, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B23C7 = "arith.div"(%C1.0, %R1.0x23c0, %D12C7) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B24C7 = "arith.mul"(%R0.0x1a40, %R3, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0, %B25C7 = "arith.add"(%R1.0x900, %R0.0x1a40, %D12C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [0, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4, %D13C7 = "dma.tensor"(%L30.0x698000adc0, %B7C7) : (memref<1x64x21x160xi16, strides: [1638400, 25600, 160, 1]>, none) -> (memref<1x64x21x160xi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R0.0x1a40, %B26C7 = "conv.normal"(%R4, %R1.0x2340, %R5, %C0.0, %D13C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<32x64x1x1xf16>, memref<1x32x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x3480, %B27C7 = "tsbc.s_bc"(%R0.0x580, %D13C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1a40, %B28C7 = "arith.sub"(%C0.0, %R0.0x1a40, %D13C7) {round_mode = 0}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B29C7 = "arith.max"(%R2.0x1a40, %C-45408.0, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B30C7 = "arith.min"(%R2.0x1a40, %C45408.0, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B31C7 = "arith.mul"(%R2.0x1a40, %C1.4423828125, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B32C7 = "arith.cast"(%R2, %D13C7) {round_mode = 3}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B33C7 = "arith.mul"(%R1.0x900, %C0.693359375, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B34C7 = "arith.sub"(%R2.0x1a40, %R2, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B35C7 = "arith.cast"(%R1.0x900, %D13C7) {round_mode = 1}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B36C7 = "arith.min"(%R2.0x1a40, %C15, %D13C7) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B37C7 = "arith.max"(%R1.0x900, %C-15, %D13C7) {round_mode = 0}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R1.0x900, %B38C7 = "arith.add_satu"(%R2.0x1a40, %C15, %C10, %D13C7) {round_mode = 1}: (memref<1x32x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x32x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.0x1a40, %B39C7 = "sfu.taylor_4x"(%R2, %R2.0x3480, %D13C7) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B40C7 = "arith.mul"(%R2.0x1a40, %R1.0x900, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B41C7 = "arith.add"(%R1.0x900, %C1.0, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B42C7 = "arith.div"(%C1.0, %R2, %D13C7) {iter = 3}: (f16, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1.0x900, %B43C7 = "arith.mul"(%R1.0x900, %R0.0x1a40, %D13C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R4.0x1ac0, %D14C7 = "dma.tensor"(%G1.0x29000, %B26C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B44C7 = "arith.copy"(%R0, %D14C7) {round_mode = 0}: (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2.L0x20, %B45C7 = "tsbc.l_copy"(%R1.0x900, %D14C7) : (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x32x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x34c0, %D15C7 = "dma.tensor"(%G1.0x2a000, %B43C7) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0, %B46C7 = "conv.normal"(%R2, %R3.0x34c0, %R4.0x1ac0, %C0.0, %D15C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x3480, %B47C7 = "tsbc.s_bc"(%R0.0x580, %D15C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x1a40, %B48C7 = "arith.sub"(%C0.0, %R0, %D15C7) {round_mode = 0}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B49C7 = "arith.max"(%R3.0x1a40, %C-45408.0, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B50C7 = "arith.min"(%R3.0x1a40, %C45408.0, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B51C7 = "arith.mul"(%R3.0x1a40, %C1.4423828125, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B52C7 = "arith.cast"(%R3, %D15C7) {round_mode = 3}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B53C7 = "arith.mul"(%R2, %C0.693359375, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B54C7 = "arith.sub"(%R3.0x1a40, %R3, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B55C7 = "arith.cast"(%R2, %D15C7) {round_mode = 1}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B56C7 = "arith.min"(%R3.0x1a40, %C15, %D15C7) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B57C7 = "arith.max"(%R2, %C-15, %D15C7) {round_mode = 0}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si8, none) -> (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, none)
CHECK:          %R2, %B58C7 = "arith.add_satu"(%R3.0x1a40, %C15, %C10, %D15C7) {round_mode = 1}: (memref<1x64x21x160xsi8, strides: [3392, 3392, 160, 1]>, si16, ui8, none) -> (memref<1x64x21x160xsi16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3.0x1a40, %B59C7 = "sfu.taylor_4x"(%R3, %R3.0x3480, %D15C7) : (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B60C7 = "arith.mul"(%R3.0x1a40, %R2, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R3, %B61C7 = "arith.add"(%R2, %C1.0, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, f16, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B62C7 = "arith.div"(%C1.0, %R3, %D15C7) {iter = 3}: (f16, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R2, %B63C7 = "arith.mul"(%R2, %R0, %D15C7) {round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none) -> (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, none)
CHECK:          %R1, %D16C7 = "dma.tensor"(%G1.0x2d000, %B46C7) : (memref<1x128x1x576xi16, strides: [73728, 576, 576, 1]>, none) -> (memref<1x128x1x576xi16, strides: [1152, 576, 576, 1]>, none)
CHECK:          %R4.0x1a80, %D17C7 = "dma.tensor"(%G1.0x2c000, %B46C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B64C7 = "conv.normal"(%R2, %R1, %R4.0x1a80, %C0.0, %D17C7) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x21x160xf16, strides: [3360, 3360, 160, 1]>, memref<128x64x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x2200, %B65C7 = "tsbc.s_bc"(%R0.0x580, %D17C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1580, %B66C7 = "arith.sub"(%C0.0, %R3, %D17C7) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B67C7 = "arith.max"(%R1.0x1580, %C-45408.0, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B68C7 = "arith.min"(%R1.0x1580, %C45408.0, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B69C7 = "arith.mul"(%R1.0x1580, %C1.4423828125, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B70C7 = "arith.cast"(%R1.0x900, %D17C7) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B71C7 = "arith.mul"(%R0.0x1cc0, %C0.693359375, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B72C7 = "arith.sub"(%R1.0x1580, %R1.0x900, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B73C7 = "arith.cast"(%R0.0x1cc0, %D17C7) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B74C7 = "arith.min"(%R1.0x1580, %C15, %D17C7) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R1.0x1580, %B75C7 = "arith.max"(%R0.0x1cc0, %C-15, %D17C7) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B76C7 = "arith.add_satu"(%R1.0x1580, %C15, %C10, %D17C7) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x1580, %B77C7 = "sfu.taylor_4x"(%R1.0x900, %R1.0x2200, %D17C7) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B78C7 = "arith.mul"(%R1.0x1580, %R0.0x1cc0, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1.0x900, %B79C7 = "arith.add"(%R0.0x1cc0, %C1.0, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B80C7 = "arith.div"(%C1.0, %R1.0x900, %D17C7) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B81C7 = "arith.mul"(%R0.0x1cc0, %R3, %D17C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2.0x3700, %D18C7 = "dma.tensor"(%G1.0x52000, %B64C7) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D19C7 = "dma.tensor"(%G1.0x51000, %B64C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x900, %B82C7 = "conv.normal"(%R0.0x1cc0, %R2.0x3700, %R4.0x1a40, %C0.0, %D19C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R5.0x40, %D20C7 = "dma.tensor"(%G1.0x56000, %B81C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x3540, %D21C7 = "dma.tensor"(%G1.0x57000, %B81C7) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R3.0xc80, %B83C7 = "tsbc.s_bc"(%R0.0x580, %D21C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B84C7 = "arith.sub"(%C0.0, %R1.0x900, %D21C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B85C7 = "arith.max"(%R3.0x640, %C-45408.0, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B86C7 = "arith.min"(%R3.0x640, %C45408.0, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B87C7 = "arith.mul"(%R3.0x640, %C1.4423828125, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B88C7 = "arith.cast"(%R3, %D21C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B89C7 = "arith.mul"(%R2, %C0.693359375, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B90C7 = "arith.sub"(%R3.0x640, %R3, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B91C7 = "arith.cast"(%R2, %D21C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B92C7 = "arith.min"(%R3.0x640, %C15, %D21C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B93C7 = "arith.max"(%R2, %C-15, %D21C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B94C7 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D21C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B95C7 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D21C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B96C7 = "arith.mul"(%R3.0x640, %R2, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B97C7 = "arith.add"(%R2, %C1.0, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B98C7 = "arith.div"(%C1.0, %R3, %D21C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B99C7 = "arith.mul"(%R2, %R1.0x900, %D21C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xf40, %B100C7 = "conv.normal"(%R2, %R3.0x3540, %R5.0x40, %C0.0, %D21C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980322bc0, %D22C7 = "dma.tensor"(%R0.0x1cc0, %B82C7) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %R0.0x2940, %B101C7 = "tsbc.s_bc"(%R0.0x580, %D22C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2300, %B102C7 = "arith.sub"(%C0.0, %R1.0xf40, %D22C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B103C7 = "arith.max"(%R0.0x2300, %C-45408.0, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B104C7 = "arith.min"(%R0.0x2300, %C45408.0, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B105C7 = "arith.mul"(%R0.0x2300, %C1.4423828125, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B106C7 = "arith.cast"(%R0.0x1cc0, %D22C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B107C7 = "arith.mul"(%R4, %C0.693359375, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B108C7 = "arith.sub"(%R0.0x2300, %R0.0x1cc0, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B109C7 = "arith.cast"(%R4, %D22C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B110C7 = "arith.min"(%R0.0x2300, %C15, %D22C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x2300, %B111C7 = "arith.max"(%R4, %C-15, %D22C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4, %B112C7 = "arith.add_satu"(%R0.0x2300, %C15, %C10, %D22C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x2300, %B113C7 = "sfu.taylor_4x"(%R0.0x1cc0, %R0.0x2940, %D22C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B114C7 = "arith.mul"(%R0.0x2300, %R4, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1cc0, %B115C7 = "arith.add"(%R4, %C1.0, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B116C7 = "arith.div"(%C1.0, %R0.0x1cc0, %D22C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B117C7 = "arith.mul"(%R4, %R1.0xf40, %D22C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807d2bc0, %D23C7 = "dma.tensor"(%R2, %B100C7) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %L30.0x698089abc0, %D24C7 = "dma.tensor"(%R4, %B117C7) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B118C7, %msg49 = "system.send_msg"(%D24C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D25C7, %msg49 = "dma.sys.sys_send"(%B118C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D43C0, %msg48 = "@core_0"(%D41C0, %msg49) {
CHECK:          %B265C0 = "system.wait_msg"(%D41C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D42C0 = "dma.sys.sys_wait"(%B265C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B266C0, %msg48 = "system.send_msg"(%D42C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D43C0, %msg48 = "dma.sys.sys_send"(%B266C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D43C1, %msg48 = "@core_1"(%D41C1, %msg49) {
CHECK:          %B265C1 = "system.wait_msg"(%D41C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D42C1 = "dma.sys.sys_wait"(%B265C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B266C1, %msg48 = "system.send_msg"(%D42C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D43C1, %msg48 = "dma.sys.sys_send"(%B266C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D43C2, %msg48 = "@core_2"(%D41C2, %msg49) {
CHECK:          %B265C2 = "system.wait_msg"(%D41C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D42C2 = "dma.sys.sys_wait"(%B265C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B266C2, %msg48 = "system.send_msg"(%D42C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D43C2, %msg48 = "dma.sys.sys_send"(%B266C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D43C3, %msg48 = "@core_3"(%D41C3, %msg49) {
CHECK:          %B265C3 = "system.wait_msg"(%D41C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D42C3 = "dma.sys.sys_wait"(%B265C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B266C3, %msg48 = "system.send_msg"(%D42C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D43C3, %msg48 = "dma.sys.sys_send"(%B266C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D43C4, %msg48 = "@core_4"(%D41C4, %msg49) {
CHECK:          %B265C4 = "system.wait_msg"(%D41C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D42C4 = "dma.sys.sys_wait"(%B265C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B266C4, %msg48 = "system.send_msg"(%D42C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D43C4, %msg48 = "dma.sys.sys_send"(%B266C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D43C5, %msg48 = "@core_5"(%D41C5, %msg49) {
CHECK:          %B265C5 = "system.wait_msg"(%D41C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D42C5 = "dma.sys.sys_wait"(%B265C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B266C5, %msg48 = "system.send_msg"(%D42C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D43C5, %msg48 = "dma.sys.sys_send"(%B266C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D39C6, %msg48 = "@core_6"(%D37C6, %msg49) {
CHECK:          %B192C6 = "system.wait_msg"(%D37C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D38C6 = "dma.sys.sys_wait"(%B192C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B193C6, %msg48 = "system.send_msg"(%D38C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D39C6, %msg48 = "dma.sys.sys_send"(%B193C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D27C7, %msg48 = "@core_7"(%D25C7, %msg49) {
CHECK:          %B119C7 = "system.wait_msg"(%D25C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D26C7 = "dma.sys.sys_wait"(%B119C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B120C7, %msg48 = "system.send_msg"(%D26C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D27C7, %msg48 = "dma.sys.sys_send"(%B120C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C0, %msg49 = "@core_0"(%D43C0, %msg48) {
CHECK:          %B267C0 = "system.wait_msg"(%D43C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D44C0 = "dma.sys.sys_wait"(%B267C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D45C0 = "dma.tensor"(%G1.0x59000, %B267C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D46C0 = "dma.tensor"(%G1.0x5a000, %B267C0) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D47C0 = "dma.tensor"(%L30.0x6980898000, %B267C0) : (memref<1x64x11x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x11x80xi16, strides: [896, 896, 80, 1]>, none)
CHECK:          %R2, %B268C0 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D47C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x11x80xf16, strides: [896, 896, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D48C0 = "dma.tensor"(%G1.0x6c000, %B267C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D49C0 = "dma.tensor"(%G1.0x6d000, %B267C0) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B269C0 = "tsbc.s_bc"(%R0.0x580, %D49C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B270C0 = "arith.sub"(%C0.0, %R2, %D49C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B271C0 = "arith.max"(%R0.0xac0, %C-45408.0, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B272C0 = "arith.min"(%R0.0xac0, %C45408.0, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B273C0 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B274C0 = "arith.cast"(%R0.0x480, %D49C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B275C0 = "arith.mul"(%R1, %C0.693359375, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B276C0 = "arith.sub"(%R0.0xac0, %R0.0x480, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B277C0 = "arith.cast"(%R1, %D49C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B278C0 = "arith.min"(%R0.0xac0, %C15, %D49C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B279C0 = "arith.max"(%R1, %C-15, %D49C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B280C0 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D49C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B281C0 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D49C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B282C0 = "arith.mul"(%R0.0xac0, %R1, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B283C0 = "arith.add"(%R1, %C1.0, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B284C0 = "arith.div"(%C1.0, %R0.0x480, %D49C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B285C0 = "arith.mul"(%R1, %R2, %D49C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D50C0 = "dma.tensor"(%L30.0x69807d0000, %B268C0) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B286C0 = "arith.add"(%R3, %R1, %D50C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B287C0 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D50C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980000000, %D51C0 = "dma.tensor"(%R2, %B286C0) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B288C0 = "tsbc.s_bc"(%R0.0x580, %D51C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B289C0 = "arith.sub"(%C0.0, %R0.0x480, %D51C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B290C0 = "arith.max"(%R2.0x640, %C-45408.0, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B291C0 = "arith.min"(%R2.0x640, %C45408.0, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B292C0 = "arith.mul"(%R2.0x640, %C1.4423828125, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B293C0 = "arith.cast"(%R2, %D51C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B294C0 = "arith.mul"(%R3, %C0.693359375, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B295C0 = "arith.sub"(%R2.0x640, %R2, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B296C0 = "arith.cast"(%R3, %D51C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B297C0 = "arith.min"(%R2.0x640, %C15, %D51C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B298C0 = "arith.max"(%R3, %C-15, %D51C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B299C0 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D51C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B300C0 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D51C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B301C0 = "arith.mul"(%R2.0x640, %R3, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B302C0 = "arith.add"(%R3, %C1.0, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B303C0 = "arith.div"(%C1.0, %R2, %D51C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B304C0 = "arith.mul"(%R3, %R0.0x480, %D51C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800c8000, %D52C0 = "dma.tensor"(%R3, %B304C0) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B305C0, %msg49 = "system.send_msg"(%D52C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C0, %msg49 = "dma.sys.sys_send"(%B305C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C1, %msg49 = "@core_1"(%D43C1, %msg48) {
CHECK:          %B267C1 = "system.wait_msg"(%D43C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D44C1 = "dma.sys.sys_wait"(%B267C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D45C1 = "dma.tensor"(%G1.0x59000, %B267C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D46C1 = "dma.tensor"(%G1.0x5a000, %B267C1) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D47C1 = "dma.tensor"(%L30.0x69808985a0, %B267C1) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R2, %B268C1 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D47C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D48C1 = "dma.tensor"(%G1.0x6c000, %B267C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D49C1 = "dma.tensor"(%G1.0x6d000, %B267C1) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B269C1 = "tsbc.s_bc"(%R0.0x580, %D49C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B270C1 = "arith.sub"(%C0.0, %R2, %D49C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B271C1 = "arith.max"(%R0.0xac0, %C-45408.0, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B272C1 = "arith.min"(%R0.0xac0, %C45408.0, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B273C1 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B274C1 = "arith.cast"(%R0.0x480, %D49C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B275C1 = "arith.mul"(%R1, %C0.693359375, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B276C1 = "arith.sub"(%R0.0xac0, %R0.0x480, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B277C1 = "arith.cast"(%R1, %D49C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B278C1 = "arith.min"(%R0.0xac0, %C15, %D49C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B279C1 = "arith.max"(%R1, %C-15, %D49C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B280C1 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D49C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B281C1 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D49C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B282C1 = "arith.mul"(%R0.0xac0, %R1, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B283C1 = "arith.add"(%R1, %C1.0, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B284C1 = "arith.div"(%C1.0, %R0.0x480, %D49C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B285C1 = "arith.mul"(%R1, %R2, %D49C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D50C1 = "dma.tensor"(%L30.0x69807d0640, %B268C1) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B286C1 = "arith.add"(%R3, %R1, %D50C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B287C1 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D50C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980000640, %D51C1 = "dma.tensor"(%R2, %B286C1) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B288C1 = "tsbc.s_bc"(%R0.0x580, %D51C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B289C1 = "arith.sub"(%C0.0, %R0.0x480, %D51C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B290C1 = "arith.max"(%R2.0x640, %C-45408.0, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B291C1 = "arith.min"(%R2.0x640, %C45408.0, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B292C1 = "arith.mul"(%R2.0x640, %C1.4423828125, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B293C1 = "arith.cast"(%R2, %D51C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B294C1 = "arith.mul"(%R3, %C0.693359375, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B295C1 = "arith.sub"(%R2.0x640, %R2, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B296C1 = "arith.cast"(%R3, %D51C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B297C1 = "arith.min"(%R2.0x640, %C15, %D51C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B298C1 = "arith.max"(%R3, %C-15, %D51C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B299C1 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D51C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B300C1 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D51C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B301C1 = "arith.mul"(%R2.0x640, %R3, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B302C1 = "arith.add"(%R3, %C1.0, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B303C1 = "arith.div"(%C1.0, %R2, %D51C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B304C1 = "arith.mul"(%R3, %R0.0x480, %D51C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800c8640, %D52C1 = "dma.tensor"(%R3, %B304C1) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B305C1, %msg49 = "system.send_msg"(%D52C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C1, %msg49 = "dma.sys.sys_send"(%B305C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C2, %msg49 = "@core_2"(%D43C2, %msg48) {
CHECK:          %B267C2 = "system.wait_msg"(%D43C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D44C2 = "dma.sys.sys_wait"(%B267C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D45C2 = "dma.tensor"(%G1.0x59000, %B267C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D46C2 = "dma.tensor"(%G1.0x5a000, %B267C2) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D47C2 = "dma.tensor"(%L30.0x6980898be0, %B267C2) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R2, %B268C2 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D47C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D48C2 = "dma.tensor"(%G1.0x6c000, %B267C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D49C2 = "dma.tensor"(%G1.0x6d000, %B267C2) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B269C2 = "tsbc.s_bc"(%R0.0x580, %D49C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B270C2 = "arith.sub"(%C0.0, %R2, %D49C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B271C2 = "arith.max"(%R0.0xac0, %C-45408.0, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B272C2 = "arith.min"(%R0.0xac0, %C45408.0, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B273C2 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B274C2 = "arith.cast"(%R0.0x480, %D49C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B275C2 = "arith.mul"(%R1, %C0.693359375, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B276C2 = "arith.sub"(%R0.0xac0, %R0.0x480, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B277C2 = "arith.cast"(%R1, %D49C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B278C2 = "arith.min"(%R0.0xac0, %C15, %D49C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B279C2 = "arith.max"(%R1, %C-15, %D49C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B280C2 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D49C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B281C2 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D49C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B282C2 = "arith.mul"(%R0.0xac0, %R1, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B283C2 = "arith.add"(%R1, %C1.0, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B284C2 = "arith.div"(%C1.0, %R0.0x480, %D49C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B285C2 = "arith.mul"(%R1, %R2, %D49C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D50C2 = "dma.tensor"(%L30.0x69807d0c80, %B268C2) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B286C2 = "arith.add"(%R3, %R1, %D50C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B287C2 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D50C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980000c80, %D51C2 = "dma.tensor"(%R2, %B286C2) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B288C2 = "tsbc.s_bc"(%R0.0x580, %D51C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B289C2 = "arith.sub"(%C0.0, %R0.0x480, %D51C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B290C2 = "arith.max"(%R2.0x640, %C-45408.0, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B291C2 = "arith.min"(%R2.0x640, %C45408.0, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B292C2 = "arith.mul"(%R2.0x640, %C1.4423828125, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B293C2 = "arith.cast"(%R2, %D51C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B294C2 = "arith.mul"(%R3, %C0.693359375, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B295C2 = "arith.sub"(%R2.0x640, %R2, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B296C2 = "arith.cast"(%R3, %D51C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B297C2 = "arith.min"(%R2.0x640, %C15, %D51C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B298C2 = "arith.max"(%R3, %C-15, %D51C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B299C2 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D51C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B300C2 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D51C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B301C2 = "arith.mul"(%R2.0x640, %R3, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B302C2 = "arith.add"(%R3, %C1.0, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B303C2 = "arith.div"(%C1.0, %R2, %D51C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B304C2 = "arith.mul"(%R3, %R0.0x480, %D51C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800c8c80, %D52C2 = "dma.tensor"(%R3, %B304C2) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B305C2, %msg49 = "system.send_msg"(%D52C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C2, %msg49 = "dma.sys.sys_send"(%B305C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C3, %msg49 = "@core_3"(%D43C3, %msg48) {
CHECK:          %B267C3 = "system.wait_msg"(%D43C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D44C3 = "dma.sys.sys_wait"(%B267C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D45C3 = "dma.tensor"(%G1.0x59000, %B267C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D46C3 = "dma.tensor"(%G1.0x5a000, %B267C3) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D47C3 = "dma.tensor"(%L30.0x6980899220, %B267C3) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R2, %B268C3 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D47C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D48C3 = "dma.tensor"(%G1.0x6c000, %B267C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D49C3 = "dma.tensor"(%G1.0x6d000, %B267C3) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B269C3 = "tsbc.s_bc"(%R0.0x580, %D49C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B270C3 = "arith.sub"(%C0.0, %R2, %D49C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B271C3 = "arith.max"(%R0.0xac0, %C-45408.0, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B272C3 = "arith.min"(%R0.0xac0, %C45408.0, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B273C3 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B274C3 = "arith.cast"(%R0.0x480, %D49C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B275C3 = "arith.mul"(%R1, %C0.693359375, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B276C3 = "arith.sub"(%R0.0xac0, %R0.0x480, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B277C3 = "arith.cast"(%R1, %D49C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B278C3 = "arith.min"(%R0.0xac0, %C15, %D49C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B279C3 = "arith.max"(%R1, %C-15, %D49C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B280C3 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D49C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B281C3 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D49C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B282C3 = "arith.mul"(%R0.0xac0, %R1, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B283C3 = "arith.add"(%R1, %C1.0, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B284C3 = "arith.div"(%C1.0, %R0.0x480, %D49C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B285C3 = "arith.mul"(%R1, %R2, %D49C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D50C3 = "dma.tensor"(%L30.0x69807d12c0, %B268C3) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B286C3 = "arith.add"(%R3, %R1, %D50C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B287C3 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D50C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800012c0, %D51C3 = "dma.tensor"(%R2, %B286C3) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B288C3 = "tsbc.s_bc"(%R0.0x580, %D51C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B289C3 = "arith.sub"(%C0.0, %R0.0x480, %D51C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B290C3 = "arith.max"(%R2.0x640, %C-45408.0, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B291C3 = "arith.min"(%R2.0x640, %C45408.0, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B292C3 = "arith.mul"(%R2.0x640, %C1.4423828125, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B293C3 = "arith.cast"(%R2, %D51C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B294C3 = "arith.mul"(%R3, %C0.693359375, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B295C3 = "arith.sub"(%R2.0x640, %R2, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B296C3 = "arith.cast"(%R3, %D51C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B297C3 = "arith.min"(%R2.0x640, %C15, %D51C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B298C3 = "arith.max"(%R3, %C-15, %D51C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B299C3 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D51C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B300C3 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D51C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B301C3 = "arith.mul"(%R2.0x640, %R3, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B302C3 = "arith.add"(%R3, %C1.0, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B303C3 = "arith.div"(%C1.0, %R2, %D51C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B304C3 = "arith.mul"(%R3, %R0.0x480, %D51C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800c92c0, %D52C3 = "dma.tensor"(%R3, %B304C3) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B305C3, %msg49 = "system.send_msg"(%D52C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C3, %msg49 = "dma.sys.sys_send"(%B305C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C4, %msg49 = "@core_4"(%D43C4, %msg48) {
CHECK:          %B267C4 = "system.wait_msg"(%D43C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D44C4 = "dma.sys.sys_wait"(%B267C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D45C4 = "dma.tensor"(%G1.0x59000, %B267C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D46C4 = "dma.tensor"(%G1.0x5a000, %B267C4) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D47C4 = "dma.tensor"(%L30.0x6980899860, %B267C4) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R2, %B268C4 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D47C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D48C4 = "dma.tensor"(%G1.0x6c000, %B267C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D49C4 = "dma.tensor"(%G1.0x6d000, %B267C4) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B269C4 = "tsbc.s_bc"(%R0.0x580, %D49C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B270C4 = "arith.sub"(%C0.0, %R2, %D49C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B271C4 = "arith.max"(%R0.0xac0, %C-45408.0, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B272C4 = "arith.min"(%R0.0xac0, %C45408.0, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B273C4 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B274C4 = "arith.cast"(%R0.0x480, %D49C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B275C4 = "arith.mul"(%R1, %C0.693359375, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B276C4 = "arith.sub"(%R0.0xac0, %R0.0x480, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B277C4 = "arith.cast"(%R1, %D49C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B278C4 = "arith.min"(%R0.0xac0, %C15, %D49C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B279C4 = "arith.max"(%R1, %C-15, %D49C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B280C4 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D49C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B281C4 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D49C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B282C4 = "arith.mul"(%R0.0xac0, %R1, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B283C4 = "arith.add"(%R1, %C1.0, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B284C4 = "arith.div"(%C1.0, %R0.0x480, %D49C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B285C4 = "arith.mul"(%R1, %R2, %D49C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D50C4 = "dma.tensor"(%L30.0x69807d1900, %B268C4) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B286C4 = "arith.add"(%R3, %R1, %D50C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B287C4 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D50C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980001900, %D51C4 = "dma.tensor"(%R2, %B286C4) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B288C4 = "tsbc.s_bc"(%R0.0x580, %D51C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B289C4 = "arith.sub"(%C0.0, %R0.0x480, %D51C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B290C4 = "arith.max"(%R2.0x640, %C-45408.0, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B291C4 = "arith.min"(%R2.0x640, %C45408.0, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B292C4 = "arith.mul"(%R2.0x640, %C1.4423828125, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B293C4 = "arith.cast"(%R2, %D51C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B294C4 = "arith.mul"(%R3, %C0.693359375, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B295C4 = "arith.sub"(%R2.0x640, %R2, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B296C4 = "arith.cast"(%R3, %D51C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B297C4 = "arith.min"(%R2.0x640, %C15, %D51C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B298C4 = "arith.max"(%R3, %C-15, %D51C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B299C4 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D51C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B300C4 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D51C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B301C4 = "arith.mul"(%R2.0x640, %R3, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B302C4 = "arith.add"(%R3, %C1.0, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B303C4 = "arith.div"(%C1.0, %R2, %D51C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B304C4 = "arith.mul"(%R3, %R0.0x480, %D51C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800c9900, %D52C4 = "dma.tensor"(%R3, %B304C4) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B305C4, %msg49 = "system.send_msg"(%D52C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C4, %msg49 = "dma.sys.sys_send"(%B305C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C5, %msg49 = "@core_5"(%D43C5, %msg48) {
CHECK:          %B267C5 = "system.wait_msg"(%D43C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D44C5 = "dma.sys.sys_wait"(%B267C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D45C5 = "dma.tensor"(%G1.0x59000, %B267C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D46C5 = "dma.tensor"(%G1.0x5a000, %B267C5) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D47C5 = "dma.tensor"(%L30.0x6980899ea0, %B267C5) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R2, %B268C5 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D47C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D48C5 = "dma.tensor"(%G1.0x6c000, %B267C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D49C5 = "dma.tensor"(%G1.0x6d000, %B267C5) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B269C5 = "tsbc.s_bc"(%R0.0x580, %D49C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B270C5 = "arith.sub"(%C0.0, %R2, %D49C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B271C5 = "arith.max"(%R0.0xac0, %C-45408.0, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B272C5 = "arith.min"(%R0.0xac0, %C45408.0, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B273C5 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B274C5 = "arith.cast"(%R0.0x480, %D49C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B275C5 = "arith.mul"(%R1, %C0.693359375, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B276C5 = "arith.sub"(%R0.0xac0, %R0.0x480, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B277C5 = "arith.cast"(%R1, %D49C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B278C5 = "arith.min"(%R0.0xac0, %C15, %D49C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B279C5 = "arith.max"(%R1, %C-15, %D49C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B280C5 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D49C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B281C5 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D49C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B282C5 = "arith.mul"(%R0.0xac0, %R1, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B283C5 = "arith.add"(%R1, %C1.0, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B284C5 = "arith.div"(%C1.0, %R0.0x480, %D49C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B285C5 = "arith.mul"(%R1, %R2, %D49C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D50C5 = "dma.tensor"(%L30.0x69807d1f40, %B268C5) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B286C5 = "arith.add"(%R3, %R1, %D50C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B287C5 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D50C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980001f40, %D51C5 = "dma.tensor"(%R2, %B286C5) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B288C5 = "tsbc.s_bc"(%R0.0x580, %D51C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B289C5 = "arith.sub"(%C0.0, %R0.0x480, %D51C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B290C5 = "arith.max"(%R2.0x640, %C-45408.0, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B291C5 = "arith.min"(%R2.0x640, %C45408.0, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B292C5 = "arith.mul"(%R2.0x640, %C1.4423828125, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B293C5 = "arith.cast"(%R2, %D51C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B294C5 = "arith.mul"(%R3, %C0.693359375, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B295C5 = "arith.sub"(%R2.0x640, %R2, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B296C5 = "arith.cast"(%R3, %D51C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B297C5 = "arith.min"(%R2.0x640, %C15, %D51C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B298C5 = "arith.max"(%R3, %C-15, %D51C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B299C5 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D51C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B300C5 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D51C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B301C5 = "arith.mul"(%R2.0x640, %R3, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B302C5 = "arith.add"(%R3, %C1.0, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B303C5 = "arith.div"(%C1.0, %R2, %D51C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B304C5 = "arith.mul"(%R3, %R0.0x480, %D51C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800c9f40, %D52C5 = "dma.tensor"(%R3, %B304C5) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B305C5, %msg49 = "system.send_msg"(%D52C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C5, %msg49 = "dma.sys.sys_send"(%B305C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D49C6, %msg49 = "@core_6"(%D39C6, %msg48) {
CHECK:          %B194C6 = "system.wait_msg"(%D39C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D40C6 = "dma.sys.sys_wait"(%B194C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D41C6 = "dma.tensor"(%G1.0x59000, %B194C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D42C6 = "dma.tensor"(%G1.0x5a000, %B194C6) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D43C6 = "dma.tensor"(%L30.0x698089a4e0, %B194C6) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R2, %B195C6 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D43C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D44C6 = "dma.tensor"(%G1.0x6c000, %B194C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D45C6 = "dma.tensor"(%G1.0x6d000, %B194C6) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B196C6 = "tsbc.s_bc"(%R0.0x580, %D45C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B197C6 = "arith.sub"(%C0.0, %R2, %D45C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B198C6 = "arith.max"(%R0.0xac0, %C-45408.0, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B199C6 = "arith.min"(%R0.0xac0, %C45408.0, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B200C6 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B201C6 = "arith.cast"(%R0.0x480, %D45C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B202C6 = "arith.mul"(%R1, %C0.693359375, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B203C6 = "arith.sub"(%R0.0xac0, %R0.0x480, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B204C6 = "arith.cast"(%R1, %D45C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B205C6 = "arith.min"(%R0.0xac0, %C15, %D45C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B206C6 = "arith.max"(%R1, %C-15, %D45C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B207C6 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D45C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B208C6 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D45C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B209C6 = "arith.mul"(%R0.0xac0, %R1, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B210C6 = "arith.add"(%R1, %C1.0, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B211C6 = "arith.div"(%C1.0, %R0.0x480, %D45C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B212C6 = "arith.mul"(%R1, %R2, %D45C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D46C6 = "dma.tensor"(%L30.0x69807d2580, %B195C6) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B213C6 = "arith.add"(%R3, %R1, %D46C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B214C6 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D46C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980002580, %D47C6 = "dma.tensor"(%R2, %B213C6) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B215C6 = "tsbc.s_bc"(%R0.0x580, %D47C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B216C6 = "arith.sub"(%C0.0, %R0.0x480, %D47C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B217C6 = "arith.max"(%R2.0x640, %C-45408.0, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B218C6 = "arith.min"(%R2.0x640, %C45408.0, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B219C6 = "arith.mul"(%R2.0x640, %C1.4423828125, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B220C6 = "arith.cast"(%R2, %D47C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B221C6 = "arith.mul"(%R3, %C0.693359375, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B222C6 = "arith.sub"(%R2.0x640, %R2, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B223C6 = "arith.cast"(%R3, %D47C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B224C6 = "arith.min"(%R2.0x640, %C15, %D47C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B225C6 = "arith.max"(%R3, %C-15, %D47C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B226C6 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D47C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B227C6 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D47C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B228C6 = "arith.mul"(%R2.0x640, %R3, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B229C6 = "arith.add"(%R3, %C1.0, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B230C6 = "arith.div"(%C1.0, %R2, %D47C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B231C6 = "arith.mul"(%R3, %R0.0x480, %D47C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800ca580, %D48C6 = "dma.tensor"(%R3, %B231C6) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B232C6, %msg49 = "system.send_msg"(%D48C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D49C6, %msg49 = "dma.sys.sys_send"(%B232C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D37C7, %msg49 = "@core_7"(%D27C7, %msg48) {
CHECK:          %B121C7 = "system.wait_msg"(%D27C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D28C7 = "dma.sys.sys_wait"(%B121C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D29C7 = "dma.tensor"(%G1.0x59000, %B121C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R0, %D30C7 = "dma.tensor"(%G1.0x5a000, %B121C7) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R1, %D31C7 = "dma.tensor"(%L30.0x698089ab20, %B121C7) : (memref<1x64x11x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x11x80xi16, strides: [896, 896, 80, 1]>, none)
CHECK:          %R2, %B122C7 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D31C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x11x80xf16, strides: [896, 896, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %D32C7 = "dma.tensor"(%G1.0x6c000, %B121C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R3.0x640, %D33C7 = "dma.tensor"(%G1.0x6d000, %B121C7) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R0.0x1100, %B123C7 = "tsbc.s_bc"(%R0.0x580, %D33C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B124C7 = "arith.sub"(%C0.0, %R2, %D33C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B125C7 = "arith.max"(%R0.0xac0, %C-45408.0, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B126C7 = "arith.min"(%R0.0xac0, %C45408.0, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B127C7 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B128C7 = "arith.cast"(%R0.0x480, %D33C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B129C7 = "arith.mul"(%R1, %C0.693359375, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B130C7 = "arith.sub"(%R0.0xac0, %R0.0x480, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B131C7 = "arith.cast"(%R1, %D33C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B132C7 = "arith.min"(%R0.0xac0, %C15, %D33C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B133C7 = "arith.max"(%R1, %C-15, %D33C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1, %B134C7 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D33C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B135C7 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D33C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B136C7 = "arith.mul"(%R0.0xac0, %R1, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B137C7 = "arith.add"(%R1, %C1.0, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B138C7 = "arith.div"(%C1.0, %R0.0x480, %D33C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1, %B139C7 = "arith.mul"(%R1, %R2, %D33C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D34C7 = "dma.tensor"(%L30.0x69807d2bc0, %B122C7) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B140C7 = "arith.add"(%R3, %R1, %D34C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B141C7 = "conv.normal"(%R2, %R3.0x640, %R4, %C0.0, %D34C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980002bc0, %D35C7 = "dma.tensor"(%R2, %B140C7) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %R2.0xc80, %B142C7 = "tsbc.s_bc"(%R0.0x580, %D35C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x640, %B143C7 = "arith.sub"(%C0.0, %R0.0x480, %D35C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B144C7 = "arith.max"(%R2.0x640, %C-45408.0, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B145C7 = "arith.min"(%R2.0x640, %C45408.0, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B146C7 = "arith.mul"(%R2.0x640, %C1.4423828125, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B147C7 = "arith.cast"(%R2, %D35C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B148C7 = "arith.mul"(%R3, %C0.693359375, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B149C7 = "arith.sub"(%R2.0x640, %R2, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B150C7 = "arith.cast"(%R3, %D35C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B151C7 = "arith.min"(%R2.0x640, %C15, %D35C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B152C7 = "arith.max"(%R3, %C-15, %D35C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B153C7 = "arith.add_satu"(%R2.0x640, %C15, %C10, %D35C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B154C7 = "sfu.taylor_4x"(%R2, %R2.0xc80, %D35C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B155C7 = "arith.mul"(%R2.0x640, %R3, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B156C7 = "arith.add"(%R3, %C1.0, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B157C7 = "arith.div"(%C1.0, %R2, %D35C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B158C7 = "arith.mul"(%R3, %R0.0x480, %D35C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800cabc0, %D36C7 = "dma.tensor"(%R3, %B158C7) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B159C7, %msg49 = "system.send_msg"(%D36C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D37C7, %msg49 = "dma.sys.sys_send"(%B159C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D55C0, %msg48 = "@core_0"(%D53C0, %msg49) {
CHECK:          %B306C0 = "system.wait_msg"(%D53C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C0 = "dma.sys.sys_wait"(%B306C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B307C0, %msg48 = "system.send_msg"(%D54C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D55C0, %msg48 = "dma.sys.sys_send"(%B307C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D55C1, %msg48 = "@core_1"(%D53C1, %msg49) {
CHECK:          %B306C1 = "system.wait_msg"(%D53C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C1 = "dma.sys.sys_wait"(%B306C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B307C1, %msg48 = "system.send_msg"(%D54C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D55C1, %msg48 = "dma.sys.sys_send"(%B307C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D55C2, %msg48 = "@core_2"(%D53C2, %msg49) {
CHECK:          %B306C2 = "system.wait_msg"(%D53C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C2 = "dma.sys.sys_wait"(%B306C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B307C2, %msg48 = "system.send_msg"(%D54C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D55C2, %msg48 = "dma.sys.sys_send"(%B307C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D55C3, %msg48 = "@core_3"(%D53C3, %msg49) {
CHECK:          %B306C3 = "system.wait_msg"(%D53C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C3 = "dma.sys.sys_wait"(%B306C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B307C3, %msg48 = "system.send_msg"(%D54C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D55C3, %msg48 = "dma.sys.sys_send"(%B307C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D55C4, %msg48 = "@core_4"(%D53C4, %msg49) {
CHECK:          %B306C4 = "system.wait_msg"(%D53C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C4 = "dma.sys.sys_wait"(%B306C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B307C4, %msg48 = "system.send_msg"(%D54C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D55C4, %msg48 = "dma.sys.sys_send"(%B307C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D55C5, %msg48 = "@core_5"(%D53C5, %msg49) {
CHECK:          %B306C5 = "system.wait_msg"(%D53C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C5 = "dma.sys.sys_wait"(%B306C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B307C5, %msg48 = "system.send_msg"(%D54C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D55C5, %msg48 = "dma.sys.sys_send"(%B307C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D51C6, %msg48 = "@core_6"(%D49C6, %msg49) {
CHECK:          %B233C6 = "system.wait_msg"(%D49C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D50C6 = "dma.sys.sys_wait"(%B233C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B234C6, %msg48 = "system.send_msg"(%D50C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D51C6, %msg48 = "dma.sys.sys_send"(%B234C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D39C7, %msg48 = "@core_7"(%D37C7, %msg49) {
CHECK:          %B160C7 = "system.wait_msg"(%D37C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D38C7 = "dma.sys.sys_wait"(%B160C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B161C7, %msg48 = "system.send_msg"(%D38C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D39C7, %msg48 = "dma.sys.sys_send"(%B161C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C0, %msg49 = "@core_0"(%D55C0, %msg48) {
CHECK:          %B308C0 = "system.wait_msg"(%D55C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D56C0 = "dma.sys.sys_wait"(%B308C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D57C0 = "dma.tensor"(%L30.0x69800c8000, %B308C0) : (memref<1x64x11x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x11x80xi16, strides: [896, 896, 80, 1]>, none)
CHECK:          %R0, %D58C0 = "dma.tensor"(%G1.0x70000, %B308C0) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D59C0 = "dma.tensor"(%G1.0x6f000, %B308C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B309C0 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D59C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x11x80xf16, strides: [896, 896, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B310C0 = "tsbc.s_bc"(%R0.0x580, %D59C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B311C0 = "arith.sub"(%C0.0, %R1, %D59C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B312C0 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B313C0 = "arith.min"(%R0.0xac0, %C45408.0, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B314C0 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B315C0 = "arith.cast"(%R0.0x480, %D59C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B316C0 = "arith.mul"(%R3.0x200, %C0.693359375, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B317C0 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B318C0 = "arith.cast"(%R3.0x200, %D59C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B319C0 = "arith.min"(%R0.0xac0, %C15, %D59C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B320C0 = "arith.max"(%R3.0x200, %C-15, %D59C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B321C0 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B322C0 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B323C0 = "arith.mul"(%R0.0xac0, %R3.0x200, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B324C0 = "arith.add"(%R3.0x200, %C1.0, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B325C0 = "arith.div"(%C1.0, %R0.0x480, %D59C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B326C0 = "arith.mul"(%R3.0x200, %R1, %D59C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D60C0 = "dma.tensor"(%L30.0x6980000000, %B309C0) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D61C0 = "dma.tensor"(%G1.0x82000, %B309C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B327C0 = "arith.add"(%R2, %R3.0x200, %D61C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D62C0 = "dma.tensor"(%L30.0x6980320000, %B326C0) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D63C0 = "dma.tensor"(%G1.0x83000, %B326C0) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B328C0 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D63C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B329C0 = "tsbc.s_bc"(%R0.0x580, %D63C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B330C0 = "arith.sub"(%C0.0, %R1.0x640, %D63C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B331C0 = "arith.max"(%R0.0xac0, %C-45408.0, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B332C0 = "arith.min"(%R0.0xac0, %C45408.0, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B333C0 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B334C0 = "arith.cast"(%R0.0x480, %D63C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B335C0 = "arith.mul"(%R2, %C0.693359375, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B336C0 = "arith.sub"(%R0.0xac0, %R0.0x480, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B337C0 = "arith.cast"(%R2, %D63C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B338C0 = "arith.min"(%R0.0xac0, %C15, %D63C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B339C0 = "arith.max"(%R2, %C-15, %D63C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B340C0 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D63C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B341C0 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D63C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B342C0 = "arith.mul"(%R0.0xac0, %R2, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B343C0 = "arith.add"(%R2, %C1.0, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B344C0 = "arith.div"(%C1.0, %R0.0x480, %D63C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B345C0 = "arith.mul"(%R2, %R1.0x640, %D63C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D64C0 = "dma.tensor"(%G1.0x88000, %B328C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D65C0 = "dma.tensor"(%G1.0x87000, %B328C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B346C0 = "arith.copy"(%R1, %D65C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B347C0 = "arith.copy"(%R2, %D65C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B348C0 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D65C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B349C0 = "tsbc.s_bc"(%R0.0x580, %D65C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B350C0 = "arith.sub"(%C0.0, %R1, %D65C0) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B351C0 = "arith.max"(%R4.0xc80, %C-45408.0, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B352C0 = "arith.min"(%R4.0xc80, %C45408.0, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B353C0 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B354C0 = "arith.cast"(%R4, %D65C0) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B355C0 = "arith.mul"(%R2, %C0.693359375, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B356C0 = "arith.sub"(%R4.0xc80, %R4, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B357C0 = "arith.cast"(%R2, %D65C0) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B358C0 = "arith.min"(%R4.0xc80, %C15, %D65C0) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B359C0 = "arith.max"(%R2, %C-15, %D65C0) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B360C0 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D65C0) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B361C0 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D65C0) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B362C0 = "arith.mul"(%R4.0xc80, %R2, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B363C0 = "arith.add"(%R2, %C1.0, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B364C0 = "arith.div"(%C1.0, %R4, %D65C0) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B365C0 = "arith.mul"(%R2, %R1, %D65C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b0000, %D66C0 = "dma.tensor"(%R2, %B365C0) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B366C0, %msg49 = "system.send_msg"(%D66C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C0, %msg49 = "dma.sys.sys_send"(%B366C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C1, %msg49 = "@core_1"(%D55C1, %msg48) {
CHECK:          %B308C1 = "system.wait_msg"(%D55C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D56C1 = "dma.sys.sys_wait"(%B308C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D57C1 = "dma.tensor"(%L30.0x69800c85a0, %B308C1) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R0, %D58C1 = "dma.tensor"(%G1.0x70000, %B308C1) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D59C1 = "dma.tensor"(%G1.0x6f000, %B308C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B309C1 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D59C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B310C1 = "tsbc.s_bc"(%R0.0x580, %D59C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B311C1 = "arith.sub"(%C0.0, %R1, %D59C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B312C1 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B313C1 = "arith.min"(%R0.0xac0, %C45408.0, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B314C1 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B315C1 = "arith.cast"(%R0.0x480, %D59C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B316C1 = "arith.mul"(%R3.0x200, %C0.693359375, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B317C1 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B318C1 = "arith.cast"(%R3.0x200, %D59C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B319C1 = "arith.min"(%R0.0xac0, %C15, %D59C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B320C1 = "arith.max"(%R3.0x200, %C-15, %D59C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B321C1 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B322C1 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B323C1 = "arith.mul"(%R0.0xac0, %R3.0x200, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B324C1 = "arith.add"(%R3.0x200, %C1.0, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B325C1 = "arith.div"(%C1.0, %R0.0x480, %D59C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B326C1 = "arith.mul"(%R3.0x200, %R1, %D59C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D60C1 = "dma.tensor"(%L30.0x6980000640, %B309C1) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D61C1 = "dma.tensor"(%G1.0x82000, %B309C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B327C1 = "arith.add"(%R2, %R3.0x200, %D61C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D62C1 = "dma.tensor"(%L30.0x6980320640, %B326C1) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D63C1 = "dma.tensor"(%G1.0x83000, %B326C1) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B328C1 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D63C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B329C1 = "tsbc.s_bc"(%R0.0x580, %D63C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B330C1 = "arith.sub"(%C0.0, %R1.0x640, %D63C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B331C1 = "arith.max"(%R0.0xac0, %C-45408.0, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B332C1 = "arith.min"(%R0.0xac0, %C45408.0, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B333C1 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B334C1 = "arith.cast"(%R0.0x480, %D63C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B335C1 = "arith.mul"(%R2, %C0.693359375, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B336C1 = "arith.sub"(%R0.0xac0, %R0.0x480, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B337C1 = "arith.cast"(%R2, %D63C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B338C1 = "arith.min"(%R0.0xac0, %C15, %D63C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B339C1 = "arith.max"(%R2, %C-15, %D63C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B340C1 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D63C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B341C1 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D63C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B342C1 = "arith.mul"(%R0.0xac0, %R2, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B343C1 = "arith.add"(%R2, %C1.0, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B344C1 = "arith.div"(%C1.0, %R0.0x480, %D63C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B345C1 = "arith.mul"(%R2, %R1.0x640, %D63C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D64C1 = "dma.tensor"(%G1.0x88000, %B328C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D65C1 = "dma.tensor"(%G1.0x87000, %B328C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B346C1 = "arith.copy"(%R1, %D65C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B347C1 = "arith.copy"(%R2, %D65C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B348C1 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D65C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B349C1 = "tsbc.s_bc"(%R0.0x580, %D65C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B350C1 = "arith.sub"(%C0.0, %R1, %D65C1) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B351C1 = "arith.max"(%R4.0xc80, %C-45408.0, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B352C1 = "arith.min"(%R4.0xc80, %C45408.0, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B353C1 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B354C1 = "arith.cast"(%R4, %D65C1) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B355C1 = "arith.mul"(%R2, %C0.693359375, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B356C1 = "arith.sub"(%R4.0xc80, %R4, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B357C1 = "arith.cast"(%R2, %D65C1) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B358C1 = "arith.min"(%R4.0xc80, %C15, %D65C1) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B359C1 = "arith.max"(%R2, %C-15, %D65C1) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B360C1 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D65C1) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B361C1 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D65C1) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B362C1 = "arith.mul"(%R4.0xc80, %R2, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B363C1 = "arith.add"(%R2, %C1.0, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B364C1 = "arith.div"(%C1.0, %R4, %D65C1) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B365C1 = "arith.mul"(%R2, %R1, %D65C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b0640, %D66C1 = "dma.tensor"(%R2, %B365C1) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B366C1, %msg49 = "system.send_msg"(%D66C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C1, %msg49 = "dma.sys.sys_send"(%B366C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C2, %msg49 = "@core_2"(%D55C2, %msg48) {
CHECK:          %B308C2 = "system.wait_msg"(%D55C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D56C2 = "dma.sys.sys_wait"(%B308C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D57C2 = "dma.tensor"(%L30.0x69800c8be0, %B308C2) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R0, %D58C2 = "dma.tensor"(%G1.0x70000, %B308C2) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D59C2 = "dma.tensor"(%G1.0x6f000, %B308C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B309C2 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D59C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B310C2 = "tsbc.s_bc"(%R0.0x580, %D59C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B311C2 = "arith.sub"(%C0.0, %R1, %D59C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B312C2 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B313C2 = "arith.min"(%R0.0xac0, %C45408.0, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B314C2 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B315C2 = "arith.cast"(%R0.0x480, %D59C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B316C2 = "arith.mul"(%R3.0x200, %C0.693359375, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B317C2 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B318C2 = "arith.cast"(%R3.0x200, %D59C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B319C2 = "arith.min"(%R0.0xac0, %C15, %D59C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B320C2 = "arith.max"(%R3.0x200, %C-15, %D59C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B321C2 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B322C2 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B323C2 = "arith.mul"(%R0.0xac0, %R3.0x200, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B324C2 = "arith.add"(%R3.0x200, %C1.0, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B325C2 = "arith.div"(%C1.0, %R0.0x480, %D59C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B326C2 = "arith.mul"(%R3.0x200, %R1, %D59C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D60C2 = "dma.tensor"(%L30.0x6980000c80, %B309C2) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D61C2 = "dma.tensor"(%G1.0x82000, %B309C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B327C2 = "arith.add"(%R2, %R3.0x200, %D61C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D62C2 = "dma.tensor"(%L30.0x6980320c80, %B326C2) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D63C2 = "dma.tensor"(%G1.0x83000, %B326C2) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B328C2 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D63C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B329C2 = "tsbc.s_bc"(%R0.0x580, %D63C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B330C2 = "arith.sub"(%C0.0, %R1.0x640, %D63C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B331C2 = "arith.max"(%R0.0xac0, %C-45408.0, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B332C2 = "arith.min"(%R0.0xac0, %C45408.0, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B333C2 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B334C2 = "arith.cast"(%R0.0x480, %D63C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B335C2 = "arith.mul"(%R2, %C0.693359375, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B336C2 = "arith.sub"(%R0.0xac0, %R0.0x480, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B337C2 = "arith.cast"(%R2, %D63C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B338C2 = "arith.min"(%R0.0xac0, %C15, %D63C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B339C2 = "arith.max"(%R2, %C-15, %D63C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B340C2 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D63C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B341C2 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D63C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B342C2 = "arith.mul"(%R0.0xac0, %R2, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B343C2 = "arith.add"(%R2, %C1.0, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B344C2 = "arith.div"(%C1.0, %R0.0x480, %D63C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B345C2 = "arith.mul"(%R2, %R1.0x640, %D63C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D64C2 = "dma.tensor"(%G1.0x88000, %B328C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D65C2 = "dma.tensor"(%G1.0x87000, %B328C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B346C2 = "arith.copy"(%R1, %D65C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B347C2 = "arith.copy"(%R2, %D65C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B348C2 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D65C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B349C2 = "tsbc.s_bc"(%R0.0x580, %D65C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B350C2 = "arith.sub"(%C0.0, %R1, %D65C2) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B351C2 = "arith.max"(%R4.0xc80, %C-45408.0, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B352C2 = "arith.min"(%R4.0xc80, %C45408.0, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B353C2 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B354C2 = "arith.cast"(%R4, %D65C2) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B355C2 = "arith.mul"(%R2, %C0.693359375, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B356C2 = "arith.sub"(%R4.0xc80, %R4, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B357C2 = "arith.cast"(%R2, %D65C2) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B358C2 = "arith.min"(%R4.0xc80, %C15, %D65C2) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B359C2 = "arith.max"(%R2, %C-15, %D65C2) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B360C2 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D65C2) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B361C2 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D65C2) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B362C2 = "arith.mul"(%R4.0xc80, %R2, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B363C2 = "arith.add"(%R2, %C1.0, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B364C2 = "arith.div"(%C1.0, %R4, %D65C2) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B365C2 = "arith.mul"(%R2, %R1, %D65C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b0c80, %D66C2 = "dma.tensor"(%R2, %B365C2) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B366C2, %msg49 = "system.send_msg"(%D66C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C2, %msg49 = "dma.sys.sys_send"(%B366C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C3, %msg49 = "@core_3"(%D55C3, %msg48) {
CHECK:          %B308C3 = "system.wait_msg"(%D55C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D56C3 = "dma.sys.sys_wait"(%B308C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D57C3 = "dma.tensor"(%L30.0x69800c9220, %B308C3) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R0, %D58C3 = "dma.tensor"(%G1.0x70000, %B308C3) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D59C3 = "dma.tensor"(%G1.0x6f000, %B308C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B309C3 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D59C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B310C3 = "tsbc.s_bc"(%R0.0x580, %D59C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B311C3 = "arith.sub"(%C0.0, %R1, %D59C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B312C3 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B313C3 = "arith.min"(%R0.0xac0, %C45408.0, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B314C3 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B315C3 = "arith.cast"(%R0.0x480, %D59C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B316C3 = "arith.mul"(%R3.0x200, %C0.693359375, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B317C3 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B318C3 = "arith.cast"(%R3.0x200, %D59C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B319C3 = "arith.min"(%R0.0xac0, %C15, %D59C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B320C3 = "arith.max"(%R3.0x200, %C-15, %D59C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B321C3 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B322C3 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B323C3 = "arith.mul"(%R0.0xac0, %R3.0x200, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B324C3 = "arith.add"(%R3.0x200, %C1.0, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B325C3 = "arith.div"(%C1.0, %R0.0x480, %D59C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B326C3 = "arith.mul"(%R3.0x200, %R1, %D59C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D60C3 = "dma.tensor"(%L30.0x69800012c0, %B309C3) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D61C3 = "dma.tensor"(%G1.0x82000, %B309C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B327C3 = "arith.add"(%R2, %R3.0x200, %D61C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D62C3 = "dma.tensor"(%L30.0x69803212c0, %B326C3) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D63C3 = "dma.tensor"(%G1.0x83000, %B326C3) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B328C3 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D63C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B329C3 = "tsbc.s_bc"(%R0.0x580, %D63C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B330C3 = "arith.sub"(%C0.0, %R1.0x640, %D63C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B331C3 = "arith.max"(%R0.0xac0, %C-45408.0, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B332C3 = "arith.min"(%R0.0xac0, %C45408.0, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B333C3 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B334C3 = "arith.cast"(%R0.0x480, %D63C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B335C3 = "arith.mul"(%R2, %C0.693359375, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B336C3 = "arith.sub"(%R0.0xac0, %R0.0x480, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B337C3 = "arith.cast"(%R2, %D63C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B338C3 = "arith.min"(%R0.0xac0, %C15, %D63C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B339C3 = "arith.max"(%R2, %C-15, %D63C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B340C3 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D63C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B341C3 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D63C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B342C3 = "arith.mul"(%R0.0xac0, %R2, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B343C3 = "arith.add"(%R2, %C1.0, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B344C3 = "arith.div"(%C1.0, %R0.0x480, %D63C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B345C3 = "arith.mul"(%R2, %R1.0x640, %D63C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D64C3 = "dma.tensor"(%G1.0x88000, %B328C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D65C3 = "dma.tensor"(%G1.0x87000, %B328C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B346C3 = "arith.copy"(%R1, %D65C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B347C3 = "arith.copy"(%R2, %D65C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B348C3 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D65C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B349C3 = "tsbc.s_bc"(%R0.0x580, %D65C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B350C3 = "arith.sub"(%C0.0, %R1, %D65C3) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B351C3 = "arith.max"(%R4.0xc80, %C-45408.0, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B352C3 = "arith.min"(%R4.0xc80, %C45408.0, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B353C3 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B354C3 = "arith.cast"(%R4, %D65C3) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B355C3 = "arith.mul"(%R2, %C0.693359375, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B356C3 = "arith.sub"(%R4.0xc80, %R4, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B357C3 = "arith.cast"(%R2, %D65C3) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B358C3 = "arith.min"(%R4.0xc80, %C15, %D65C3) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B359C3 = "arith.max"(%R2, %C-15, %D65C3) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B360C3 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D65C3) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B361C3 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D65C3) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B362C3 = "arith.mul"(%R4.0xc80, %R2, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B363C3 = "arith.add"(%R2, %C1.0, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B364C3 = "arith.div"(%C1.0, %R4, %D65C3) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B365C3 = "arith.mul"(%R2, %R1, %D65C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b12c0, %D66C3 = "dma.tensor"(%R2, %B365C3) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B366C3, %msg49 = "system.send_msg"(%D66C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C3, %msg49 = "dma.sys.sys_send"(%B366C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C4, %msg49 = "@core_4"(%D55C4, %msg48) {
CHECK:          %B308C4 = "system.wait_msg"(%D55C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D56C4 = "dma.sys.sys_wait"(%B308C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D57C4 = "dma.tensor"(%L30.0x69800c9860, %B308C4) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R0, %D58C4 = "dma.tensor"(%G1.0x70000, %B308C4) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D59C4 = "dma.tensor"(%G1.0x6f000, %B308C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B309C4 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D59C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B310C4 = "tsbc.s_bc"(%R0.0x580, %D59C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B311C4 = "arith.sub"(%C0.0, %R1, %D59C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B312C4 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B313C4 = "arith.min"(%R0.0xac0, %C45408.0, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B314C4 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B315C4 = "arith.cast"(%R0.0x480, %D59C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B316C4 = "arith.mul"(%R3.0x200, %C0.693359375, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B317C4 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B318C4 = "arith.cast"(%R3.0x200, %D59C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B319C4 = "arith.min"(%R0.0xac0, %C15, %D59C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B320C4 = "arith.max"(%R3.0x200, %C-15, %D59C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B321C4 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B322C4 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B323C4 = "arith.mul"(%R0.0xac0, %R3.0x200, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B324C4 = "arith.add"(%R3.0x200, %C1.0, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B325C4 = "arith.div"(%C1.0, %R0.0x480, %D59C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B326C4 = "arith.mul"(%R3.0x200, %R1, %D59C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D60C4 = "dma.tensor"(%L30.0x6980001900, %B309C4) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D61C4 = "dma.tensor"(%G1.0x82000, %B309C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B327C4 = "arith.add"(%R2, %R3.0x200, %D61C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D62C4 = "dma.tensor"(%L30.0x6980321900, %B326C4) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D63C4 = "dma.tensor"(%G1.0x83000, %B326C4) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B328C4 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D63C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B329C4 = "tsbc.s_bc"(%R0.0x580, %D63C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B330C4 = "arith.sub"(%C0.0, %R1.0x640, %D63C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B331C4 = "arith.max"(%R0.0xac0, %C-45408.0, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B332C4 = "arith.min"(%R0.0xac0, %C45408.0, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B333C4 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B334C4 = "arith.cast"(%R0.0x480, %D63C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B335C4 = "arith.mul"(%R2, %C0.693359375, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B336C4 = "arith.sub"(%R0.0xac0, %R0.0x480, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B337C4 = "arith.cast"(%R2, %D63C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B338C4 = "arith.min"(%R0.0xac0, %C15, %D63C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B339C4 = "arith.max"(%R2, %C-15, %D63C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B340C4 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D63C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B341C4 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D63C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B342C4 = "arith.mul"(%R0.0xac0, %R2, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B343C4 = "arith.add"(%R2, %C1.0, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B344C4 = "arith.div"(%C1.0, %R0.0x480, %D63C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B345C4 = "arith.mul"(%R2, %R1.0x640, %D63C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D64C4 = "dma.tensor"(%G1.0x88000, %B328C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D65C4 = "dma.tensor"(%G1.0x87000, %B328C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B346C4 = "arith.copy"(%R1, %D65C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B347C4 = "arith.copy"(%R2, %D65C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B348C4 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D65C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B349C4 = "tsbc.s_bc"(%R0.0x580, %D65C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B350C4 = "arith.sub"(%C0.0, %R1, %D65C4) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B351C4 = "arith.max"(%R4.0xc80, %C-45408.0, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B352C4 = "arith.min"(%R4.0xc80, %C45408.0, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B353C4 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B354C4 = "arith.cast"(%R4, %D65C4) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B355C4 = "arith.mul"(%R2, %C0.693359375, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B356C4 = "arith.sub"(%R4.0xc80, %R4, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B357C4 = "arith.cast"(%R2, %D65C4) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B358C4 = "arith.min"(%R4.0xc80, %C15, %D65C4) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B359C4 = "arith.max"(%R2, %C-15, %D65C4) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B360C4 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D65C4) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B361C4 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D65C4) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B362C4 = "arith.mul"(%R4.0xc80, %R2, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B363C4 = "arith.add"(%R2, %C1.0, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B364C4 = "arith.div"(%C1.0, %R4, %D65C4) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B365C4 = "arith.mul"(%R2, %R1, %D65C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b1900, %D66C4 = "dma.tensor"(%R2, %B365C4) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B366C4, %msg49 = "system.send_msg"(%D66C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C4, %msg49 = "dma.sys.sys_send"(%B366C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C5, %msg49 = "@core_5"(%D55C5, %msg48) {
CHECK:          %B308C5 = "system.wait_msg"(%D55C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D56C5 = "dma.sys.sys_wait"(%B308C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D57C5 = "dma.tensor"(%L30.0x69800c9ea0, %B308C5) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R0, %D58C5 = "dma.tensor"(%G1.0x70000, %B308C5) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D59C5 = "dma.tensor"(%G1.0x6f000, %B308C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B309C5 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D59C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B310C5 = "tsbc.s_bc"(%R0.0x580, %D59C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B311C5 = "arith.sub"(%C0.0, %R1, %D59C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B312C5 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B313C5 = "arith.min"(%R0.0xac0, %C45408.0, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B314C5 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B315C5 = "arith.cast"(%R0.0x480, %D59C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B316C5 = "arith.mul"(%R3.0x200, %C0.693359375, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B317C5 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B318C5 = "arith.cast"(%R3.0x200, %D59C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B319C5 = "arith.min"(%R0.0xac0, %C15, %D59C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B320C5 = "arith.max"(%R3.0x200, %C-15, %D59C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B321C5 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B322C5 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B323C5 = "arith.mul"(%R0.0xac0, %R3.0x200, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B324C5 = "arith.add"(%R3.0x200, %C1.0, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B325C5 = "arith.div"(%C1.0, %R0.0x480, %D59C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B326C5 = "arith.mul"(%R3.0x200, %R1, %D59C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D60C5 = "dma.tensor"(%L30.0x6980001f40, %B309C5) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D61C5 = "dma.tensor"(%G1.0x82000, %B309C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B327C5 = "arith.add"(%R2, %R3.0x200, %D61C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D62C5 = "dma.tensor"(%L30.0x6980321f40, %B326C5) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D63C5 = "dma.tensor"(%G1.0x83000, %B326C5) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B328C5 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D63C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B329C5 = "tsbc.s_bc"(%R0.0x580, %D63C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B330C5 = "arith.sub"(%C0.0, %R1.0x640, %D63C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B331C5 = "arith.max"(%R0.0xac0, %C-45408.0, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B332C5 = "arith.min"(%R0.0xac0, %C45408.0, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B333C5 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B334C5 = "arith.cast"(%R0.0x480, %D63C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B335C5 = "arith.mul"(%R2, %C0.693359375, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B336C5 = "arith.sub"(%R0.0xac0, %R0.0x480, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B337C5 = "arith.cast"(%R2, %D63C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B338C5 = "arith.min"(%R0.0xac0, %C15, %D63C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B339C5 = "arith.max"(%R2, %C-15, %D63C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B340C5 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D63C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B341C5 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D63C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B342C5 = "arith.mul"(%R0.0xac0, %R2, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B343C5 = "arith.add"(%R2, %C1.0, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B344C5 = "arith.div"(%C1.0, %R0.0x480, %D63C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B345C5 = "arith.mul"(%R2, %R1.0x640, %D63C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D64C5 = "dma.tensor"(%G1.0x88000, %B328C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D65C5 = "dma.tensor"(%G1.0x87000, %B328C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B346C5 = "arith.copy"(%R1, %D65C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B347C5 = "arith.copy"(%R2, %D65C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B348C5 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D65C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B349C5 = "tsbc.s_bc"(%R0.0x580, %D65C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B350C5 = "arith.sub"(%C0.0, %R1, %D65C5) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B351C5 = "arith.max"(%R4.0xc80, %C-45408.0, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B352C5 = "arith.min"(%R4.0xc80, %C45408.0, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B353C5 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B354C5 = "arith.cast"(%R4, %D65C5) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B355C5 = "arith.mul"(%R2, %C0.693359375, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B356C5 = "arith.sub"(%R4.0xc80, %R4, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B357C5 = "arith.cast"(%R2, %D65C5) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B358C5 = "arith.min"(%R4.0xc80, %C15, %D65C5) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B359C5 = "arith.max"(%R2, %C-15, %D65C5) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B360C5 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D65C5) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B361C5 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D65C5) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B362C5 = "arith.mul"(%R4.0xc80, %R2, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B363C5 = "arith.add"(%R2, %C1.0, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B364C5 = "arith.div"(%C1.0, %R4, %D65C5) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B365C5 = "arith.mul"(%R2, %R1, %D65C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b1f40, %D66C5 = "dma.tensor"(%R2, %B365C5) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B366C5, %msg49 = "system.send_msg"(%D66C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C5, %msg49 = "dma.sys.sys_send"(%B366C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D63C6, %msg49 = "@core_6"(%D51C6, %msg48) {
CHECK:          %B235C6 = "system.wait_msg"(%D51C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D52C6 = "dma.sys.sys_wait"(%B235C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D53C6 = "dma.tensor"(%L30.0x69800ca4e0, %B235C6) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R0, %D54C6 = "dma.tensor"(%G1.0x70000, %B235C6) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D55C6 = "dma.tensor"(%G1.0x6f000, %B235C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B236C6 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D55C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B237C6 = "tsbc.s_bc"(%R0.0x580, %D55C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B238C6 = "arith.sub"(%C0.0, %R1, %D55C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B239C6 = "arith.max"(%R0.0xac0, %C-45408.0, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B240C6 = "arith.min"(%R0.0xac0, %C45408.0, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B241C6 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B242C6 = "arith.cast"(%R0.0x480, %D55C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B243C6 = "arith.mul"(%R3.0x200, %C0.693359375, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B244C6 = "arith.sub"(%R0.0xac0, %R0.0x480, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B245C6 = "arith.cast"(%R3.0x200, %D55C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B246C6 = "arith.min"(%R0.0xac0, %C15, %D55C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B247C6 = "arith.max"(%R3.0x200, %C-15, %D55C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B248C6 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D55C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B249C6 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D55C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B250C6 = "arith.mul"(%R0.0xac0, %R3.0x200, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B251C6 = "arith.add"(%R3.0x200, %C1.0, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B252C6 = "arith.div"(%C1.0, %R0.0x480, %D55C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B253C6 = "arith.mul"(%R3.0x200, %R1, %D55C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D56C6 = "dma.tensor"(%L30.0x6980002580, %B236C6) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D57C6 = "dma.tensor"(%G1.0x82000, %B236C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B254C6 = "arith.add"(%R2, %R3.0x200, %D57C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D58C6 = "dma.tensor"(%L30.0x6980322580, %B253C6) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D59C6 = "dma.tensor"(%G1.0x83000, %B253C6) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B255C6 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D59C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B256C6 = "tsbc.s_bc"(%R0.0x580, %D59C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B257C6 = "arith.sub"(%C0.0, %R1.0x640, %D59C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B258C6 = "arith.max"(%R0.0xac0, %C-45408.0, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B259C6 = "arith.min"(%R0.0xac0, %C45408.0, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B260C6 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B261C6 = "arith.cast"(%R0.0x480, %D59C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B262C6 = "arith.mul"(%R2, %C0.693359375, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B263C6 = "arith.sub"(%R0.0xac0, %R0.0x480, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B264C6 = "arith.cast"(%R2, %D59C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B265C6 = "arith.min"(%R0.0xac0, %C15, %D59C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B266C6 = "arith.max"(%R2, %C-15, %D59C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B267C6 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D59C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B268C6 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D59C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B269C6 = "arith.mul"(%R0.0xac0, %R2, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B270C6 = "arith.add"(%R2, %C1.0, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B271C6 = "arith.div"(%C1.0, %R0.0x480, %D59C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B272C6 = "arith.mul"(%R2, %R1.0x640, %D59C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D60C6 = "dma.tensor"(%G1.0x88000, %B255C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D61C6 = "dma.tensor"(%G1.0x87000, %B255C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B273C6 = "arith.copy"(%R1, %D61C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B274C6 = "arith.copy"(%R2, %D61C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B275C6 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D61C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B276C6 = "tsbc.s_bc"(%R0.0x580, %D61C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B277C6 = "arith.sub"(%C0.0, %R1, %D61C6) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B278C6 = "arith.max"(%R4.0xc80, %C-45408.0, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B279C6 = "arith.min"(%R4.0xc80, %C45408.0, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B280C6 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B281C6 = "arith.cast"(%R4, %D61C6) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B282C6 = "arith.mul"(%R2, %C0.693359375, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B283C6 = "arith.sub"(%R4.0xc80, %R4, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B284C6 = "arith.cast"(%R2, %D61C6) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B285C6 = "arith.min"(%R4.0xc80, %C15, %D61C6) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B286C6 = "arith.max"(%R2, %C-15, %D61C6) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B287C6 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D61C6) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B288C6 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D61C6) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B289C6 = "arith.mul"(%R4.0xc80, %R2, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B290C6 = "arith.add"(%R2, %C1.0, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B291C6 = "arith.div"(%C1.0, %R4, %D61C6) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B292C6 = "arith.mul"(%R2, %R1, %D61C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b2580, %D62C6 = "dma.tensor"(%R2, %B292C6) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B293C6, %msg49 = "system.send_msg"(%D62C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D63C6, %msg49 = "dma.sys.sys_send"(%B293C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D51C7, %msg49 = "@core_7"(%D39C7, %msg48) {
CHECK:          %B162C7 = "system.wait_msg"(%D39C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D40C7 = "dma.sys.sys_wait"(%B162C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3.0x200, %D41C7 = "dma.tensor"(%L30.0x69800cab20, %B162C7) : (memref<1x64x11x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x11x80xi16, strides: [896, 896, 80, 1]>, none)
CHECK:          %R0, %D42C7 = "dma.tensor"(%G1.0x70000, %B162C7) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5, %D43C7 = "dma.tensor"(%G1.0x6f000, %B162C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B163C7 = "conv.normal"(%R3.0x200, %R0, %R5, %C0.0, %D43C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x11x80xf16, strides: [896, 896, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B164C7 = "tsbc.s_bc"(%R0.0x580, %D43C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B165C7 = "arith.sub"(%C0.0, %R1, %D43C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B166C7 = "arith.max"(%R0.0xac0, %C-45408.0, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B167C7 = "arith.min"(%R0.0xac0, %C45408.0, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B168C7 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B169C7 = "arith.cast"(%R0.0x480, %D43C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B170C7 = "arith.mul"(%R3.0x200, %C0.693359375, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B171C7 = "arith.sub"(%R0.0xac0, %R0.0x480, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B172C7 = "arith.cast"(%R3.0x200, %D43C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B173C7 = "arith.min"(%R0.0xac0, %C15, %D43C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B174C7 = "arith.max"(%R3.0x200, %C-15, %D43C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x200, %B175C7 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D43C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B176C7 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D43C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B177C7 = "arith.mul"(%R0.0xac0, %R3.0x200, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B178C7 = "arith.add"(%R3.0x200, %C1.0, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B179C7 = "arith.div"(%C1.0, %R0.0x480, %D43C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x200, %B180C7 = "arith.mul"(%R3.0x200, %R1, %D43C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %D44C7 = "dma.tensor"(%L30.0x6980002bc0, %B163C7) : (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0xc80, %D45C7 = "dma.tensor"(%G1.0x82000, %B163C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %B181C7 = "arith.add"(%R2, %R3.0x200, %D45C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [0, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %D46C7 = "dma.tensor"(%L30.0x6980322bc0, %B180C7) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1940, %D47C7 = "dma.tensor"(%G1.0x83000, %B180C7) : (memref<1x64x1x128xi16, strides: [8192, 128, 128, 1]>, none) -> (memref<1x64x1x128xi16, strides: [128, 128, 128, 1]>, none)
CHECK:          %R1.0x640, %B182C7 = "conv.normal"(%R0.0x480, %R4.0x1940, %R2.0xc80, %C0.0, %D47C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x1100, %B183C7 = "tsbc.s_bc"(%R0.0x580, %D47C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0xac0, %B184C7 = "arith.sub"(%C0.0, %R1.0x640, %D47C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B185C7 = "arith.max"(%R0.0xac0, %C-45408.0, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B186C7 = "arith.min"(%R0.0xac0, %C45408.0, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B187C7 = "arith.mul"(%R0.0xac0, %C1.4423828125, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B188C7 = "arith.cast"(%R0.0x480, %D47C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B189C7 = "arith.mul"(%R2, %C0.693359375, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B190C7 = "arith.sub"(%R0.0xac0, %R0.0x480, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B191C7 = "arith.cast"(%R2, %D47C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B192C7 = "arith.min"(%R0.0xac0, %C15, %D47C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0xac0, %B193C7 = "arith.max"(%R2, %C-15, %D47C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2, %B194C7 = "arith.add_satu"(%R0.0xac0, %C15, %C10, %D47C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B195C7 = "sfu.taylor_4x"(%R0.0x480, %R0.0x1100, %D47C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B196C7 = "arith.mul"(%R0.0xac0, %R2, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x480, %B197C7 = "arith.add"(%R2, %C1.0, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B198C7 = "arith.div"(%C1.0, %R0.0x480, %D47C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B199C7 = "arith.mul"(%R2, %R1.0x640, %D47C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %D48C7 = "dma.tensor"(%G1.0x88000, %B182C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1a40, %D49C7 = "dma.tensor"(%G1.0x87000, %B182C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0.0x480, %B200C7 = "arith.copy"(%R1, %D49C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0xac0, %B201C7 = "arith.copy"(%R2, %D49C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R1, %B202C7 = "conv.normal"(%R0.0x480, %R3, %R4.0x1a40, %C0.0, %D49C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1900, %B203C7 = "tsbc.s_bc"(%R0.0x580, %D49C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xc80, %B204C7 = "arith.sub"(%C0.0, %R1, %D49C7) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B205C7 = "arith.max"(%R4.0xc80, %C-45408.0, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B206C7 = "arith.min"(%R4.0xc80, %C45408.0, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B207C7 = "arith.mul"(%R4.0xc80, %C1.4423828125, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B208C7 = "arith.cast"(%R4, %D49C7) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B209C7 = "arith.mul"(%R2, %C0.693359375, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B210C7 = "arith.sub"(%R4.0xc80, %R4, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B211C7 = "arith.cast"(%R2, %D49C7) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B212C7 = "arith.min"(%R4.0xc80, %C15, %D49C7) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xc80, %B213C7 = "arith.max"(%R2, %C-15, %D49C7) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R2, %B214C7 = "arith.add_satu"(%R4.0xc80, %C15, %C10, %D49C7) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xc80, %B215C7 = "sfu.taylor_4x"(%R4, %R4.0x1900, %D49C7) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B216C7 = "arith.mul"(%R4.0xc80, %R2, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %B217C7 = "arith.add"(%R2, %C1.0, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B218C7 = "arith.div"(%C1.0, %R4, %D49C7) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B219C7 = "arith.mul"(%R2, %R1, %D49C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69804b2bc0, %D50C7 = "dma.tensor"(%R2, %B219C7) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B220C7, %msg49 = "system.send_msg"(%D50C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D51C7, %msg49 = "dma.sys.sys_send"(%B220C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D69C0, %msg48 = "@core_0"(%D67C0, %msg49) {
CHECK:          %B367C0 = "system.wait_msg"(%D67C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C0 = "dma.sys.sys_wait"(%B367C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B368C0, %msg48 = "system.send_msg"(%D68C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D69C0, %msg48 = "dma.sys.sys_send"(%B368C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D69C1, %msg48 = "@core_1"(%D67C1, %msg49) {
CHECK:          %B367C1 = "system.wait_msg"(%D67C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C1 = "dma.sys.sys_wait"(%B367C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B368C1, %msg48 = "system.send_msg"(%D68C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D69C1, %msg48 = "dma.sys.sys_send"(%B368C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D69C2, %msg48 = "@core_2"(%D67C2, %msg49) {
CHECK:          %B367C2 = "system.wait_msg"(%D67C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C2 = "dma.sys.sys_wait"(%B367C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B368C2, %msg48 = "system.send_msg"(%D68C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D69C2, %msg48 = "dma.sys.sys_send"(%B368C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D69C3, %msg48 = "@core_3"(%D67C3, %msg49) {
CHECK:          %B367C3 = "system.wait_msg"(%D67C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C3 = "dma.sys.sys_wait"(%B367C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B368C3, %msg48 = "system.send_msg"(%D68C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D69C3, %msg48 = "dma.sys.sys_send"(%B368C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D69C4, %msg48 = "@core_4"(%D67C4, %msg49) {
CHECK:          %B367C4 = "system.wait_msg"(%D67C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C4 = "dma.sys.sys_wait"(%B367C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B368C4, %msg48 = "system.send_msg"(%D68C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D69C4, %msg48 = "dma.sys.sys_send"(%B368C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D69C5, %msg48 = "@core_5"(%D67C5, %msg49) {
CHECK:          %B367C5 = "system.wait_msg"(%D67C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C5 = "dma.sys.sys_wait"(%B367C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B368C5, %msg48 = "system.send_msg"(%D68C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D69C5, %msg48 = "dma.sys.sys_send"(%B368C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D65C6, %msg48 = "@core_6"(%D63C6, %msg49) {
CHECK:          %B294C6 = "system.wait_msg"(%D63C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D64C6 = "dma.sys.sys_wait"(%B294C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B295C6, %msg48 = "system.send_msg"(%D64C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D65C6, %msg48 = "dma.sys.sys_send"(%B295C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D53C7, %msg48 = "@core_7"(%D51C7, %msg49) {
CHECK:          %B221C7 = "system.wait_msg"(%D51C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D52C7 = "dma.sys.sys_wait"(%B221C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B222C7, %msg48 = "system.send_msg"(%D52C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D53C7, %msg48 = "dma.sys.sys_send"(%B222C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D81C0, %msg49 = "@core_0"(%D69C0, %msg48) {
CHECK:          %B369C0 = "system.wait_msg"(%D69C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D70C0 = "dma.sys.sys_wait"(%B369C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D71C0 = "dma.tensor"(%L30.0x69804b0000, %B369C0) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4, %D72C0 = "dma.tensor"(%G1.0x90000, %B369C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D73C0 = "dma.tensor"(%G1.0x91000, %B369C0) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B370C0 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D73C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D74C0 = "dma.tensor"(%G1.0x121000, %B369C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D75C0 = "dma.tensor"(%G1.0x132000, %B369C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D76C0 = "dma.tensor"(%G1.0x133000, %B369C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D77C0 = "dma.tensor"(%G1.0x122000, %B369C0) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B371C0 = "tsbc.s_bc"(%R0.0x580, %D77C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B372C0 = "arith.sub"(%C0.0, %R2, %D77C0) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B373C0 = "arith.max"(%R3.0xb00, %C-45408.0, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B374C0 = "arith.min"(%R3.0xb00, %C45408.0, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B375C0 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B376C0 = "arith.cast"(%R3.0x400, %D77C0) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B377C0 = "arith.mul"(%R0.0x2400, %C0.693359375, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B378C0 = "arith.sub"(%R3.0xb00, %R3.0x400, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B379C0 = "arith.cast"(%R0.0x2400, %D77C0) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B380C0 = "arith.min"(%R3.0xb00, %C15, %D77C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B381C0 = "arith.max"(%R0.0x2400, %C-15, %D77C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B382C0 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D77C0) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B383C0 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D77C0) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B384C0 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B385C0 = "arith.add"(%R0.0x2400, %C1.0, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B386C0 = "arith.div"(%C1.0, %R3.0x400, %D77C0) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B387C0 = "arith.mul"(%R0.0x2400, %R2, %D77C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B388C0 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D77C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B389C0 = "tsbc.s_bc"(%R0.0x580, %D77C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B390C0 = "arith.sub"(%C0.0, %R0.0x2b00, %D77C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B391C0 = "arith.max"(%R0.0x3200, %C-45408.0, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B392C0 = "arith.min"(%R0.0x3200, %C45408.0, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B393C0 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B394C0 = "arith.cast"(%R0.0x2e80, %D77C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B395C0 = "arith.mul"(%R2.0x700, %C0.693359375, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B396C0 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B397C0 = "arith.cast"(%R2.0x700, %D77C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B398C0 = "arith.min"(%R0.0x3200, %C15, %D77C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B399C0 = "arith.max"(%R2.0x700, %C-15, %D77C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B400C0 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D77C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B401C0 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D77C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B402C0 = "arith.mul"(%R0.0x3200, %R2.0x700, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B403C0 = "arith.add"(%R2.0x700, %C1.0, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B404C0 = "arith.div"(%C1.0, %R0.0x2e80, %D77C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B405C0 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B406C0 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D77C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B407C0 = "tsbc.s_bc"(%R0.0x580, %D77C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B408C0 = "arith.sub"(%C0.0, %R1.0xe00, %D77C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B409C0 = "arith.max"(%R1.0x1500, %C-45408.0, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B410C0 = "arith.min"(%R1.0x1500, %C45408.0, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B411C0 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B412C0 = "arith.cast"(%R1.0x1180, %D77C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B413C0 = "arith.mul"(%R3.0x400, %C0.693359375, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B414C0 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B415C0 = "arith.cast"(%R3.0x400, %D77C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B416C0 = "arith.min"(%R1.0x1500, %C15, %D77C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B417C0 = "arith.max"(%R3.0x400, %C-15, %D77C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B418C0 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D77C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B419C0 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D77C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B420C0 = "arith.mul"(%R1.0x1500, %R3.0x400, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B421C0 = "arith.add"(%R3.0x400, %C1.0, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B422C0 = "arith.div"(%C1.0, %R1.0x1180, %D77C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B423C0 = "arith.mul"(%R3.0x400, %R1.0xe00, %D77C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4000, %D78C0 = "dma.tensor"(%R2.0x700, %B405C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980000000, %D79C0 = "dma.tensor"(%R0.0x2400, %B405C0) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c8000, %D80C0 = "dma.tensor"(%R3.0x400, %B423C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B424C0, %msg49 = "system.send_msg"(%D80C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D81C0, %msg49 = "dma.sys.sys_send"(%B424C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D81C1, %msg49 = "@core_1"(%D69C1, %msg48) {
CHECK:          %B369C1 = "system.wait_msg"(%D69C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D70C1 = "dma.sys.sys_wait"(%B369C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D71C1 = "dma.tensor"(%L30.0x69804b05a0, %B369C1) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D72C1 = "dma.tensor"(%G1.0x90000, %B369C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D73C1 = "dma.tensor"(%G1.0x91000, %B369C1) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B370C1 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D73C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D74C1 = "dma.tensor"(%G1.0x121000, %B369C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D75C1 = "dma.tensor"(%G1.0x132000, %B369C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D76C1 = "dma.tensor"(%G1.0x133000, %B369C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D77C1 = "dma.tensor"(%G1.0x122000, %B369C1) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B371C1 = "tsbc.s_bc"(%R0.0x580, %D77C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B372C1 = "arith.sub"(%C0.0, %R2, %D77C1) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B373C1 = "arith.max"(%R3.0xb00, %C-45408.0, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B374C1 = "arith.min"(%R3.0xb00, %C45408.0, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B375C1 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B376C1 = "arith.cast"(%R3.0x400, %D77C1) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B377C1 = "arith.mul"(%R0.0x2400, %C0.693359375, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B378C1 = "arith.sub"(%R3.0xb00, %R3.0x400, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B379C1 = "arith.cast"(%R0.0x2400, %D77C1) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B380C1 = "arith.min"(%R3.0xb00, %C15, %D77C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B381C1 = "arith.max"(%R0.0x2400, %C-15, %D77C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B382C1 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D77C1) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B383C1 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D77C1) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B384C1 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B385C1 = "arith.add"(%R0.0x2400, %C1.0, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B386C1 = "arith.div"(%C1.0, %R3.0x400, %D77C1) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B387C1 = "arith.mul"(%R0.0x2400, %R2, %D77C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B388C1 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D77C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B389C1 = "tsbc.s_bc"(%R0.0x580, %D77C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B390C1 = "arith.sub"(%C0.0, %R0.0x2b00, %D77C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B391C1 = "arith.max"(%R0.0x3200, %C-45408.0, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B392C1 = "arith.min"(%R0.0x3200, %C45408.0, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B393C1 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B394C1 = "arith.cast"(%R0.0x2e80, %D77C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B395C1 = "arith.mul"(%R2.0x700, %C0.693359375, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B396C1 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B397C1 = "arith.cast"(%R2.0x700, %D77C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B398C1 = "arith.min"(%R0.0x3200, %C15, %D77C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B399C1 = "arith.max"(%R2.0x700, %C-15, %D77C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B400C1 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D77C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B401C1 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D77C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B402C1 = "arith.mul"(%R0.0x3200, %R2.0x700, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B403C1 = "arith.add"(%R2.0x700, %C1.0, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B404C1 = "arith.div"(%C1.0, %R0.0x2e80, %D77C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B405C1 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B406C1 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D77C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B407C1 = "tsbc.s_bc"(%R0.0x580, %D77C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B408C1 = "arith.sub"(%C0.0, %R1.0xe00, %D77C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B409C1 = "arith.max"(%R1.0x1500, %C-45408.0, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B410C1 = "arith.min"(%R1.0x1500, %C45408.0, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B411C1 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B412C1 = "arith.cast"(%R1.0x1180, %D77C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B413C1 = "arith.mul"(%R3.0x400, %C0.693359375, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B414C1 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B415C1 = "arith.cast"(%R3.0x400, %D77C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B416C1 = "arith.min"(%R1.0x1500, %C15, %D77C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B417C1 = "arith.max"(%R3.0x400, %C-15, %D77C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B418C1 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D77C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B419C1 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D77C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B420C1 = "arith.mul"(%R1.0x1500, %R3.0x400, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B421C1 = "arith.add"(%R3.0x400, %C1.0, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B422C1 = "arith.div"(%C1.0, %R1.0x1180, %D77C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B423C1 = "arith.mul"(%R3.0x400, %R1.0xe00, %D77C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4190, %D78C1 = "dma.tensor"(%R2.0x700, %B405C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980000190, %D79C1 = "dma.tensor"(%R0.0x2400, %B405C1) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c8190, %D80C1 = "dma.tensor"(%R3.0x400, %B423C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B424C1, %msg49 = "system.send_msg"(%D80C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D81C1, %msg49 = "dma.sys.sys_send"(%B424C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D81C2, %msg49 = "@core_2"(%D69C2, %msg48) {
CHECK:          %B369C2 = "system.wait_msg"(%D69C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D70C2 = "dma.sys.sys_wait"(%B369C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D71C2 = "dma.tensor"(%L30.0x69804b0be0, %B369C2) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D72C2 = "dma.tensor"(%G1.0x90000, %B369C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D73C2 = "dma.tensor"(%G1.0x91000, %B369C2) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B370C2 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D73C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D74C2 = "dma.tensor"(%G1.0x121000, %B369C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D75C2 = "dma.tensor"(%G1.0x132000, %B369C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D76C2 = "dma.tensor"(%G1.0x133000, %B369C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D77C2 = "dma.tensor"(%G1.0x122000, %B369C2) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B371C2 = "tsbc.s_bc"(%R0.0x580, %D77C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B372C2 = "arith.sub"(%C0.0, %R2, %D77C2) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B373C2 = "arith.max"(%R3.0xb00, %C-45408.0, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B374C2 = "arith.min"(%R3.0xb00, %C45408.0, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B375C2 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B376C2 = "arith.cast"(%R3.0x400, %D77C2) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B377C2 = "arith.mul"(%R0.0x2400, %C0.693359375, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B378C2 = "arith.sub"(%R3.0xb00, %R3.0x400, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B379C2 = "arith.cast"(%R0.0x2400, %D77C2) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B380C2 = "arith.min"(%R3.0xb00, %C15, %D77C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B381C2 = "arith.max"(%R0.0x2400, %C-15, %D77C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B382C2 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D77C2) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B383C2 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D77C2) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B384C2 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B385C2 = "arith.add"(%R0.0x2400, %C1.0, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B386C2 = "arith.div"(%C1.0, %R3.0x400, %D77C2) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B387C2 = "arith.mul"(%R0.0x2400, %R2, %D77C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B388C2 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D77C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B389C2 = "tsbc.s_bc"(%R0.0x580, %D77C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B390C2 = "arith.sub"(%C0.0, %R0.0x2b00, %D77C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B391C2 = "arith.max"(%R0.0x3200, %C-45408.0, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B392C2 = "arith.min"(%R0.0x3200, %C45408.0, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B393C2 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B394C2 = "arith.cast"(%R0.0x2e80, %D77C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B395C2 = "arith.mul"(%R2.0x700, %C0.693359375, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B396C2 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B397C2 = "arith.cast"(%R2.0x700, %D77C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B398C2 = "arith.min"(%R0.0x3200, %C15, %D77C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B399C2 = "arith.max"(%R2.0x700, %C-15, %D77C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B400C2 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D77C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B401C2 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D77C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B402C2 = "arith.mul"(%R0.0x3200, %R2.0x700, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B403C2 = "arith.add"(%R2.0x700, %C1.0, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B404C2 = "arith.div"(%C1.0, %R0.0x2e80, %D77C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B405C2 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B406C2 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D77C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B407C2 = "tsbc.s_bc"(%R0.0x580, %D77C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B408C2 = "arith.sub"(%C0.0, %R1.0xe00, %D77C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B409C2 = "arith.max"(%R1.0x1500, %C-45408.0, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B410C2 = "arith.min"(%R1.0x1500, %C45408.0, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B411C2 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B412C2 = "arith.cast"(%R1.0x1180, %D77C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B413C2 = "arith.mul"(%R3.0x400, %C0.693359375, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B414C2 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B415C2 = "arith.cast"(%R3.0x400, %D77C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B416C2 = "arith.min"(%R1.0x1500, %C15, %D77C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B417C2 = "arith.max"(%R3.0x400, %C-15, %D77C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B418C2 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D77C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B419C2 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D77C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B420C2 = "arith.mul"(%R1.0x1500, %R3.0x400, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B421C2 = "arith.add"(%R3.0x400, %C1.0, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B422C2 = "arith.div"(%C1.0, %R1.0x1180, %D77C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B423C2 = "arith.mul"(%R3.0x400, %R1.0xe00, %D77C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4320, %D78C2 = "dma.tensor"(%R2.0x700, %B405C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980000320, %D79C2 = "dma.tensor"(%R0.0x2400, %B405C2) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c8320, %D80C2 = "dma.tensor"(%R3.0x400, %B423C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B424C2, %msg49 = "system.send_msg"(%D80C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D81C2, %msg49 = "dma.sys.sys_send"(%B424C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D81C3, %msg49 = "@core_3"(%D69C3, %msg48) {
CHECK:          %B369C3 = "system.wait_msg"(%D69C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D70C3 = "dma.sys.sys_wait"(%B369C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D71C3 = "dma.tensor"(%L30.0x69804b1220, %B369C3) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D72C3 = "dma.tensor"(%G1.0x90000, %B369C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D73C3 = "dma.tensor"(%G1.0x91000, %B369C3) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B370C3 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D73C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D74C3 = "dma.tensor"(%G1.0x121000, %B369C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D75C3 = "dma.tensor"(%G1.0x132000, %B369C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D76C3 = "dma.tensor"(%G1.0x133000, %B369C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D77C3 = "dma.tensor"(%G1.0x122000, %B369C3) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B371C3 = "tsbc.s_bc"(%R0.0x580, %D77C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B372C3 = "arith.sub"(%C0.0, %R2, %D77C3) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B373C3 = "arith.max"(%R3.0xb00, %C-45408.0, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B374C3 = "arith.min"(%R3.0xb00, %C45408.0, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B375C3 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B376C3 = "arith.cast"(%R3.0x400, %D77C3) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B377C3 = "arith.mul"(%R0.0x2400, %C0.693359375, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B378C3 = "arith.sub"(%R3.0xb00, %R3.0x400, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B379C3 = "arith.cast"(%R0.0x2400, %D77C3) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B380C3 = "arith.min"(%R3.0xb00, %C15, %D77C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B381C3 = "arith.max"(%R0.0x2400, %C-15, %D77C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B382C3 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D77C3) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B383C3 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D77C3) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B384C3 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B385C3 = "arith.add"(%R0.0x2400, %C1.0, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B386C3 = "arith.div"(%C1.0, %R3.0x400, %D77C3) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B387C3 = "arith.mul"(%R0.0x2400, %R2, %D77C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B388C3 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D77C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B389C3 = "tsbc.s_bc"(%R0.0x580, %D77C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B390C3 = "arith.sub"(%C0.0, %R0.0x2b00, %D77C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B391C3 = "arith.max"(%R0.0x3200, %C-45408.0, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B392C3 = "arith.min"(%R0.0x3200, %C45408.0, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B393C3 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B394C3 = "arith.cast"(%R0.0x2e80, %D77C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B395C3 = "arith.mul"(%R2.0x700, %C0.693359375, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B396C3 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B397C3 = "arith.cast"(%R2.0x700, %D77C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B398C3 = "arith.min"(%R0.0x3200, %C15, %D77C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B399C3 = "arith.max"(%R2.0x700, %C-15, %D77C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B400C3 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D77C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B401C3 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D77C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B402C3 = "arith.mul"(%R0.0x3200, %R2.0x700, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B403C3 = "arith.add"(%R2.0x700, %C1.0, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B404C3 = "arith.div"(%C1.0, %R0.0x2e80, %D77C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B405C3 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B406C3 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D77C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B407C3 = "tsbc.s_bc"(%R0.0x580, %D77C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B408C3 = "arith.sub"(%C0.0, %R1.0xe00, %D77C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B409C3 = "arith.max"(%R1.0x1500, %C-45408.0, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B410C3 = "arith.min"(%R1.0x1500, %C45408.0, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B411C3 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B412C3 = "arith.cast"(%R1.0x1180, %D77C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B413C3 = "arith.mul"(%R3.0x400, %C0.693359375, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B414C3 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B415C3 = "arith.cast"(%R3.0x400, %D77C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B416C3 = "arith.min"(%R1.0x1500, %C15, %D77C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B417C3 = "arith.max"(%R3.0x400, %C-15, %D77C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B418C3 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D77C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B419C3 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D77C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B420C3 = "arith.mul"(%R1.0x1500, %R3.0x400, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B421C3 = "arith.add"(%R3.0x400, %C1.0, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B422C3 = "arith.div"(%C1.0, %R1.0x1180, %D77C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B423C3 = "arith.mul"(%R3.0x400, %R1.0xe00, %D77C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f44b0, %D78C3 = "dma.tensor"(%R2.0x700, %B405C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800004b0, %D79C3 = "dma.tensor"(%R0.0x2400, %B405C3) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c84b0, %D80C3 = "dma.tensor"(%R3.0x400, %B423C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B424C3, %msg49 = "system.send_msg"(%D80C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D81C3, %msg49 = "dma.sys.sys_send"(%B424C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D81C4, %msg49 = "@core_4"(%D69C4, %msg48) {
CHECK:          %B369C4 = "system.wait_msg"(%D69C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D70C4 = "dma.sys.sys_wait"(%B369C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D71C4 = "dma.tensor"(%L30.0x69804b1860, %B369C4) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D72C4 = "dma.tensor"(%G1.0x90000, %B369C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D73C4 = "dma.tensor"(%G1.0x91000, %B369C4) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B370C4 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D73C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D74C4 = "dma.tensor"(%G1.0x121000, %B369C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D75C4 = "dma.tensor"(%G1.0x132000, %B369C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D76C4 = "dma.tensor"(%G1.0x133000, %B369C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D77C4 = "dma.tensor"(%G1.0x122000, %B369C4) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B371C4 = "tsbc.s_bc"(%R0.0x580, %D77C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B372C4 = "arith.sub"(%C0.0, %R2, %D77C4) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B373C4 = "arith.max"(%R3.0xb00, %C-45408.0, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B374C4 = "arith.min"(%R3.0xb00, %C45408.0, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B375C4 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B376C4 = "arith.cast"(%R3.0x400, %D77C4) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B377C4 = "arith.mul"(%R0.0x2400, %C0.693359375, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B378C4 = "arith.sub"(%R3.0xb00, %R3.0x400, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B379C4 = "arith.cast"(%R0.0x2400, %D77C4) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B380C4 = "arith.min"(%R3.0xb00, %C15, %D77C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B381C4 = "arith.max"(%R0.0x2400, %C-15, %D77C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B382C4 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D77C4) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B383C4 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D77C4) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B384C4 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B385C4 = "arith.add"(%R0.0x2400, %C1.0, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B386C4 = "arith.div"(%C1.0, %R3.0x400, %D77C4) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B387C4 = "arith.mul"(%R0.0x2400, %R2, %D77C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B388C4 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D77C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B389C4 = "tsbc.s_bc"(%R0.0x580, %D77C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B390C4 = "arith.sub"(%C0.0, %R0.0x2b00, %D77C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B391C4 = "arith.max"(%R0.0x3200, %C-45408.0, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B392C4 = "arith.min"(%R0.0x3200, %C45408.0, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B393C4 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B394C4 = "arith.cast"(%R0.0x2e80, %D77C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B395C4 = "arith.mul"(%R2.0x700, %C0.693359375, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B396C4 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B397C4 = "arith.cast"(%R2.0x700, %D77C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B398C4 = "arith.min"(%R0.0x3200, %C15, %D77C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B399C4 = "arith.max"(%R2.0x700, %C-15, %D77C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B400C4 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D77C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B401C4 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D77C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B402C4 = "arith.mul"(%R0.0x3200, %R2.0x700, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B403C4 = "arith.add"(%R2.0x700, %C1.0, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B404C4 = "arith.div"(%C1.0, %R0.0x2e80, %D77C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B405C4 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B406C4 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D77C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B407C4 = "tsbc.s_bc"(%R0.0x580, %D77C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B408C4 = "arith.sub"(%C0.0, %R1.0xe00, %D77C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B409C4 = "arith.max"(%R1.0x1500, %C-45408.0, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B410C4 = "arith.min"(%R1.0x1500, %C45408.0, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B411C4 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B412C4 = "arith.cast"(%R1.0x1180, %D77C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B413C4 = "arith.mul"(%R3.0x400, %C0.693359375, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B414C4 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B415C4 = "arith.cast"(%R3.0x400, %D77C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B416C4 = "arith.min"(%R1.0x1500, %C15, %D77C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B417C4 = "arith.max"(%R3.0x400, %C-15, %D77C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B418C4 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D77C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B419C4 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D77C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B420C4 = "arith.mul"(%R1.0x1500, %R3.0x400, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B421C4 = "arith.add"(%R3.0x400, %C1.0, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B422C4 = "arith.div"(%C1.0, %R1.0x1180, %D77C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B423C4 = "arith.mul"(%R3.0x400, %R1.0xe00, %D77C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4640, %D78C4 = "dma.tensor"(%R2.0x700, %B405C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980000640, %D79C4 = "dma.tensor"(%R0.0x2400, %B405C4) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c8640, %D80C4 = "dma.tensor"(%R3.0x400, %B423C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B424C4, %msg49 = "system.send_msg"(%D80C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D81C4, %msg49 = "dma.sys.sys_send"(%B424C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D81C5, %msg49 = "@core_5"(%D69C5, %msg48) {
CHECK:          %B369C5 = "system.wait_msg"(%D69C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D70C5 = "dma.sys.sys_wait"(%B369C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D71C5 = "dma.tensor"(%L30.0x69804b1ea0, %B369C5) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D72C5 = "dma.tensor"(%G1.0x90000, %B369C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D73C5 = "dma.tensor"(%G1.0x91000, %B369C5) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B370C5 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D73C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D74C5 = "dma.tensor"(%G1.0x121000, %B369C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D75C5 = "dma.tensor"(%G1.0x132000, %B369C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D76C5 = "dma.tensor"(%G1.0x133000, %B369C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D77C5 = "dma.tensor"(%G1.0x122000, %B369C5) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B371C5 = "tsbc.s_bc"(%R0.0x580, %D77C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B372C5 = "arith.sub"(%C0.0, %R2, %D77C5) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B373C5 = "arith.max"(%R3.0xb00, %C-45408.0, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B374C5 = "arith.min"(%R3.0xb00, %C45408.0, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B375C5 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B376C5 = "arith.cast"(%R3.0x400, %D77C5) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B377C5 = "arith.mul"(%R0.0x2400, %C0.693359375, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B378C5 = "arith.sub"(%R3.0xb00, %R3.0x400, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B379C5 = "arith.cast"(%R0.0x2400, %D77C5) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B380C5 = "arith.min"(%R3.0xb00, %C15, %D77C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B381C5 = "arith.max"(%R0.0x2400, %C-15, %D77C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B382C5 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D77C5) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B383C5 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D77C5) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B384C5 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B385C5 = "arith.add"(%R0.0x2400, %C1.0, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B386C5 = "arith.div"(%C1.0, %R3.0x400, %D77C5) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B387C5 = "arith.mul"(%R0.0x2400, %R2, %D77C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B388C5 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D77C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B389C5 = "tsbc.s_bc"(%R0.0x580, %D77C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B390C5 = "arith.sub"(%C0.0, %R0.0x2b00, %D77C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B391C5 = "arith.max"(%R0.0x3200, %C-45408.0, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B392C5 = "arith.min"(%R0.0x3200, %C45408.0, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B393C5 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B394C5 = "arith.cast"(%R0.0x2e80, %D77C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B395C5 = "arith.mul"(%R2.0x700, %C0.693359375, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B396C5 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B397C5 = "arith.cast"(%R2.0x700, %D77C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B398C5 = "arith.min"(%R0.0x3200, %C15, %D77C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B399C5 = "arith.max"(%R2.0x700, %C-15, %D77C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B400C5 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D77C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B401C5 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D77C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B402C5 = "arith.mul"(%R0.0x3200, %R2.0x700, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B403C5 = "arith.add"(%R2.0x700, %C1.0, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B404C5 = "arith.div"(%C1.0, %R0.0x2e80, %D77C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B405C5 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B406C5 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D77C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B407C5 = "tsbc.s_bc"(%R0.0x580, %D77C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B408C5 = "arith.sub"(%C0.0, %R1.0xe00, %D77C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B409C5 = "arith.max"(%R1.0x1500, %C-45408.0, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B410C5 = "arith.min"(%R1.0x1500, %C45408.0, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B411C5 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B412C5 = "arith.cast"(%R1.0x1180, %D77C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B413C5 = "arith.mul"(%R3.0x400, %C0.693359375, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B414C5 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B415C5 = "arith.cast"(%R3.0x400, %D77C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B416C5 = "arith.min"(%R1.0x1500, %C15, %D77C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B417C5 = "arith.max"(%R3.0x400, %C-15, %D77C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B418C5 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D77C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B419C5 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D77C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B420C5 = "arith.mul"(%R1.0x1500, %R3.0x400, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B421C5 = "arith.add"(%R3.0x400, %C1.0, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B422C5 = "arith.div"(%C1.0, %R1.0x1180, %D77C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B423C5 = "arith.mul"(%R3.0x400, %R1.0xe00, %D77C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f47d0, %D78C5 = "dma.tensor"(%R2.0x700, %B405C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800007d0, %D79C5 = "dma.tensor"(%R0.0x2400, %B405C5) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c87d0, %D80C5 = "dma.tensor"(%R3.0x400, %B423C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B424C5, %msg49 = "system.send_msg"(%D80C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D81C5, %msg49 = "dma.sys.sys_send"(%B424C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D77C6, %msg49 = "@core_6"(%D65C6, %msg48) {
CHECK:          %B296C6 = "system.wait_msg"(%D65C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D66C6 = "dma.sys.sys_wait"(%B296C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D67C6 = "dma.tensor"(%L30.0x69804b24e0, %B296C6) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D68C6 = "dma.tensor"(%G1.0x90000, %B296C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D69C6 = "dma.tensor"(%G1.0x91000, %B296C6) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B297C6 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D69C6) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D70C6 = "dma.tensor"(%G1.0x121000, %B296C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D71C6 = "dma.tensor"(%G1.0x132000, %B296C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D72C6 = "dma.tensor"(%G1.0x133000, %B296C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D73C6 = "dma.tensor"(%G1.0x122000, %B296C6) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B298C6 = "tsbc.s_bc"(%R0.0x580, %D73C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B299C6 = "arith.sub"(%C0.0, %R2, %D73C6) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B300C6 = "arith.max"(%R3.0xb00, %C-45408.0, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B301C6 = "arith.min"(%R3.0xb00, %C45408.0, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B302C6 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B303C6 = "arith.cast"(%R3.0x400, %D73C6) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B304C6 = "arith.mul"(%R0.0x2400, %C0.693359375, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B305C6 = "arith.sub"(%R3.0xb00, %R3.0x400, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B306C6 = "arith.cast"(%R0.0x2400, %D73C6) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B307C6 = "arith.min"(%R3.0xb00, %C15, %D73C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B308C6 = "arith.max"(%R0.0x2400, %C-15, %D73C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B309C6 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D73C6) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B310C6 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D73C6) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B311C6 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B312C6 = "arith.add"(%R0.0x2400, %C1.0, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B313C6 = "arith.div"(%C1.0, %R3.0x400, %D73C6) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B314C6 = "arith.mul"(%R0.0x2400, %R2, %D73C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B315C6 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D73C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B316C6 = "tsbc.s_bc"(%R0.0x580, %D73C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B317C6 = "arith.sub"(%C0.0, %R0.0x2b00, %D73C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B318C6 = "arith.max"(%R0.0x3200, %C-45408.0, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B319C6 = "arith.min"(%R0.0x3200, %C45408.0, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B320C6 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B321C6 = "arith.cast"(%R0.0x2e80, %D73C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B322C6 = "arith.mul"(%R2.0x700, %C0.693359375, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B323C6 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B324C6 = "arith.cast"(%R2.0x700, %D73C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B325C6 = "arith.min"(%R0.0x3200, %C15, %D73C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B326C6 = "arith.max"(%R2.0x700, %C-15, %D73C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B327C6 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D73C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B328C6 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D73C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B329C6 = "arith.mul"(%R0.0x3200, %R2.0x700, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B330C6 = "arith.add"(%R2.0x700, %C1.0, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B331C6 = "arith.div"(%C1.0, %R0.0x2e80, %D73C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B332C6 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B333C6 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D73C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B334C6 = "tsbc.s_bc"(%R0.0x580, %D73C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B335C6 = "arith.sub"(%C0.0, %R1.0xe00, %D73C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B336C6 = "arith.max"(%R1.0x1500, %C-45408.0, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B337C6 = "arith.min"(%R1.0x1500, %C45408.0, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B338C6 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B339C6 = "arith.cast"(%R1.0x1180, %D73C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B340C6 = "arith.mul"(%R3.0x400, %C0.693359375, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B341C6 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B342C6 = "arith.cast"(%R3.0x400, %D73C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B343C6 = "arith.min"(%R1.0x1500, %C15, %D73C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B344C6 = "arith.max"(%R3.0x400, %C-15, %D73C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B345C6 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D73C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B346C6 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D73C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B347C6 = "arith.mul"(%R1.0x1500, %R3.0x400, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B348C6 = "arith.add"(%R3.0x400, %C1.0, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B349C6 = "arith.div"(%C1.0, %R1.0x1180, %D73C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B350C6 = "arith.mul"(%R3.0x400, %R1.0xe00, %D73C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4960, %D74C6 = "dma.tensor"(%R2.0x700, %B332C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980000960, %D75C6 = "dma.tensor"(%R0.0x2400, %B332C6) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c8960, %D76C6 = "dma.tensor"(%R3.0x400, %B350C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B351C6, %msg49 = "system.send_msg"(%D76C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D77C6, %msg49 = "dma.sys.sys_send"(%B351C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D65C7, %msg49 = "@core_7"(%D53C7, %msg48) {
CHECK:          %B223C7 = "system.wait_msg"(%D53C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D54C7 = "dma.sys.sys_wait"(%B223C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D55C7 = "dma.tensor"(%L30.0x69804b2b20, %B223C7) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R4, %D56C7 = "dma.tensor"(%G1.0x90000, %B223C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R0, %D57C7 = "dma.tensor"(%G1.0x91000, %B223C7) : (memref<1x256x1x1152xi16, strides: [294912, 1152, 1152, 1]>, none) -> (memref<1x256x1x1152xi16, strides: [4608, 1152, 1152, 1]>, none)
CHECK:          %R2, %B224C7 = "conv.normal"(%R1, %R0, %R4, %C0.0, %D57C7) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<256x128x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D58C7 = "dma.tensor"(%G1.0x121000, %B223C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5.0x40, %D59C7 = "dma.tensor"(%G1.0x132000, %B223C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3.0x1240, %D60C7 = "dma.tensor"(%G1.0x133000, %B223C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %D61C7 = "dma.tensor"(%G1.0x122000, %B223C7) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3.0x1200, %B225C7 = "tsbc.s_bc"(%R0.0x580, %D61C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0xb00, %B226C7 = "arith.sub"(%C0.0, %R2, %D61C7) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B227C7 = "arith.max"(%R3.0xb00, %C-45408.0, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B228C7 = "arith.min"(%R3.0xb00, %C45408.0, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B229C7 = "arith.mul"(%R3.0xb00, %C1.4423828125, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B230C7 = "arith.cast"(%R3.0x400, %D61C7) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B231C7 = "arith.mul"(%R0.0x2400, %C0.693359375, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B232C7 = "arith.sub"(%R3.0xb00, %R3.0x400, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B233C7 = "arith.cast"(%R0.0x2400, %D61C7) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B234C7 = "arith.min"(%R3.0xb00, %C15, %D61C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3.0xb00, %B235C7 = "arith.max"(%R0.0x2400, %C-15, %D61C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x2400, %B236C7 = "arith.add_satu"(%R3.0xb00, %C15, %C10, %D61C7) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0xb00, %B237C7 = "sfu.taylor_4x"(%R3.0x400, %R3.0x1200, %D61C7) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B238C7 = "arith.mul"(%R3.0xb00, %R0.0x2400, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B239C7 = "arith.add"(%R0.0x2400, %C1.0, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B240C7 = "arith.div"(%C1.0, %R3.0x400, %D61C7) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2400, %B241C7 = "arith.mul"(%R0.0x2400, %R2, %D61C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2b00, %B242C7 = "conv.normal"(%R0.0x2400, %R3, %R5, %C0.0, %D61C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3580, %B243C7 = "tsbc.s_bc"(%R0.0x580, %D61C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x3200, %B244C7 = "arith.sub"(%C0.0, %R0.0x2b00, %D61C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B245C7 = "arith.max"(%R0.0x3200, %C-45408.0, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B246C7 = "arith.min"(%R0.0x3200, %C45408.0, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B247C7 = "arith.mul"(%R0.0x3200, %C1.4423828125, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B248C7 = "arith.cast"(%R0.0x2e80, %D61C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B249C7 = "arith.mul"(%R2.0x700, %C0.693359375, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B250C7 = "arith.sub"(%R0.0x3200, %R0.0x2e80, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B251C7 = "arith.cast"(%R2.0x700, %D61C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B252C7 = "arith.min"(%R0.0x3200, %C15, %D61C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x3200, %B253C7 = "arith.max"(%R2.0x700, %C-15, %D61C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x700, %B254C7 = "arith.add_satu"(%R0.0x3200, %C15, %C10, %D61C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x3200, %B255C7 = "sfu.taylor_4x"(%R0.0x2e80, %R0.0x3580, %D61C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B256C7 = "arith.mul"(%R0.0x3200, %R2.0x700, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2e80, %B257C7 = "arith.add"(%R2.0x700, %C1.0, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B258C7 = "arith.div"(%C1.0, %R0.0x2e80, %D61C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B259C7 = "arith.mul"(%R2.0x700, %R0.0x2b00, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B260C7 = "conv.normal"(%R2.0x700, %R3.0x1240, %R5.0x40, %C0.0, %D61C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1880, %B261C7 = "tsbc.s_bc"(%R0.0x580, %D61C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1500, %B262C7 = "arith.sub"(%C0.0, %R1.0xe00, %D61C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B263C7 = "arith.max"(%R1.0x1500, %C-45408.0, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B264C7 = "arith.min"(%R1.0x1500, %C45408.0, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B265C7 = "arith.mul"(%R1.0x1500, %C1.4423828125, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B266C7 = "arith.cast"(%R1.0x1180, %D61C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B267C7 = "arith.mul"(%R3.0x400, %C0.693359375, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B268C7 = "arith.sub"(%R1.0x1500, %R1.0x1180, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B269C7 = "arith.cast"(%R3.0x400, %D61C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B270C7 = "arith.min"(%R1.0x1500, %C15, %D61C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x1500, %B271C7 = "arith.max"(%R3.0x400, %C-15, %D61C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x400, %B272C7 = "arith.add_satu"(%R1.0x1500, %C15, %C10, %D61C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1500, %B273C7 = "sfu.taylor_4x"(%R1.0x1180, %R1.0x1880, %D61C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B274C7 = "arith.mul"(%R1.0x1500, %R3.0x400, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x1180, %B275C7 = "arith.add"(%R3.0x400, %C1.0, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B276C7 = "arith.div"(%C1.0, %R1.0x1180, %D61C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x400, %B277C7 = "arith.mul"(%R3.0x400, %R1.0xe00, %D61C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4af0, %D62C7 = "dma.tensor"(%R2.0x700, %B259C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980000af0, %D63C7 = "dma.tensor"(%R0.0x2400, %B259C7) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69800c8af0, %D64C7 = "dma.tensor"(%R3.0x400, %B277C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B278C7, %msg49 = "system.send_msg"(%D64C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D65C7, %msg49 = "dma.sys.sys_send"(%B278C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C0, %msg48 = "@core_0"(%D81C0, %msg49) {
CHECK:          %B425C0 = "system.wait_msg"(%D81C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D82C0 = "dma.sys.sys_wait"(%B425C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B426C0, %msg48 = "system.send_msg"(%D82C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C0, %msg48 = "dma.sys.sys_send"(%B426C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C1, %msg48 = "@core_1"(%D81C1, %msg49) {
CHECK:          %B425C1 = "system.wait_msg"(%D81C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D82C1 = "dma.sys.sys_wait"(%B425C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B426C1, %msg48 = "system.send_msg"(%D82C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C1, %msg48 = "dma.sys.sys_send"(%B426C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C2, %msg48 = "@core_2"(%D81C2, %msg49) {
CHECK:          %B425C2 = "system.wait_msg"(%D81C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D82C2 = "dma.sys.sys_wait"(%B425C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B426C2, %msg48 = "system.send_msg"(%D82C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C2, %msg48 = "dma.sys.sys_send"(%B426C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C3, %msg48 = "@core_3"(%D81C3, %msg49) {
CHECK:          %B425C3 = "system.wait_msg"(%D81C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D82C3 = "dma.sys.sys_wait"(%B425C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B426C3, %msg48 = "system.send_msg"(%D82C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C3, %msg48 = "dma.sys.sys_send"(%B426C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C4, %msg48 = "@core_4"(%D81C4, %msg49) {
CHECK:          %B425C4 = "system.wait_msg"(%D81C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D82C4 = "dma.sys.sys_wait"(%B425C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B426C4, %msg48 = "system.send_msg"(%D82C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C4, %msg48 = "dma.sys.sys_send"(%B426C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C5, %msg48 = "@core_5"(%D81C5, %msg49) {
CHECK:          %B425C5 = "system.wait_msg"(%D81C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D82C5 = "dma.sys.sys_wait"(%B425C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B426C5, %msg48 = "system.send_msg"(%D82C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C5, %msg48 = "dma.sys.sys_send"(%B426C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D79C6, %msg48 = "@core_6"(%D77C6, %msg49) {
CHECK:          %B352C6 = "system.wait_msg"(%D77C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D78C6 = "dma.sys.sys_wait"(%B352C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B353C6, %msg48 = "system.send_msg"(%D78C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D79C6, %msg48 = "dma.sys.sys_send"(%B353C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D67C7, %msg48 = "@core_7"(%D65C7, %msg49) {
CHECK:          %B279C7 = "system.wait_msg"(%D65C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D66C7 = "dma.sys.sys_wait"(%B279C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B280C7, %msg48 = "system.send_msg"(%D66C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D67C7, %msg48 = "dma.sys.sys_send"(%B280C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D89C0, %msg49 = "@core_0"(%D83C0, %msg48) {
CHECK:          %B427C0 = "system.wait_msg"(%D83C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C0 = "dma.sys.sys_wait"(%B427C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D85C0 = "dma.tensor"(%L30.0x69800c8000, %B427C0) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0, %D86C0 = "dma.tensor"(%G1.0x13c000, %B427C0) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D87C0 = "dma.tensor"(%G1.0x13b000, %B427C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B428C0 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D87C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B429C0 = "tsbc.s_bc"(%R0.0x580, %D87C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B430C0 = "arith.sub"(%C0.0, %R2, %D87C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B431C0 = "arith.max"(%R4.0x380, %C-45408.0, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B432C0 = "arith.min"(%R4.0x380, %C45408.0, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B433C0 = "arith.mul"(%R4.0x380, %C1.4423828125, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B434C0 = "arith.cast"(%R4, %D87C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B435C0 = "arith.mul"(%R3, %C0.693359375, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B436C0 = "arith.sub"(%R4.0x380, %R4, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B437C0 = "arith.cast"(%R3, %D87C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B438C0 = "arith.min"(%R4.0x380, %C15, %D87C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B439C0 = "arith.max"(%R3, %C-15, %D87C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B440C0 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D87C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B441C0 = "sfu.taylor_4x"(%R4, %R4.0x700, %D87C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B442C0 = "arith.mul"(%R4.0x380, %R3, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B443C0 = "arith.add"(%R3, %C1.0, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B444C0 = "arith.div"(%C1.0, %R4, %D87C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B445C0 = "arith.mul"(%R3, %R2, %D87C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190000, %D88C0 = "dma.tensor"(%R3, %B445C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B446C0, %msg49 = "system.send_msg"(%D88C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D89C0, %msg49 = "dma.sys.sys_send"(%B446C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D89C1, %msg49 = "@core_1"(%D83C1, %msg48) {
CHECK:          %B427C1 = "system.wait_msg"(%D83C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C1 = "dma.sys.sys_wait"(%B427C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D85C1 = "dma.tensor"(%L30.0x69800c8140, %B427C1) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R0, %D86C1 = "dma.tensor"(%G1.0x13c000, %B427C1) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D87C1 = "dma.tensor"(%G1.0x13b000, %B427C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B428C1 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D87C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B429C1 = "tsbc.s_bc"(%R0.0x580, %D87C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B430C1 = "arith.sub"(%C0.0, %R2, %D87C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B431C1 = "arith.max"(%R4.0x380, %C-45408.0, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B432C1 = "arith.min"(%R4.0x380, %C45408.0, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B433C1 = "arith.mul"(%R4.0x380, %C1.4423828125, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B434C1 = "arith.cast"(%R4, %D87C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B435C1 = "arith.mul"(%R3, %C0.693359375, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B436C1 = "arith.sub"(%R4.0x380, %R4, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B437C1 = "arith.cast"(%R3, %D87C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B438C1 = "arith.min"(%R4.0x380, %C15, %D87C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B439C1 = "arith.max"(%R3, %C-15, %D87C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B440C1 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D87C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B441C1 = "sfu.taylor_4x"(%R4, %R4.0x700, %D87C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B442C1 = "arith.mul"(%R4.0x380, %R3, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B443C1 = "arith.add"(%R3, %C1.0, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B444C1 = "arith.div"(%C1.0, %R4, %D87C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B445C1 = "arith.mul"(%R3, %R2, %D87C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190190, %D88C1 = "dma.tensor"(%R3, %B445C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B446C1, %msg49 = "system.send_msg"(%D88C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D89C1, %msg49 = "dma.sys.sys_send"(%B446C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D89C2, %msg49 = "@core_2"(%D83C2, %msg48) {
CHECK:          %B427C2 = "system.wait_msg"(%D83C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C2 = "dma.sys.sys_wait"(%B427C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D85C2 = "dma.tensor"(%L30.0x69800c82d0, %B427C2) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R0, %D86C2 = "dma.tensor"(%G1.0x13c000, %B427C2) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D87C2 = "dma.tensor"(%G1.0x13b000, %B427C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B428C2 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D87C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B429C2 = "tsbc.s_bc"(%R0.0x580, %D87C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B430C2 = "arith.sub"(%C0.0, %R2, %D87C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B431C2 = "arith.max"(%R4.0x380, %C-45408.0, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B432C2 = "arith.min"(%R4.0x380, %C45408.0, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B433C2 = "arith.mul"(%R4.0x380, %C1.4423828125, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B434C2 = "arith.cast"(%R4, %D87C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B435C2 = "arith.mul"(%R3, %C0.693359375, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B436C2 = "arith.sub"(%R4.0x380, %R4, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B437C2 = "arith.cast"(%R3, %D87C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B438C2 = "arith.min"(%R4.0x380, %C15, %D87C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B439C2 = "arith.max"(%R3, %C-15, %D87C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B440C2 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D87C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B441C2 = "sfu.taylor_4x"(%R4, %R4.0x700, %D87C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B442C2 = "arith.mul"(%R4.0x380, %R3, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B443C2 = "arith.add"(%R3, %C1.0, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B444C2 = "arith.div"(%C1.0, %R4, %D87C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B445C2 = "arith.mul"(%R3, %R2, %D87C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190320, %D88C2 = "dma.tensor"(%R3, %B445C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B446C2, %msg49 = "system.send_msg"(%D88C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D89C2, %msg49 = "dma.sys.sys_send"(%B446C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D89C3, %msg49 = "@core_3"(%D83C3, %msg48) {
CHECK:          %B427C3 = "system.wait_msg"(%D83C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C3 = "dma.sys.sys_wait"(%B427C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D85C3 = "dma.tensor"(%L30.0x69800c8460, %B427C3) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R0, %D86C3 = "dma.tensor"(%G1.0x13c000, %B427C3) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D87C3 = "dma.tensor"(%G1.0x13b000, %B427C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B428C3 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D87C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B429C3 = "tsbc.s_bc"(%R0.0x580, %D87C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B430C3 = "arith.sub"(%C0.0, %R2, %D87C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B431C3 = "arith.max"(%R4.0x380, %C-45408.0, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B432C3 = "arith.min"(%R4.0x380, %C45408.0, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B433C3 = "arith.mul"(%R4.0x380, %C1.4423828125, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B434C3 = "arith.cast"(%R4, %D87C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B435C3 = "arith.mul"(%R3, %C0.693359375, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B436C3 = "arith.sub"(%R4.0x380, %R4, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B437C3 = "arith.cast"(%R3, %D87C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B438C3 = "arith.min"(%R4.0x380, %C15, %D87C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B439C3 = "arith.max"(%R3, %C-15, %D87C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B440C3 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D87C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B441C3 = "sfu.taylor_4x"(%R4, %R4.0x700, %D87C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B442C3 = "arith.mul"(%R4.0x380, %R3, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B443C3 = "arith.add"(%R3, %C1.0, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B444C3 = "arith.div"(%C1.0, %R4, %D87C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B445C3 = "arith.mul"(%R3, %R2, %D87C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801904b0, %D88C3 = "dma.tensor"(%R3, %B445C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B446C3, %msg49 = "system.send_msg"(%D88C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D89C3, %msg49 = "dma.sys.sys_send"(%B446C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D89C4, %msg49 = "@core_4"(%D83C4, %msg48) {
CHECK:          %B427C4 = "system.wait_msg"(%D83C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C4 = "dma.sys.sys_wait"(%B427C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D85C4 = "dma.tensor"(%L30.0x69800c85f0, %B427C4) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R0, %D86C4 = "dma.tensor"(%G1.0x13c000, %B427C4) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D87C4 = "dma.tensor"(%G1.0x13b000, %B427C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B428C4 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D87C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B429C4 = "tsbc.s_bc"(%R0.0x580, %D87C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B430C4 = "arith.sub"(%C0.0, %R2, %D87C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B431C4 = "arith.max"(%R4.0x380, %C-45408.0, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B432C4 = "arith.min"(%R4.0x380, %C45408.0, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B433C4 = "arith.mul"(%R4.0x380, %C1.4423828125, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B434C4 = "arith.cast"(%R4, %D87C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B435C4 = "arith.mul"(%R3, %C0.693359375, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B436C4 = "arith.sub"(%R4.0x380, %R4, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B437C4 = "arith.cast"(%R3, %D87C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B438C4 = "arith.min"(%R4.0x380, %C15, %D87C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B439C4 = "arith.max"(%R3, %C-15, %D87C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B440C4 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D87C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B441C4 = "sfu.taylor_4x"(%R4, %R4.0x700, %D87C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B442C4 = "arith.mul"(%R4.0x380, %R3, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B443C4 = "arith.add"(%R3, %C1.0, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B444C4 = "arith.div"(%C1.0, %R4, %D87C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B445C4 = "arith.mul"(%R3, %R2, %D87C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190640, %D88C4 = "dma.tensor"(%R3, %B445C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B446C4, %msg49 = "system.send_msg"(%D88C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D89C4, %msg49 = "dma.sys.sys_send"(%B446C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D89C5, %msg49 = "@core_5"(%D83C5, %msg48) {
CHECK:          %B427C5 = "system.wait_msg"(%D83C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C5 = "dma.sys.sys_wait"(%B427C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D85C5 = "dma.tensor"(%L30.0x69800c8780, %B427C5) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R0, %D86C5 = "dma.tensor"(%G1.0x13c000, %B427C5) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D87C5 = "dma.tensor"(%G1.0x13b000, %B427C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B428C5 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D87C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B429C5 = "tsbc.s_bc"(%R0.0x580, %D87C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B430C5 = "arith.sub"(%C0.0, %R2, %D87C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B431C5 = "arith.max"(%R4.0x380, %C-45408.0, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B432C5 = "arith.min"(%R4.0x380, %C45408.0, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B433C5 = "arith.mul"(%R4.0x380, %C1.4423828125, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B434C5 = "arith.cast"(%R4, %D87C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B435C5 = "arith.mul"(%R3, %C0.693359375, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B436C5 = "arith.sub"(%R4.0x380, %R4, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B437C5 = "arith.cast"(%R3, %D87C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B438C5 = "arith.min"(%R4.0x380, %C15, %D87C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B439C5 = "arith.max"(%R3, %C-15, %D87C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B440C5 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D87C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B441C5 = "sfu.taylor_4x"(%R4, %R4.0x700, %D87C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B442C5 = "arith.mul"(%R4.0x380, %R3, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B443C5 = "arith.add"(%R3, %C1.0, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B444C5 = "arith.div"(%C1.0, %R4, %D87C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B445C5 = "arith.mul"(%R3, %R2, %D87C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801907d0, %D88C5 = "dma.tensor"(%R3, %B445C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B446C5, %msg49 = "system.send_msg"(%D88C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D89C5, %msg49 = "dma.sys.sys_send"(%B446C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D85C6, %msg49 = "@core_6"(%D79C6, %msg48) {
CHECK:          %B354C6 = "system.wait_msg"(%D79C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D80C6 = "dma.sys.sys_wait"(%B354C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D81C6 = "dma.tensor"(%L30.0x69800c8910, %B354C6) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R0, %D82C6 = "dma.tensor"(%G1.0x13c000, %B354C6) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D83C6 = "dma.tensor"(%G1.0x13b000, %B354C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B355C6 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D83C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B356C6 = "tsbc.s_bc"(%R0.0x580, %D83C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B357C6 = "arith.sub"(%C0.0, %R2, %D83C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B358C6 = "arith.max"(%R4.0x380, %C-45408.0, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B359C6 = "arith.min"(%R4.0x380, %C45408.0, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B360C6 = "arith.mul"(%R4.0x380, %C1.4423828125, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B361C6 = "arith.cast"(%R4, %D83C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B362C6 = "arith.mul"(%R3, %C0.693359375, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B363C6 = "arith.sub"(%R4.0x380, %R4, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B364C6 = "arith.cast"(%R3, %D83C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B365C6 = "arith.min"(%R4.0x380, %C15, %D83C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B366C6 = "arith.max"(%R3, %C-15, %D83C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B367C6 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D83C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B368C6 = "sfu.taylor_4x"(%R4, %R4.0x700, %D83C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B369C6 = "arith.mul"(%R4.0x380, %R3, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B370C6 = "arith.add"(%R3, %C1.0, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B371C6 = "arith.div"(%C1.0, %R4, %D83C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B372C6 = "arith.mul"(%R3, %R2, %D83C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190960, %D84C6 = "dma.tensor"(%R3, %B372C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B373C6, %msg49 = "system.send_msg"(%D84C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D85C6, %msg49 = "dma.sys.sys_send"(%B373C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D73C7, %msg49 = "@core_7"(%D67C7, %msg48) {
CHECK:          %B281C7 = "system.wait_msg"(%D67C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D68C7 = "dma.sys.sys_wait"(%B281C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1, %D69C7 = "dma.tensor"(%L30.0x69800c8aa0, %B281C7) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0, %D70C7 = "dma.tensor"(%G1.0x13c000, %B281C7) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R5, %D71C7 = "dma.tensor"(%G1.0x13b000, %B281C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B282C7 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D71C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B283C7 = "tsbc.s_bc"(%R0.0x580, %D71C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B284C7 = "arith.sub"(%C0.0, %R2, %D71C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B285C7 = "arith.max"(%R4.0x380, %C-45408.0, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B286C7 = "arith.min"(%R4.0x380, %C45408.0, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B287C7 = "arith.mul"(%R4.0x380, %C1.4423828125, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B288C7 = "arith.cast"(%R4, %D71C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B289C7 = "arith.mul"(%R3, %C0.693359375, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B290C7 = "arith.sub"(%R4.0x380, %R4, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B291C7 = "arith.cast"(%R3, %D71C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B292C7 = "arith.min"(%R4.0x380, %C15, %D71C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B293C7 = "arith.max"(%R3, %C-15, %D71C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B294C7 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D71C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B295C7 = "sfu.taylor_4x"(%R4, %R4.0x700, %D71C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B296C7 = "arith.mul"(%R4.0x380, %R3, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B297C7 = "arith.add"(%R3, %C1.0, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B298C7 = "arith.div"(%C1.0, %R4, %D71C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B299C7 = "arith.mul"(%R3, %R2, %D71C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190af0, %D72C7 = "dma.tensor"(%R3, %B299C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B300C7, %msg49 = "system.send_msg"(%D72C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D73C7, %msg49 = "dma.sys.sys_send"(%B300C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D91C0, %msg48 = "@core_0"(%D89C0, %msg49) {
CHECK:          %B447C0 = "system.wait_msg"(%D89C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D90C0 = "dma.sys.sys_wait"(%B447C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B448C0, %msg48 = "system.send_msg"(%D90C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D91C0, %msg48 = "dma.sys.sys_send"(%B448C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D91C1, %msg48 = "@core_1"(%D89C1, %msg49) {
CHECK:          %B447C1 = "system.wait_msg"(%D89C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D90C1 = "dma.sys.sys_wait"(%B447C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B448C1, %msg48 = "system.send_msg"(%D90C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D91C1, %msg48 = "dma.sys.sys_send"(%B448C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D91C2, %msg48 = "@core_2"(%D89C2, %msg49) {
CHECK:          %B447C2 = "system.wait_msg"(%D89C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D90C2 = "dma.sys.sys_wait"(%B447C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B448C2, %msg48 = "system.send_msg"(%D90C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D91C2, %msg48 = "dma.sys.sys_send"(%B448C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D91C3, %msg48 = "@core_3"(%D89C3, %msg49) {
CHECK:          %B447C3 = "system.wait_msg"(%D89C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D90C3 = "dma.sys.sys_wait"(%B447C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B448C3, %msg48 = "system.send_msg"(%D90C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D91C3, %msg48 = "dma.sys.sys_send"(%B448C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D91C4, %msg48 = "@core_4"(%D89C4, %msg49) {
CHECK:          %B447C4 = "system.wait_msg"(%D89C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D90C4 = "dma.sys.sys_wait"(%B447C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B448C4, %msg48 = "system.send_msg"(%D90C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D91C4, %msg48 = "dma.sys.sys_send"(%B448C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D91C5, %msg48 = "@core_5"(%D89C5, %msg49) {
CHECK:          %B447C5 = "system.wait_msg"(%D89C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D90C5 = "dma.sys.sys_wait"(%B447C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B448C5, %msg48 = "system.send_msg"(%D90C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D91C5, %msg48 = "dma.sys.sys_send"(%B448C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D87C6, %msg48 = "@core_6"(%D85C6, %msg49) {
CHECK:          %B374C6 = "system.wait_msg"(%D85C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D86C6 = "dma.sys.sys_wait"(%B374C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B375C6, %msg48 = "system.send_msg"(%D86C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D87C6, %msg48 = "dma.sys.sys_send"(%B375C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D75C7, %msg48 = "@core_7"(%D73C7, %msg49) {
CHECK:          %B301C7 = "system.wait_msg"(%D73C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D74C7 = "dma.sys.sys_wait"(%B301C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B302C7, %msg48 = "system.send_msg"(%D74C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D75C7, %msg48 = "dma.sys.sys_send"(%B302C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D99C0, %msg49 = "@core_0"(%D91C0, %msg48) {
CHECK:          %B449C0 = "system.wait_msg"(%D91C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D92C0 = "dma.sys.sys_wait"(%B449C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D93C0 = "dma.tensor"(%L30.0x69801f4000, %B449C0) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D94C0 = "dma.tensor"(%L30.0x6980190000, %B449C0) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B450C0 = "arith.add"(%R2, %R3, %D94C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D95C0 = "dma.tensor"(%G1.0x185000, %B449C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D96C0 = "dma.tensor"(%G1.0x184000, %B449C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B451C0 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D96C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8000, %D97C0 = "dma.tensor"(%R0, %B450C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B452C0 = "tsbc.s_bc"(%R0.0x580, %D97C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B453C0 = "arith.sub"(%C0.0, %R1, %D97C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B454C0 = "arith.max"(%R0.0x380, %C-45408.0, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B455C0 = "arith.min"(%R0.0x380, %C45408.0, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B456C0 = "arith.mul"(%R0.0x380, %C1.4423828125, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B457C0 = "arith.cast"(%R0, %D97C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B458C0 = "arith.mul"(%R4.0x200, %C0.693359375, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B459C0 = "arith.sub"(%R0.0x380, %R0, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B460C0 = "arith.cast"(%R4.0x200, %D97C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B461C0 = "arith.min"(%R0.0x380, %C15, %D97C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B462C0 = "arith.max"(%R4.0x200, %C-15, %D97C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B463C0 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D97C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B464C0 = "sfu.taylor_4x"(%R0, %R0.0x700, %D97C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B465C0 = "arith.mul"(%R0.0x380, %R4.0x200, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B466C0 = "arith.add"(%R4.0x200, %C1.0, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B467C0 = "arith.div"(%C1.0, %R0, %D97C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B468C0 = "arith.mul"(%R4.0x200, %R1, %D97C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c000, %D98C0 = "dma.tensor"(%R4.0x200, %B468C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B469C0, %msg49 = "system.send_msg"(%D98C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D99C0, %msg49 = "dma.sys.sys_send"(%B469C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D99C1, %msg49 = "@core_1"(%D91C1, %msg48) {
CHECK:          %B449C1 = "system.wait_msg"(%D91C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D92C1 = "dma.sys.sys_wait"(%B449C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D93C1 = "dma.tensor"(%L30.0x69801f4190, %B449C1) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D94C1 = "dma.tensor"(%L30.0x6980190190, %B449C1) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B450C1 = "arith.add"(%R2, %R3, %D94C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D95C1 = "dma.tensor"(%G1.0x185000, %B449C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D96C1 = "dma.tensor"(%G1.0x184000, %B449C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B451C1 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D96C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8190, %D97C1 = "dma.tensor"(%R0, %B450C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B452C1 = "tsbc.s_bc"(%R0.0x580, %D97C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B453C1 = "arith.sub"(%C0.0, %R1, %D97C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B454C1 = "arith.max"(%R0.0x380, %C-45408.0, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B455C1 = "arith.min"(%R0.0x380, %C45408.0, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B456C1 = "arith.mul"(%R0.0x380, %C1.4423828125, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B457C1 = "arith.cast"(%R0, %D97C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B458C1 = "arith.mul"(%R4.0x200, %C0.693359375, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B459C1 = "arith.sub"(%R0.0x380, %R0, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B460C1 = "arith.cast"(%R4.0x200, %D97C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B461C1 = "arith.min"(%R0.0x380, %C15, %D97C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B462C1 = "arith.max"(%R4.0x200, %C-15, %D97C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B463C1 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D97C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B464C1 = "sfu.taylor_4x"(%R0, %R0.0x700, %D97C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B465C1 = "arith.mul"(%R0.0x380, %R4.0x200, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B466C1 = "arith.add"(%R4.0x200, %C1.0, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B467C1 = "arith.div"(%C1.0, %R0, %D97C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B468C1 = "arith.mul"(%R4.0x200, %R1, %D97C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c190, %D98C1 = "dma.tensor"(%R4.0x200, %B468C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B469C1, %msg49 = "system.send_msg"(%D98C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D99C1, %msg49 = "dma.sys.sys_send"(%B469C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D99C2, %msg49 = "@core_2"(%D91C2, %msg48) {
CHECK:          %B449C2 = "system.wait_msg"(%D91C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D92C2 = "dma.sys.sys_wait"(%B449C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D93C2 = "dma.tensor"(%L30.0x69801f4320, %B449C2) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D94C2 = "dma.tensor"(%L30.0x6980190320, %B449C2) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B450C2 = "arith.add"(%R2, %R3, %D94C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D95C2 = "dma.tensor"(%G1.0x185000, %B449C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D96C2 = "dma.tensor"(%G1.0x184000, %B449C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B451C2 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D96C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8320, %D97C2 = "dma.tensor"(%R0, %B450C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B452C2 = "tsbc.s_bc"(%R0.0x580, %D97C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B453C2 = "arith.sub"(%C0.0, %R1, %D97C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B454C2 = "arith.max"(%R0.0x380, %C-45408.0, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B455C2 = "arith.min"(%R0.0x380, %C45408.0, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B456C2 = "arith.mul"(%R0.0x380, %C1.4423828125, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B457C2 = "arith.cast"(%R0, %D97C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B458C2 = "arith.mul"(%R4.0x200, %C0.693359375, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B459C2 = "arith.sub"(%R0.0x380, %R0, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B460C2 = "arith.cast"(%R4.0x200, %D97C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B461C2 = "arith.min"(%R0.0x380, %C15, %D97C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B462C2 = "arith.max"(%R4.0x200, %C-15, %D97C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B463C2 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D97C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B464C2 = "sfu.taylor_4x"(%R0, %R0.0x700, %D97C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B465C2 = "arith.mul"(%R0.0x380, %R4.0x200, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B466C2 = "arith.add"(%R4.0x200, %C1.0, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B467C2 = "arith.div"(%C1.0, %R0, %D97C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B468C2 = "arith.mul"(%R4.0x200, %R1, %D97C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c320, %D98C2 = "dma.tensor"(%R4.0x200, %B468C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B469C2, %msg49 = "system.send_msg"(%D98C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D99C2, %msg49 = "dma.sys.sys_send"(%B469C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D99C3, %msg49 = "@core_3"(%D91C3, %msg48) {
CHECK:          %B449C3 = "system.wait_msg"(%D91C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D92C3 = "dma.sys.sys_wait"(%B449C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D93C3 = "dma.tensor"(%L30.0x69801f44b0, %B449C3) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D94C3 = "dma.tensor"(%L30.0x69801904b0, %B449C3) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B450C3 = "arith.add"(%R2, %R3, %D94C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D95C3 = "dma.tensor"(%G1.0x185000, %B449C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D96C3 = "dma.tensor"(%G1.0x184000, %B449C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B451C3 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D96C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c84b0, %D97C3 = "dma.tensor"(%R0, %B450C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B452C3 = "tsbc.s_bc"(%R0.0x580, %D97C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B453C3 = "arith.sub"(%C0.0, %R1, %D97C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B454C3 = "arith.max"(%R0.0x380, %C-45408.0, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B455C3 = "arith.min"(%R0.0x380, %C45408.0, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B456C3 = "arith.mul"(%R0.0x380, %C1.4423828125, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B457C3 = "arith.cast"(%R0, %D97C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B458C3 = "arith.mul"(%R4.0x200, %C0.693359375, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B459C3 = "arith.sub"(%R0.0x380, %R0, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B460C3 = "arith.cast"(%R4.0x200, %D97C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B461C3 = "arith.min"(%R0.0x380, %C15, %D97C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B462C3 = "arith.max"(%R4.0x200, %C-15, %D97C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B463C3 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D97C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B464C3 = "sfu.taylor_4x"(%R0, %R0.0x700, %D97C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B465C3 = "arith.mul"(%R0.0x380, %R4.0x200, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B466C3 = "arith.add"(%R4.0x200, %C1.0, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B467C3 = "arith.div"(%C1.0, %R0, %D97C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B468C3 = "arith.mul"(%R4.0x200, %R1, %D97C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c4b0, %D98C3 = "dma.tensor"(%R4.0x200, %B468C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B469C3, %msg49 = "system.send_msg"(%D98C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D99C3, %msg49 = "dma.sys.sys_send"(%B469C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D99C4, %msg49 = "@core_4"(%D91C4, %msg48) {
CHECK:          %B449C4 = "system.wait_msg"(%D91C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D92C4 = "dma.sys.sys_wait"(%B449C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D93C4 = "dma.tensor"(%L30.0x69801f4640, %B449C4) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D94C4 = "dma.tensor"(%L30.0x6980190640, %B449C4) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B450C4 = "arith.add"(%R2, %R3, %D94C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D95C4 = "dma.tensor"(%G1.0x185000, %B449C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D96C4 = "dma.tensor"(%G1.0x184000, %B449C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B451C4 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D96C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8640, %D97C4 = "dma.tensor"(%R0, %B450C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B452C4 = "tsbc.s_bc"(%R0.0x580, %D97C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B453C4 = "arith.sub"(%C0.0, %R1, %D97C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B454C4 = "arith.max"(%R0.0x380, %C-45408.0, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B455C4 = "arith.min"(%R0.0x380, %C45408.0, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B456C4 = "arith.mul"(%R0.0x380, %C1.4423828125, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B457C4 = "arith.cast"(%R0, %D97C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B458C4 = "arith.mul"(%R4.0x200, %C0.693359375, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B459C4 = "arith.sub"(%R0.0x380, %R0, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B460C4 = "arith.cast"(%R4.0x200, %D97C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B461C4 = "arith.min"(%R0.0x380, %C15, %D97C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B462C4 = "arith.max"(%R4.0x200, %C-15, %D97C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B463C4 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D97C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B464C4 = "sfu.taylor_4x"(%R0, %R0.0x700, %D97C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B465C4 = "arith.mul"(%R0.0x380, %R4.0x200, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B466C4 = "arith.add"(%R4.0x200, %C1.0, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B467C4 = "arith.div"(%C1.0, %R0, %D97C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B468C4 = "arith.mul"(%R4.0x200, %R1, %D97C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c640, %D98C4 = "dma.tensor"(%R4.0x200, %B468C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B469C4, %msg49 = "system.send_msg"(%D98C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D99C4, %msg49 = "dma.sys.sys_send"(%B469C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D99C5, %msg49 = "@core_5"(%D91C5, %msg48) {
CHECK:          %B449C5 = "system.wait_msg"(%D91C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D92C5 = "dma.sys.sys_wait"(%B449C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D93C5 = "dma.tensor"(%L30.0x69801f47d0, %B449C5) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D94C5 = "dma.tensor"(%L30.0x69801907d0, %B449C5) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B450C5 = "arith.add"(%R2, %R3, %D94C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D95C5 = "dma.tensor"(%G1.0x185000, %B449C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D96C5 = "dma.tensor"(%G1.0x184000, %B449C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B451C5 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D96C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c87d0, %D97C5 = "dma.tensor"(%R0, %B450C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B452C5 = "tsbc.s_bc"(%R0.0x580, %D97C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B453C5 = "arith.sub"(%C0.0, %R1, %D97C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B454C5 = "arith.max"(%R0.0x380, %C-45408.0, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B455C5 = "arith.min"(%R0.0x380, %C45408.0, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B456C5 = "arith.mul"(%R0.0x380, %C1.4423828125, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B457C5 = "arith.cast"(%R0, %D97C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B458C5 = "arith.mul"(%R4.0x200, %C0.693359375, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B459C5 = "arith.sub"(%R0.0x380, %R0, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B460C5 = "arith.cast"(%R4.0x200, %D97C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B461C5 = "arith.min"(%R0.0x380, %C15, %D97C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B462C5 = "arith.max"(%R4.0x200, %C-15, %D97C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B463C5 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D97C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B464C5 = "sfu.taylor_4x"(%R0, %R0.0x700, %D97C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B465C5 = "arith.mul"(%R0.0x380, %R4.0x200, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B466C5 = "arith.add"(%R4.0x200, %C1.0, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B467C5 = "arith.div"(%C1.0, %R0, %D97C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B468C5 = "arith.mul"(%R4.0x200, %R1, %D97C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c7d0, %D98C5 = "dma.tensor"(%R4.0x200, %B468C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B469C5, %msg49 = "system.send_msg"(%D98C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D99C5, %msg49 = "dma.sys.sys_send"(%B469C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D95C6, %msg49 = "@core_6"(%D87C6, %msg48) {
CHECK:          %B376C6 = "system.wait_msg"(%D87C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D88C6 = "dma.sys.sys_wait"(%B376C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D89C6 = "dma.tensor"(%L30.0x69801f4960, %B376C6) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D90C6 = "dma.tensor"(%L30.0x6980190960, %B376C6) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B377C6 = "arith.add"(%R2, %R3, %D90C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D91C6 = "dma.tensor"(%G1.0x185000, %B376C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D92C6 = "dma.tensor"(%G1.0x184000, %B376C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B378C6 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D92C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8960, %D93C6 = "dma.tensor"(%R0, %B377C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B379C6 = "tsbc.s_bc"(%R0.0x580, %D93C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B380C6 = "arith.sub"(%C0.0, %R1, %D93C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B381C6 = "arith.max"(%R0.0x380, %C-45408.0, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B382C6 = "arith.min"(%R0.0x380, %C45408.0, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B383C6 = "arith.mul"(%R0.0x380, %C1.4423828125, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B384C6 = "arith.cast"(%R0, %D93C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B385C6 = "arith.mul"(%R4.0x200, %C0.693359375, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B386C6 = "arith.sub"(%R0.0x380, %R0, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B387C6 = "arith.cast"(%R4.0x200, %D93C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B388C6 = "arith.min"(%R0.0x380, %C15, %D93C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B389C6 = "arith.max"(%R4.0x200, %C-15, %D93C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B390C6 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D93C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B391C6 = "sfu.taylor_4x"(%R0, %R0.0x700, %D93C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B392C6 = "arith.mul"(%R0.0x380, %R4.0x200, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B393C6 = "arith.add"(%R4.0x200, %C1.0, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B394C6 = "arith.div"(%C1.0, %R0, %D93C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B395C6 = "arith.mul"(%R4.0x200, %R1, %D93C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012c960, %D94C6 = "dma.tensor"(%R4.0x200, %B395C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B396C6, %msg49 = "system.send_msg"(%D94C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D95C6, %msg49 = "dma.sys.sys_send"(%B396C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D83C7, %msg49 = "@core_7"(%D75C7, %msg48) {
CHECK:          %B303C7 = "system.wait_msg"(%D75C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D76C7 = "dma.sys.sys_wait"(%B303C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D77C7 = "dma.tensor"(%L30.0x69801f4af0, %B303C7) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %D78C7 = "dma.tensor"(%L30.0x6980190af0, %B303C7) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B304C7 = "arith.add"(%R2, %R3, %D78C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %D79C7 = "dma.tensor"(%G1.0x185000, %B303C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R5, %D80C7 = "dma.tensor"(%G1.0x184000, %B303C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R1, %B305C7 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D80C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8af0, %D81C7 = "dma.tensor"(%R0, %B304C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R0.0x700, %B306C7 = "tsbc.s_bc"(%R0.0x580, %D81C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x380, %B307C7 = "arith.sub"(%C0.0, %R1, %D81C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B308C7 = "arith.max"(%R0.0x380, %C-45408.0, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B309C7 = "arith.min"(%R0.0x380, %C45408.0, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B310C7 = "arith.mul"(%R0.0x380, %C1.4423828125, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B311C7 = "arith.cast"(%R0, %D81C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B312C7 = "arith.mul"(%R4.0x200, %C0.693359375, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B313C7 = "arith.sub"(%R0.0x380, %R0, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B314C7 = "arith.cast"(%R4.0x200, %D81C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B315C7 = "arith.min"(%R0.0x380, %C15, %D81C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x380, %B316C7 = "arith.max"(%R4.0x200, %C-15, %D81C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x200, %B317C7 = "arith.add_satu"(%R0.0x380, %C15, %C10, %D81C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x380, %B318C7 = "sfu.taylor_4x"(%R0, %R0.0x700, %D81C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B319C7 = "arith.mul"(%R0.0x380, %R4.0x200, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0, %B320C7 = "arith.add"(%R4.0x200, %C1.0, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B321C7 = "arith.div"(%C1.0, %R0, %D81C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B322C7 = "arith.mul"(%R4.0x200, %R1, %D81C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698012caf0, %D82C7 = "dma.tensor"(%R4.0x200, %B322C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B323C7, %msg49 = "system.send_msg"(%D82C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D83C7, %msg49 = "dma.sys.sys_send"(%B323C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D101C0, %msg48 = "@core_0"(%D99C0, %msg49) {
CHECK:          %B470C0 = "system.wait_msg"(%D99C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D100C0 = "dma.sys.sys_wait"(%B470C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B471C0, %msg48 = "system.send_msg"(%D100C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D101C0, %msg48 = "dma.sys.sys_send"(%B471C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D101C1, %msg48 = "@core_1"(%D99C1, %msg49) {
CHECK:          %B470C1 = "system.wait_msg"(%D99C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D100C1 = "dma.sys.sys_wait"(%B470C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B471C1, %msg48 = "system.send_msg"(%D100C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D101C1, %msg48 = "dma.sys.sys_send"(%B471C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D101C2, %msg48 = "@core_2"(%D99C2, %msg49) {
CHECK:          %B470C2 = "system.wait_msg"(%D99C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D100C2 = "dma.sys.sys_wait"(%B470C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B471C2, %msg48 = "system.send_msg"(%D100C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D101C2, %msg48 = "dma.sys.sys_send"(%B471C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D101C3, %msg48 = "@core_3"(%D99C3, %msg49) {
CHECK:          %B470C3 = "system.wait_msg"(%D99C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D100C3 = "dma.sys.sys_wait"(%B470C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B471C3, %msg48 = "system.send_msg"(%D100C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D101C3, %msg48 = "dma.sys.sys_send"(%B471C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D101C4, %msg48 = "@core_4"(%D99C4, %msg49) {
CHECK:          %B470C4 = "system.wait_msg"(%D99C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D100C4 = "dma.sys.sys_wait"(%B470C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B471C4, %msg48 = "system.send_msg"(%D100C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D101C4, %msg48 = "dma.sys.sys_send"(%B471C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D101C5, %msg48 = "@core_5"(%D99C5, %msg49) {
CHECK:          %B470C5 = "system.wait_msg"(%D99C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D100C5 = "dma.sys.sys_wait"(%B470C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B471C5, %msg48 = "system.send_msg"(%D100C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D101C5, %msg48 = "dma.sys.sys_send"(%B471C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D97C6, %msg48 = "@core_6"(%D95C6, %msg49) {
CHECK:          %B397C6 = "system.wait_msg"(%D95C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D96C6 = "dma.sys.sys_wait"(%B397C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B398C6, %msg48 = "system.send_msg"(%D96C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D97C6, %msg48 = "dma.sys.sys_send"(%B398C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D85C7, %msg48 = "@core_7"(%D83C7, %msg49) {
CHECK:          %B324C7 = "system.wait_msg"(%D83C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D84C7 = "dma.sys.sys_wait"(%B324C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B325C7, %msg48 = "system.send_msg"(%D84C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D85C7, %msg48 = "dma.sys.sys_send"(%B325C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C0, %msg49 = "@core_0"(%D101C0, %msg48) {
CHECK:          %B472C0 = "system.wait_msg"(%D101C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D102C0 = "dma.sys.sys_wait"(%B472C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D103C0 = "dma.tensor"(%G1.0x18d000, %B472C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D104C0 = "dma.tensor"(%G1.0x18e000, %B472C0) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D105C0 = "dma.tensor"(%L30.0x698012c000, %B472C0) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B473C0 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D105C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D106C0 = "dma.tensor"(%G1.0x1d7000, %B472C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D107C0 = "dma.tensor"(%G1.0x1d6000, %B472C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B474C0 = "tsbc.s_bc"(%R0.0x580, %D107C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B475C0 = "arith.sub"(%C0.0, %R3, %D107C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B476C0 = "arith.max"(%R2.0x380, %C-45408.0, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B477C0 = "arith.min"(%R2.0x380, %C45408.0, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B478C0 = "arith.mul"(%R2.0x380, %C1.4423828125, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B479C0 = "arith.cast"(%R2, %D107C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B480C0 = "arith.mul"(%R1.0x200, %C0.693359375, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B481C0 = "arith.sub"(%R2.0x380, %R2, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B482C0 = "arith.cast"(%R1.0x200, %D107C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B483C0 = "arith.min"(%R2.0x380, %C15, %D107C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B484C0 = "arith.max"(%R1.0x200, %C-15, %D107C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B485C0 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D107C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B486C0 = "sfu.taylor_4x"(%R2, %R2.0x700, %D107C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B487C0 = "arith.mul"(%R2.0x380, %R1.0x200, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B488C0 = "arith.add"(%R1.0x200, %C1.0, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B489C0 = "arith.div"(%C1.0, %R2, %D107C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B490C0 = "arith.mul"(%R1.0x200, %R3, %D107C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D108C0 = "dma.tensor"(%L30.0x69800c8000, %B473C0) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B491C0 = "arith.add"(%R0.0x1200, %R1.0x200, %D108C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B492C0 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D108C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4000, %D109C0 = "dma.tensor"(%R2, %B491C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B493C0 = "tsbc.s_bc"(%R0.0x580, %D109C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B494C0 = "arith.sub"(%C0.0, %R3, %D109C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B495C0 = "arith.max"(%R4.0x3c0, %C-45408.0, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B496C0 = "arith.min"(%R4.0x3c0, %C45408.0, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B497C0 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B498C0 = "arith.cast"(%R4.0x40, %D109C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B499C0 = "arith.mul"(%R1.0x200, %C0.693359375, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B500C0 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B501C0 = "arith.cast"(%R1.0x200, %D109C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B502C0 = "arith.min"(%R4.0x3c0, %C15, %D109C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B503C0 = "arith.max"(%R1.0x200, %C-15, %D109C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B504C0 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D109C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B505C0 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D109C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B506C0 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B507C0 = "arith.add"(%R1.0x200, %C1.0, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B508C0 = "arith.div"(%C1.0, %R4.0x40, %D109C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B509C0 = "arith.mul"(%R1.0x200, %R3, %D109C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190000, %D110C0 = "dma.tensor"(%R1.0x200, %B509C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B510C0, %msg49 = "system.send_msg"(%D110C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C0, %msg49 = "dma.sys.sys_send"(%B510C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C1, %msg49 = "@core_1"(%D101C1, %msg48) {
CHECK:          %B472C1 = "system.wait_msg"(%D101C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D102C1 = "dma.sys.sys_wait"(%B472C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D103C1 = "dma.tensor"(%G1.0x18d000, %B472C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D104C1 = "dma.tensor"(%G1.0x18e000, %B472C1) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D105C1 = "dma.tensor"(%L30.0x698012c140, %B472C1) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R3, %B473C1 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D105C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D106C1 = "dma.tensor"(%G1.0x1d7000, %B472C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D107C1 = "dma.tensor"(%G1.0x1d6000, %B472C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B474C1 = "tsbc.s_bc"(%R0.0x580, %D107C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B475C1 = "arith.sub"(%C0.0, %R3, %D107C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B476C1 = "arith.max"(%R2.0x380, %C-45408.0, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B477C1 = "arith.min"(%R2.0x380, %C45408.0, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B478C1 = "arith.mul"(%R2.0x380, %C1.4423828125, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B479C1 = "arith.cast"(%R2, %D107C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B480C1 = "arith.mul"(%R1.0x200, %C0.693359375, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B481C1 = "arith.sub"(%R2.0x380, %R2, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B482C1 = "arith.cast"(%R1.0x200, %D107C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B483C1 = "arith.min"(%R2.0x380, %C15, %D107C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B484C1 = "arith.max"(%R1.0x200, %C-15, %D107C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B485C1 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D107C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B486C1 = "sfu.taylor_4x"(%R2, %R2.0x700, %D107C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B487C1 = "arith.mul"(%R2.0x380, %R1.0x200, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B488C1 = "arith.add"(%R1.0x200, %C1.0, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B489C1 = "arith.div"(%C1.0, %R2, %D107C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B490C1 = "arith.mul"(%R1.0x200, %R3, %D107C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D108C1 = "dma.tensor"(%L30.0x69800c8190, %B473C1) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B491C1 = "arith.add"(%R0.0x1200, %R1.0x200, %D108C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B492C1 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D108C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4190, %D109C1 = "dma.tensor"(%R2, %B491C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B493C1 = "tsbc.s_bc"(%R0.0x580, %D109C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B494C1 = "arith.sub"(%C0.0, %R3, %D109C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B495C1 = "arith.max"(%R4.0x3c0, %C-45408.0, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B496C1 = "arith.min"(%R4.0x3c0, %C45408.0, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B497C1 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B498C1 = "arith.cast"(%R4.0x40, %D109C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B499C1 = "arith.mul"(%R1.0x200, %C0.693359375, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B500C1 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B501C1 = "arith.cast"(%R1.0x200, %D109C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B502C1 = "arith.min"(%R4.0x3c0, %C15, %D109C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B503C1 = "arith.max"(%R1.0x200, %C-15, %D109C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B504C1 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D109C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B505C1 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D109C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B506C1 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B507C1 = "arith.add"(%R1.0x200, %C1.0, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B508C1 = "arith.div"(%C1.0, %R4.0x40, %D109C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B509C1 = "arith.mul"(%R1.0x200, %R3, %D109C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190190, %D110C1 = "dma.tensor"(%R1.0x200, %B509C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B510C1, %msg49 = "system.send_msg"(%D110C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C1, %msg49 = "dma.sys.sys_send"(%B510C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C2, %msg49 = "@core_2"(%D101C2, %msg48) {
CHECK:          %B472C2 = "system.wait_msg"(%D101C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D102C2 = "dma.sys.sys_wait"(%B472C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D103C2 = "dma.tensor"(%G1.0x18d000, %B472C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D104C2 = "dma.tensor"(%G1.0x18e000, %B472C2) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D105C2 = "dma.tensor"(%L30.0x698012c2d0, %B472C2) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R3, %B473C2 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D105C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D106C2 = "dma.tensor"(%G1.0x1d7000, %B472C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D107C2 = "dma.tensor"(%G1.0x1d6000, %B472C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B474C2 = "tsbc.s_bc"(%R0.0x580, %D107C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B475C2 = "arith.sub"(%C0.0, %R3, %D107C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B476C2 = "arith.max"(%R2.0x380, %C-45408.0, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B477C2 = "arith.min"(%R2.0x380, %C45408.0, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B478C2 = "arith.mul"(%R2.0x380, %C1.4423828125, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B479C2 = "arith.cast"(%R2, %D107C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B480C2 = "arith.mul"(%R1.0x200, %C0.693359375, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B481C2 = "arith.sub"(%R2.0x380, %R2, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B482C2 = "arith.cast"(%R1.0x200, %D107C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B483C2 = "arith.min"(%R2.0x380, %C15, %D107C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B484C2 = "arith.max"(%R1.0x200, %C-15, %D107C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B485C2 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D107C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B486C2 = "sfu.taylor_4x"(%R2, %R2.0x700, %D107C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B487C2 = "arith.mul"(%R2.0x380, %R1.0x200, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B488C2 = "arith.add"(%R1.0x200, %C1.0, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B489C2 = "arith.div"(%C1.0, %R2, %D107C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B490C2 = "arith.mul"(%R1.0x200, %R3, %D107C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D108C2 = "dma.tensor"(%L30.0x69800c8320, %B473C2) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B491C2 = "arith.add"(%R0.0x1200, %R1.0x200, %D108C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B492C2 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D108C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4320, %D109C2 = "dma.tensor"(%R2, %B491C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B493C2 = "tsbc.s_bc"(%R0.0x580, %D109C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B494C2 = "arith.sub"(%C0.0, %R3, %D109C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B495C2 = "arith.max"(%R4.0x3c0, %C-45408.0, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B496C2 = "arith.min"(%R4.0x3c0, %C45408.0, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B497C2 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B498C2 = "arith.cast"(%R4.0x40, %D109C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B499C2 = "arith.mul"(%R1.0x200, %C0.693359375, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B500C2 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B501C2 = "arith.cast"(%R1.0x200, %D109C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B502C2 = "arith.min"(%R4.0x3c0, %C15, %D109C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B503C2 = "arith.max"(%R1.0x200, %C-15, %D109C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B504C2 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D109C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B505C2 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D109C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B506C2 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B507C2 = "arith.add"(%R1.0x200, %C1.0, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B508C2 = "arith.div"(%C1.0, %R4.0x40, %D109C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B509C2 = "arith.mul"(%R1.0x200, %R3, %D109C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190320, %D110C2 = "dma.tensor"(%R1.0x200, %B509C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B510C2, %msg49 = "system.send_msg"(%D110C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C2, %msg49 = "dma.sys.sys_send"(%B510C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C3, %msg49 = "@core_3"(%D101C3, %msg48) {
CHECK:          %B472C3 = "system.wait_msg"(%D101C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D102C3 = "dma.sys.sys_wait"(%B472C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D103C3 = "dma.tensor"(%G1.0x18d000, %B472C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D104C3 = "dma.tensor"(%G1.0x18e000, %B472C3) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D105C3 = "dma.tensor"(%L30.0x698012c460, %B472C3) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R3, %B473C3 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D105C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D106C3 = "dma.tensor"(%G1.0x1d7000, %B472C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D107C3 = "dma.tensor"(%G1.0x1d6000, %B472C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B474C3 = "tsbc.s_bc"(%R0.0x580, %D107C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B475C3 = "arith.sub"(%C0.0, %R3, %D107C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B476C3 = "arith.max"(%R2.0x380, %C-45408.0, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B477C3 = "arith.min"(%R2.0x380, %C45408.0, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B478C3 = "arith.mul"(%R2.0x380, %C1.4423828125, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B479C3 = "arith.cast"(%R2, %D107C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B480C3 = "arith.mul"(%R1.0x200, %C0.693359375, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B481C3 = "arith.sub"(%R2.0x380, %R2, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B482C3 = "arith.cast"(%R1.0x200, %D107C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B483C3 = "arith.min"(%R2.0x380, %C15, %D107C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B484C3 = "arith.max"(%R1.0x200, %C-15, %D107C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B485C3 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D107C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B486C3 = "sfu.taylor_4x"(%R2, %R2.0x700, %D107C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B487C3 = "arith.mul"(%R2.0x380, %R1.0x200, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B488C3 = "arith.add"(%R1.0x200, %C1.0, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B489C3 = "arith.div"(%C1.0, %R2, %D107C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B490C3 = "arith.mul"(%R1.0x200, %R3, %D107C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D108C3 = "dma.tensor"(%L30.0x69800c84b0, %B473C3) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B491C3 = "arith.add"(%R0.0x1200, %R1.0x200, %D108C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B492C3 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D108C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f44b0, %D109C3 = "dma.tensor"(%R2, %B491C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B493C3 = "tsbc.s_bc"(%R0.0x580, %D109C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B494C3 = "arith.sub"(%C0.0, %R3, %D109C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B495C3 = "arith.max"(%R4.0x3c0, %C-45408.0, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B496C3 = "arith.min"(%R4.0x3c0, %C45408.0, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B497C3 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B498C3 = "arith.cast"(%R4.0x40, %D109C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B499C3 = "arith.mul"(%R1.0x200, %C0.693359375, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B500C3 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B501C3 = "arith.cast"(%R1.0x200, %D109C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B502C3 = "arith.min"(%R4.0x3c0, %C15, %D109C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B503C3 = "arith.max"(%R1.0x200, %C-15, %D109C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B504C3 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D109C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B505C3 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D109C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B506C3 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B507C3 = "arith.add"(%R1.0x200, %C1.0, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B508C3 = "arith.div"(%C1.0, %R4.0x40, %D109C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B509C3 = "arith.mul"(%R1.0x200, %R3, %D109C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801904b0, %D110C3 = "dma.tensor"(%R1.0x200, %B509C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B510C3, %msg49 = "system.send_msg"(%D110C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C3, %msg49 = "dma.sys.sys_send"(%B510C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C4, %msg49 = "@core_4"(%D101C4, %msg48) {
CHECK:          %B472C4 = "system.wait_msg"(%D101C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D102C4 = "dma.sys.sys_wait"(%B472C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D103C4 = "dma.tensor"(%G1.0x18d000, %B472C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D104C4 = "dma.tensor"(%G1.0x18e000, %B472C4) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D105C4 = "dma.tensor"(%L30.0x698012c5f0, %B472C4) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R3, %B473C4 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D105C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D106C4 = "dma.tensor"(%G1.0x1d7000, %B472C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D107C4 = "dma.tensor"(%G1.0x1d6000, %B472C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B474C4 = "tsbc.s_bc"(%R0.0x580, %D107C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B475C4 = "arith.sub"(%C0.0, %R3, %D107C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B476C4 = "arith.max"(%R2.0x380, %C-45408.0, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B477C4 = "arith.min"(%R2.0x380, %C45408.0, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B478C4 = "arith.mul"(%R2.0x380, %C1.4423828125, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B479C4 = "arith.cast"(%R2, %D107C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B480C4 = "arith.mul"(%R1.0x200, %C0.693359375, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B481C4 = "arith.sub"(%R2.0x380, %R2, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B482C4 = "arith.cast"(%R1.0x200, %D107C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B483C4 = "arith.min"(%R2.0x380, %C15, %D107C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B484C4 = "arith.max"(%R1.0x200, %C-15, %D107C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B485C4 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D107C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B486C4 = "sfu.taylor_4x"(%R2, %R2.0x700, %D107C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B487C4 = "arith.mul"(%R2.0x380, %R1.0x200, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B488C4 = "arith.add"(%R1.0x200, %C1.0, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B489C4 = "arith.div"(%C1.0, %R2, %D107C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B490C4 = "arith.mul"(%R1.0x200, %R3, %D107C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D108C4 = "dma.tensor"(%L30.0x69800c8640, %B473C4) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B491C4 = "arith.add"(%R0.0x1200, %R1.0x200, %D108C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B492C4 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D108C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4640, %D109C4 = "dma.tensor"(%R2, %B491C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B493C4 = "tsbc.s_bc"(%R0.0x580, %D109C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B494C4 = "arith.sub"(%C0.0, %R3, %D109C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B495C4 = "arith.max"(%R4.0x3c0, %C-45408.0, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B496C4 = "arith.min"(%R4.0x3c0, %C45408.0, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B497C4 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B498C4 = "arith.cast"(%R4.0x40, %D109C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B499C4 = "arith.mul"(%R1.0x200, %C0.693359375, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B500C4 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B501C4 = "arith.cast"(%R1.0x200, %D109C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B502C4 = "arith.min"(%R4.0x3c0, %C15, %D109C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B503C4 = "arith.max"(%R1.0x200, %C-15, %D109C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B504C4 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D109C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B505C4 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D109C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B506C4 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B507C4 = "arith.add"(%R1.0x200, %C1.0, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B508C4 = "arith.div"(%C1.0, %R4.0x40, %D109C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B509C4 = "arith.mul"(%R1.0x200, %R3, %D109C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190640, %D110C4 = "dma.tensor"(%R1.0x200, %B509C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B510C4, %msg49 = "system.send_msg"(%D110C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C4, %msg49 = "dma.sys.sys_send"(%B510C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C5, %msg49 = "@core_5"(%D101C5, %msg48) {
CHECK:          %B472C5 = "system.wait_msg"(%D101C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D102C5 = "dma.sys.sys_wait"(%B472C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D103C5 = "dma.tensor"(%G1.0x18d000, %B472C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D104C5 = "dma.tensor"(%G1.0x18e000, %B472C5) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D105C5 = "dma.tensor"(%L30.0x698012c780, %B472C5) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R3, %B473C5 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D105C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D106C5 = "dma.tensor"(%G1.0x1d7000, %B472C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D107C5 = "dma.tensor"(%G1.0x1d6000, %B472C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B474C5 = "tsbc.s_bc"(%R0.0x580, %D107C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B475C5 = "arith.sub"(%C0.0, %R3, %D107C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B476C5 = "arith.max"(%R2.0x380, %C-45408.0, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B477C5 = "arith.min"(%R2.0x380, %C45408.0, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B478C5 = "arith.mul"(%R2.0x380, %C1.4423828125, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B479C5 = "arith.cast"(%R2, %D107C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B480C5 = "arith.mul"(%R1.0x200, %C0.693359375, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B481C5 = "arith.sub"(%R2.0x380, %R2, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B482C5 = "arith.cast"(%R1.0x200, %D107C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B483C5 = "arith.min"(%R2.0x380, %C15, %D107C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B484C5 = "arith.max"(%R1.0x200, %C-15, %D107C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B485C5 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D107C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B486C5 = "sfu.taylor_4x"(%R2, %R2.0x700, %D107C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B487C5 = "arith.mul"(%R2.0x380, %R1.0x200, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B488C5 = "arith.add"(%R1.0x200, %C1.0, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B489C5 = "arith.div"(%C1.0, %R2, %D107C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B490C5 = "arith.mul"(%R1.0x200, %R3, %D107C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D108C5 = "dma.tensor"(%L30.0x69800c87d0, %B473C5) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B491C5 = "arith.add"(%R0.0x1200, %R1.0x200, %D108C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B492C5 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D108C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f47d0, %D109C5 = "dma.tensor"(%R2, %B491C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B493C5 = "tsbc.s_bc"(%R0.0x580, %D109C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B494C5 = "arith.sub"(%C0.0, %R3, %D109C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B495C5 = "arith.max"(%R4.0x3c0, %C-45408.0, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B496C5 = "arith.min"(%R4.0x3c0, %C45408.0, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B497C5 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B498C5 = "arith.cast"(%R4.0x40, %D109C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B499C5 = "arith.mul"(%R1.0x200, %C0.693359375, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B500C5 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B501C5 = "arith.cast"(%R1.0x200, %D109C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B502C5 = "arith.min"(%R4.0x3c0, %C15, %D109C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B503C5 = "arith.max"(%R1.0x200, %C-15, %D109C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B504C5 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D109C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B505C5 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D109C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B506C5 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B507C5 = "arith.add"(%R1.0x200, %C1.0, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B508C5 = "arith.div"(%C1.0, %R4.0x40, %D109C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B509C5 = "arith.mul"(%R1.0x200, %R3, %D109C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801907d0, %D110C5 = "dma.tensor"(%R1.0x200, %B509C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B510C5, %msg49 = "system.send_msg"(%D110C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C5, %msg49 = "dma.sys.sys_send"(%B510C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D107C6, %msg49 = "@core_6"(%D97C6, %msg48) {
CHECK:          %B399C6 = "system.wait_msg"(%D97C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D98C6 = "dma.sys.sys_wait"(%B399C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D99C6 = "dma.tensor"(%G1.0x18d000, %B399C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D100C6 = "dma.tensor"(%G1.0x18e000, %B399C6) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D101C6 = "dma.tensor"(%L30.0x698012c910, %B399C6) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R3, %B400C6 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D101C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D102C6 = "dma.tensor"(%G1.0x1d7000, %B399C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D103C6 = "dma.tensor"(%G1.0x1d6000, %B399C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B401C6 = "tsbc.s_bc"(%R0.0x580, %D103C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B402C6 = "arith.sub"(%C0.0, %R3, %D103C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B403C6 = "arith.max"(%R2.0x380, %C-45408.0, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B404C6 = "arith.min"(%R2.0x380, %C45408.0, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B405C6 = "arith.mul"(%R2.0x380, %C1.4423828125, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B406C6 = "arith.cast"(%R2, %D103C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B407C6 = "arith.mul"(%R1.0x200, %C0.693359375, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B408C6 = "arith.sub"(%R2.0x380, %R2, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B409C6 = "arith.cast"(%R1.0x200, %D103C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B410C6 = "arith.min"(%R2.0x380, %C15, %D103C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B411C6 = "arith.max"(%R1.0x200, %C-15, %D103C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B412C6 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D103C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B413C6 = "sfu.taylor_4x"(%R2, %R2.0x700, %D103C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B414C6 = "arith.mul"(%R2.0x380, %R1.0x200, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B415C6 = "arith.add"(%R1.0x200, %C1.0, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B416C6 = "arith.div"(%C1.0, %R2, %D103C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B417C6 = "arith.mul"(%R1.0x200, %R3, %D103C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D104C6 = "dma.tensor"(%L30.0x69800c8960, %B400C6) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B418C6 = "arith.add"(%R0.0x1200, %R1.0x200, %D104C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B419C6 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D104C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4960, %D105C6 = "dma.tensor"(%R2, %B418C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B420C6 = "tsbc.s_bc"(%R0.0x580, %D105C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B421C6 = "arith.sub"(%C0.0, %R3, %D105C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B422C6 = "arith.max"(%R4.0x3c0, %C-45408.0, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B423C6 = "arith.min"(%R4.0x3c0, %C45408.0, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B424C6 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B425C6 = "arith.cast"(%R4.0x40, %D105C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B426C6 = "arith.mul"(%R1.0x200, %C0.693359375, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B427C6 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B428C6 = "arith.cast"(%R1.0x200, %D105C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B429C6 = "arith.min"(%R4.0x3c0, %C15, %D105C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B430C6 = "arith.max"(%R1.0x200, %C-15, %D105C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B431C6 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D105C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B432C6 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D105C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B433C6 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B434C6 = "arith.add"(%R1.0x200, %C1.0, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B435C6 = "arith.div"(%C1.0, %R4.0x40, %D105C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B436C6 = "arith.mul"(%R1.0x200, %R3, %D105C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190960, %D106C6 = "dma.tensor"(%R1.0x200, %B436C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B437C6, %msg49 = "system.send_msg"(%D106C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D107C6, %msg49 = "dma.sys.sys_send"(%B437C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D95C7, %msg49 = "@core_7"(%D85C7, %msg48) {
CHECK:          %B326C7 = "system.wait_msg"(%D85C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D86C7 = "dma.sys.sys_wait"(%B326C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D87C7 = "dma.tensor"(%G1.0x18d000, %B326C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D88C7 = "dma.tensor"(%G1.0x18e000, %B326C7) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R2, %D89C7 = "dma.tensor"(%L30.0x698012caa0, %B326C7) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B327C7 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D89C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D90C7 = "dma.tensor"(%G1.0x1d7000, %B326C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4, %D91C7 = "dma.tensor"(%G1.0x1d6000, %B326C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x700, %B328C7 = "tsbc.s_bc"(%R0.0x580, %D91C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B329C7 = "arith.sub"(%C0.0, %R3, %D91C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B330C7 = "arith.max"(%R2.0x380, %C-45408.0, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B331C7 = "arith.min"(%R2.0x380, %C45408.0, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B332C7 = "arith.mul"(%R2.0x380, %C1.4423828125, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B333C7 = "arith.cast"(%R2, %D91C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B334C7 = "arith.mul"(%R1.0x200, %C0.693359375, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B335C7 = "arith.sub"(%R2.0x380, %R2, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B336C7 = "arith.cast"(%R1.0x200, %D91C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B337C7 = "arith.min"(%R2.0x380, %C15, %D91C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B338C7 = "arith.max"(%R1.0x200, %C-15, %D91C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B339C7 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D91C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B340C7 = "sfu.taylor_4x"(%R2, %R2.0x700, %D91C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B341C7 = "arith.mul"(%R2.0x380, %R1.0x200, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B342C7 = "arith.add"(%R1.0x200, %C1.0, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B343C7 = "arith.div"(%C1.0, %R2, %D91C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B344C7 = "arith.mul"(%R1.0x200, %R3, %D91C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D92C7 = "dma.tensor"(%L30.0x69800c8af0, %B327C7) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B345C7 = "arith.add"(%R0.0x1200, %R1.0x200, %D92C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B346C7 = "conv.normal"(%R2, %R1, %R4, %C0.0, %D92C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69801f4af0, %D93C7 = "dma.tensor"(%R2, %B345C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R4.0x740, %B347C7 = "tsbc.s_bc"(%R0.0x580, %D93C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x3c0, %B348C7 = "arith.sub"(%C0.0, %R3, %D93C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B349C7 = "arith.max"(%R4.0x3c0, %C-45408.0, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B350C7 = "arith.min"(%R4.0x3c0, %C45408.0, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B351C7 = "arith.mul"(%R4.0x3c0, %C1.4423828125, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B352C7 = "arith.cast"(%R4.0x40, %D93C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B353C7 = "arith.mul"(%R1.0x200, %C0.693359375, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B354C7 = "arith.sub"(%R4.0x3c0, %R4.0x40, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B355C7 = "arith.cast"(%R1.0x200, %D93C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B356C7 = "arith.min"(%R4.0x3c0, %C15, %D93C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B357C7 = "arith.max"(%R1.0x200, %C-15, %D93C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x200, %B358C7 = "arith.add_satu"(%R4.0x3c0, %C15, %C10, %D93C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x3c0, %B359C7 = "sfu.taylor_4x"(%R4.0x40, %R4.0x740, %D93C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B360C7 = "arith.mul"(%R4.0x3c0, %R1.0x200, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x40, %B361C7 = "arith.add"(%R1.0x200, %C1.0, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B362C7 = "arith.div"(%C1.0, %R4.0x40, %D93C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x200, %B363C7 = "arith.mul"(%R1.0x200, %R3, %D93C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980190af0, %D94C7 = "dma.tensor"(%R1.0x200, %B363C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B364C7, %msg49 = "system.send_msg"(%D94C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D95C7, %msg49 = "dma.sys.sys_send"(%B364C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D113C0, %msg48 = "@core_0"(%D111C0, %msg49) {
CHECK:          %B511C0 = "system.wait_msg"(%D111C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C0 = "dma.sys.sys_wait"(%B511C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B512C0, %msg48 = "system.send_msg"(%D112C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D113C0, %msg48 = "dma.sys.sys_send"(%B512C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D113C1, %msg48 = "@core_1"(%D111C1, %msg49) {
CHECK:          %B511C1 = "system.wait_msg"(%D111C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C1 = "dma.sys.sys_wait"(%B511C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B512C1, %msg48 = "system.send_msg"(%D112C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D113C1, %msg48 = "dma.sys.sys_send"(%B512C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D113C2, %msg48 = "@core_2"(%D111C2, %msg49) {
CHECK:          %B511C2 = "system.wait_msg"(%D111C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C2 = "dma.sys.sys_wait"(%B511C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B512C2, %msg48 = "system.send_msg"(%D112C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D113C2, %msg48 = "dma.sys.sys_send"(%B512C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D113C3, %msg48 = "@core_3"(%D111C3, %msg49) {
CHECK:          %B511C3 = "system.wait_msg"(%D111C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C3 = "dma.sys.sys_wait"(%B511C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B512C3, %msg48 = "system.send_msg"(%D112C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D113C3, %msg48 = "dma.sys.sys_send"(%B512C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D113C4, %msg48 = "@core_4"(%D111C4, %msg49) {
CHECK:          %B511C4 = "system.wait_msg"(%D111C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C4 = "dma.sys.sys_wait"(%B511C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B512C4, %msg48 = "system.send_msg"(%D112C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D113C4, %msg48 = "dma.sys.sys_send"(%B512C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D113C5, %msg48 = "@core_5"(%D111C5, %msg49) {
CHECK:          %B511C5 = "system.wait_msg"(%D111C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C5 = "dma.sys.sys_wait"(%B511C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B512C5, %msg48 = "system.send_msg"(%D112C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D113C5, %msg48 = "dma.sys.sys_send"(%B512C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D109C6, %msg48 = "@core_6"(%D107C6, %msg49) {
CHECK:          %B438C6 = "system.wait_msg"(%D107C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D108C6 = "dma.sys.sys_wait"(%B438C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B439C6, %msg48 = "system.send_msg"(%D108C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D109C6, %msg48 = "dma.sys.sys_send"(%B439C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D97C7, %msg48 = "@core_7"(%D95C7, %msg49) {
CHECK:          %B365C7 = "system.wait_msg"(%D95C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D96C7 = "dma.sys.sys_wait"(%B365C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B366C7, %msg48 = "system.send_msg"(%D96C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D97C7, %msg48 = "dma.sys.sys_send"(%B366C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D125C0, %msg49 = "@core_0"(%D113C0, %msg48) {
CHECK:          %B513C0 = "system.wait_msg"(%D113C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D114C0 = "dma.sys.sys_wait"(%B513C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D115C0 = "dma.tensor"(%G1.0x1df000, %B513C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D116C0 = "dma.tensor"(%G1.0x1e0000, %B513C0) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D117C0 = "dma.tensor"(%L30.0x6980190000, %B513C0) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2, %B514C0 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D117C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D118C0 = "dma.tensor"(%L30.0x6980000000, %B513C0) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B515C0 = "tsbc.s_bc"(%R0.0x580, %D118C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B516C0 = "arith.sub"(%C0.0, %R2, %D118C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B517C0 = "arith.max"(%R4.0x380, %C-45408.0, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B518C0 = "arith.min"(%R4.0x380, %C45408.0, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B519C0 = "arith.mul"(%R4.0x380, %C1.4423828125, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B520C0 = "arith.cast"(%R4, %D118C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B521C0 = "arith.mul"(%R1.0x700, %C0.693359375, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B522C0 = "arith.sub"(%R4.0x380, %R4, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B523C0 = "arith.cast"(%R1.0x700, %D118C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B524C0 = "arith.min"(%R4.0x380, %C15, %D118C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B525C0 = "arith.max"(%R1.0x700, %C-15, %D118C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B526C0 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D118C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B527C0 = "sfu.taylor_4x"(%R4, %R4.0x700, %D118C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B528C0 = "arith.mul"(%R4.0x380, %R1.0x700, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B529C0 = "arith.add"(%R1.0x700, %C1.0, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B530C0 = "arith.div"(%C1.0, %R4, %D118C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B531C0 = "arith.mul"(%R1.0x700, %R2, %D118C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D119C0 = "dma.tensor"(%G1.0x229000, %B514C0) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D120C0 = "dma.tensor"(%L30.0x69801f4000, %B514C0) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B532C0 = "arith.add"(%R3, %R1.0x700, %D120C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D121C0 = "dma.tensor"(%G1.0x228000, %B531C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B533C0 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D121C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D122C0 = "dma.tensor"(%G1.0x239000, %B532C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B534C0 = "tsbc.s_bc"(%R0.0x580, %D122C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B535C0 = "arith.sub"(%C0.0, %R2, %D122C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B536C0 = "arith.max"(%R1.0x380, %C-45408.0, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B537C0 = "arith.min"(%R1.0x380, %C45408.0, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B538C0 = "arith.mul"(%R1.0x380, %C1.4423828125, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B539C0 = "arith.cast"(%R1, %D122C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B540C0 = "arith.mul"(%R3, %C0.693359375, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B541C0 = "arith.sub"(%R1.0x380, %R1, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B542C0 = "arith.cast"(%R3, %D122C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B543C0 = "arith.min"(%R1.0x380, %C15, %D122C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B544C0 = "arith.max"(%R3, %C-15, %D122C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B545C0 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D122C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B546C0 = "sfu.taylor_4x"(%R1, %R1.0x700, %D122C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B547C0 = "arith.mul"(%R1.0x380, %R3, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B548C0 = "arith.add"(%R3, %C1.0, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B549C0 = "arith.div"(%C1.0, %R1, %D122C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B550C0 = "arith.mul"(%R3, %R2, %D122C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D123C0 = "dma.tensor"(%G1.0x23a000, %B533C0) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B551C0 = "arith.copy"(%R0.0x1e00, %D123C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B552C0 = "arith.copy"(%R3, %D123C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B553C0 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D123C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B554C0 = "tsbc.s_bc"(%R0.0x580, %D123C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B555C0 = "arith.sub"(%C0.0, %R2, %D123C0) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B556C0 = "arith.max"(%R1.0x700, %C-45408.0, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B557C0 = "arith.min"(%R1.0x700, %C45408.0, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B558C0 = "arith.mul"(%R1.0x700, %C1.4423828125, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B559C0 = "arith.cast"(%R1, %D123C0) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B560C0 = "arith.mul"(%R3, %C0.693359375, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B561C0 = "arith.sub"(%R1.0x700, %R1, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B562C0 = "arith.cast"(%R3, %D123C0) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B563C0 = "arith.min"(%R1.0x700, %C15, %D123C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B564C0 = "arith.max"(%R3, %C-15, %D123C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B565C0 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D123C0) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B566C0 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D123C0) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B567C0 = "arith.mul"(%R1.0x700, %R3, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B568C0 = "arith.add"(%R3, %C1.0, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B569C0 = "arith.div"(%C1.0, %R1, %D123C0) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B570C0 = "arith.mul"(%R3, %R2, %D123C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8000, %D124C0 = "dma.tensor"(%R3, %B570C0) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B571C0, %msg49 = "system.send_msg"(%D124C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D125C0, %msg49 = "dma.sys.sys_send"(%B571C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D125C1, %msg49 = "@core_1"(%D113C1, %msg48) {
CHECK:          %B513C1 = "system.wait_msg"(%D113C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D114C1 = "dma.sys.sys_wait"(%B513C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D115C1 = "dma.tensor"(%G1.0x1df000, %B513C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D116C1 = "dma.tensor"(%G1.0x1e0000, %B513C1) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D117C1 = "dma.tensor"(%L30.0x6980190140, %B513C1) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R2, %B514C1 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D117C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D118C1 = "dma.tensor"(%L30.0x6980000190, %B513C1) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B515C1 = "tsbc.s_bc"(%R0.0x580, %D118C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B516C1 = "arith.sub"(%C0.0, %R2, %D118C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B517C1 = "arith.max"(%R4.0x380, %C-45408.0, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B518C1 = "arith.min"(%R4.0x380, %C45408.0, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B519C1 = "arith.mul"(%R4.0x380, %C1.4423828125, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B520C1 = "arith.cast"(%R4, %D118C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B521C1 = "arith.mul"(%R1.0x700, %C0.693359375, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B522C1 = "arith.sub"(%R4.0x380, %R4, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B523C1 = "arith.cast"(%R1.0x700, %D118C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B524C1 = "arith.min"(%R4.0x380, %C15, %D118C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B525C1 = "arith.max"(%R1.0x700, %C-15, %D118C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B526C1 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D118C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B527C1 = "sfu.taylor_4x"(%R4, %R4.0x700, %D118C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B528C1 = "arith.mul"(%R4.0x380, %R1.0x700, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B529C1 = "arith.add"(%R1.0x700, %C1.0, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B530C1 = "arith.div"(%C1.0, %R4, %D118C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B531C1 = "arith.mul"(%R1.0x700, %R2, %D118C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D119C1 = "dma.tensor"(%G1.0x229000, %B514C1) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D120C1 = "dma.tensor"(%L30.0x69801f4190, %B514C1) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B532C1 = "arith.add"(%R3, %R1.0x700, %D120C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D121C1 = "dma.tensor"(%G1.0x228000, %B531C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B533C1 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D121C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D122C1 = "dma.tensor"(%G1.0x239000, %B532C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B534C1 = "tsbc.s_bc"(%R0.0x580, %D122C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B535C1 = "arith.sub"(%C0.0, %R2, %D122C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B536C1 = "arith.max"(%R1.0x380, %C-45408.0, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B537C1 = "arith.min"(%R1.0x380, %C45408.0, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B538C1 = "arith.mul"(%R1.0x380, %C1.4423828125, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B539C1 = "arith.cast"(%R1, %D122C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B540C1 = "arith.mul"(%R3, %C0.693359375, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B541C1 = "arith.sub"(%R1.0x380, %R1, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B542C1 = "arith.cast"(%R3, %D122C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B543C1 = "arith.min"(%R1.0x380, %C15, %D122C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B544C1 = "arith.max"(%R3, %C-15, %D122C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B545C1 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D122C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B546C1 = "sfu.taylor_4x"(%R1, %R1.0x700, %D122C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B547C1 = "arith.mul"(%R1.0x380, %R3, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B548C1 = "arith.add"(%R3, %C1.0, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B549C1 = "arith.div"(%C1.0, %R1, %D122C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B550C1 = "arith.mul"(%R3, %R2, %D122C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D123C1 = "dma.tensor"(%G1.0x23a000, %B533C1) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B551C1 = "arith.copy"(%R0.0x1e00, %D123C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B552C1 = "arith.copy"(%R3, %D123C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B553C1 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D123C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B554C1 = "tsbc.s_bc"(%R0.0x580, %D123C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B555C1 = "arith.sub"(%C0.0, %R2, %D123C1) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B556C1 = "arith.max"(%R1.0x700, %C-45408.0, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B557C1 = "arith.min"(%R1.0x700, %C45408.0, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B558C1 = "arith.mul"(%R1.0x700, %C1.4423828125, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B559C1 = "arith.cast"(%R1, %D123C1) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B560C1 = "arith.mul"(%R3, %C0.693359375, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B561C1 = "arith.sub"(%R1.0x700, %R1, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B562C1 = "arith.cast"(%R3, %D123C1) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B563C1 = "arith.min"(%R1.0x700, %C15, %D123C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B564C1 = "arith.max"(%R3, %C-15, %D123C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B565C1 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D123C1) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B566C1 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D123C1) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B567C1 = "arith.mul"(%R1.0x700, %R3, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B568C1 = "arith.add"(%R3, %C1.0, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B569C1 = "arith.div"(%C1.0, %R1, %D123C1) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B570C1 = "arith.mul"(%R3, %R2, %D123C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8190, %D124C1 = "dma.tensor"(%R3, %B570C1) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B571C1, %msg49 = "system.send_msg"(%D124C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D125C1, %msg49 = "dma.sys.sys_send"(%B571C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D125C2, %msg49 = "@core_2"(%D113C2, %msg48) {
CHECK:          %B513C2 = "system.wait_msg"(%D113C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D114C2 = "dma.sys.sys_wait"(%B513C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D115C2 = "dma.tensor"(%G1.0x1df000, %B513C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D116C2 = "dma.tensor"(%G1.0x1e0000, %B513C2) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D117C2 = "dma.tensor"(%L30.0x69801902d0, %B513C2) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R2, %B514C2 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D117C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D118C2 = "dma.tensor"(%L30.0x6980000320, %B513C2) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B515C2 = "tsbc.s_bc"(%R0.0x580, %D118C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B516C2 = "arith.sub"(%C0.0, %R2, %D118C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B517C2 = "arith.max"(%R4.0x380, %C-45408.0, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B518C2 = "arith.min"(%R4.0x380, %C45408.0, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B519C2 = "arith.mul"(%R4.0x380, %C1.4423828125, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B520C2 = "arith.cast"(%R4, %D118C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B521C2 = "arith.mul"(%R1.0x700, %C0.693359375, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B522C2 = "arith.sub"(%R4.0x380, %R4, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B523C2 = "arith.cast"(%R1.0x700, %D118C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B524C2 = "arith.min"(%R4.0x380, %C15, %D118C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B525C2 = "arith.max"(%R1.0x700, %C-15, %D118C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B526C2 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D118C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B527C2 = "sfu.taylor_4x"(%R4, %R4.0x700, %D118C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B528C2 = "arith.mul"(%R4.0x380, %R1.0x700, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B529C2 = "arith.add"(%R1.0x700, %C1.0, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B530C2 = "arith.div"(%C1.0, %R4, %D118C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B531C2 = "arith.mul"(%R1.0x700, %R2, %D118C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D119C2 = "dma.tensor"(%G1.0x229000, %B514C2) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D120C2 = "dma.tensor"(%L30.0x69801f4320, %B514C2) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B532C2 = "arith.add"(%R3, %R1.0x700, %D120C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D121C2 = "dma.tensor"(%G1.0x228000, %B531C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B533C2 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D121C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D122C2 = "dma.tensor"(%G1.0x239000, %B532C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B534C2 = "tsbc.s_bc"(%R0.0x580, %D122C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B535C2 = "arith.sub"(%C0.0, %R2, %D122C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B536C2 = "arith.max"(%R1.0x380, %C-45408.0, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B537C2 = "arith.min"(%R1.0x380, %C45408.0, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B538C2 = "arith.mul"(%R1.0x380, %C1.4423828125, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B539C2 = "arith.cast"(%R1, %D122C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B540C2 = "arith.mul"(%R3, %C0.693359375, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B541C2 = "arith.sub"(%R1.0x380, %R1, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B542C2 = "arith.cast"(%R3, %D122C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B543C2 = "arith.min"(%R1.0x380, %C15, %D122C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B544C2 = "arith.max"(%R3, %C-15, %D122C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B545C2 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D122C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B546C2 = "sfu.taylor_4x"(%R1, %R1.0x700, %D122C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B547C2 = "arith.mul"(%R1.0x380, %R3, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B548C2 = "arith.add"(%R3, %C1.0, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B549C2 = "arith.div"(%C1.0, %R1, %D122C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B550C2 = "arith.mul"(%R3, %R2, %D122C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D123C2 = "dma.tensor"(%G1.0x23a000, %B533C2) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B551C2 = "arith.copy"(%R0.0x1e00, %D123C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B552C2 = "arith.copy"(%R3, %D123C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B553C2 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D123C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B554C2 = "tsbc.s_bc"(%R0.0x580, %D123C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B555C2 = "arith.sub"(%C0.0, %R2, %D123C2) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B556C2 = "arith.max"(%R1.0x700, %C-45408.0, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B557C2 = "arith.min"(%R1.0x700, %C45408.0, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B558C2 = "arith.mul"(%R1.0x700, %C1.4423828125, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B559C2 = "arith.cast"(%R1, %D123C2) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B560C2 = "arith.mul"(%R3, %C0.693359375, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B561C2 = "arith.sub"(%R1.0x700, %R1, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B562C2 = "arith.cast"(%R3, %D123C2) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B563C2 = "arith.min"(%R1.0x700, %C15, %D123C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B564C2 = "arith.max"(%R3, %C-15, %D123C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B565C2 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D123C2) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B566C2 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D123C2) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B567C2 = "arith.mul"(%R1.0x700, %R3, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B568C2 = "arith.add"(%R3, %C1.0, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B569C2 = "arith.div"(%C1.0, %R1, %D123C2) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B570C2 = "arith.mul"(%R3, %R2, %D123C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8320, %D124C2 = "dma.tensor"(%R3, %B570C2) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B571C2, %msg49 = "system.send_msg"(%D124C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D125C2, %msg49 = "dma.sys.sys_send"(%B571C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D125C3, %msg49 = "@core_3"(%D113C3, %msg48) {
CHECK:          %B513C3 = "system.wait_msg"(%D113C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D114C3 = "dma.sys.sys_wait"(%B513C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D115C3 = "dma.tensor"(%G1.0x1df000, %B513C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D116C3 = "dma.tensor"(%G1.0x1e0000, %B513C3) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D117C3 = "dma.tensor"(%L30.0x6980190460, %B513C3) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R2, %B514C3 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D117C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D118C3 = "dma.tensor"(%L30.0x69800004b0, %B513C3) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B515C3 = "tsbc.s_bc"(%R0.0x580, %D118C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B516C3 = "arith.sub"(%C0.0, %R2, %D118C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B517C3 = "arith.max"(%R4.0x380, %C-45408.0, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B518C3 = "arith.min"(%R4.0x380, %C45408.0, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B519C3 = "arith.mul"(%R4.0x380, %C1.4423828125, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B520C3 = "arith.cast"(%R4, %D118C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B521C3 = "arith.mul"(%R1.0x700, %C0.693359375, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B522C3 = "arith.sub"(%R4.0x380, %R4, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B523C3 = "arith.cast"(%R1.0x700, %D118C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B524C3 = "arith.min"(%R4.0x380, %C15, %D118C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B525C3 = "arith.max"(%R1.0x700, %C-15, %D118C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B526C3 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D118C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B527C3 = "sfu.taylor_4x"(%R4, %R4.0x700, %D118C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B528C3 = "arith.mul"(%R4.0x380, %R1.0x700, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B529C3 = "arith.add"(%R1.0x700, %C1.0, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B530C3 = "arith.div"(%C1.0, %R4, %D118C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B531C3 = "arith.mul"(%R1.0x700, %R2, %D118C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D119C3 = "dma.tensor"(%G1.0x229000, %B514C3) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D120C3 = "dma.tensor"(%L30.0x69801f44b0, %B514C3) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B532C3 = "arith.add"(%R3, %R1.0x700, %D120C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D121C3 = "dma.tensor"(%G1.0x228000, %B531C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B533C3 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D121C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D122C3 = "dma.tensor"(%G1.0x239000, %B532C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B534C3 = "tsbc.s_bc"(%R0.0x580, %D122C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B535C3 = "arith.sub"(%C0.0, %R2, %D122C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B536C3 = "arith.max"(%R1.0x380, %C-45408.0, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B537C3 = "arith.min"(%R1.0x380, %C45408.0, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B538C3 = "arith.mul"(%R1.0x380, %C1.4423828125, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B539C3 = "arith.cast"(%R1, %D122C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B540C3 = "arith.mul"(%R3, %C0.693359375, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B541C3 = "arith.sub"(%R1.0x380, %R1, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B542C3 = "arith.cast"(%R3, %D122C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B543C3 = "arith.min"(%R1.0x380, %C15, %D122C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B544C3 = "arith.max"(%R3, %C-15, %D122C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B545C3 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D122C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B546C3 = "sfu.taylor_4x"(%R1, %R1.0x700, %D122C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B547C3 = "arith.mul"(%R1.0x380, %R3, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B548C3 = "arith.add"(%R3, %C1.0, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B549C3 = "arith.div"(%C1.0, %R1, %D122C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B550C3 = "arith.mul"(%R3, %R2, %D122C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D123C3 = "dma.tensor"(%G1.0x23a000, %B533C3) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B551C3 = "arith.copy"(%R0.0x1e00, %D123C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B552C3 = "arith.copy"(%R3, %D123C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B553C3 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D123C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B554C3 = "tsbc.s_bc"(%R0.0x580, %D123C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B555C3 = "arith.sub"(%C0.0, %R2, %D123C3) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B556C3 = "arith.max"(%R1.0x700, %C-45408.0, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B557C3 = "arith.min"(%R1.0x700, %C45408.0, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B558C3 = "arith.mul"(%R1.0x700, %C1.4423828125, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B559C3 = "arith.cast"(%R1, %D123C3) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B560C3 = "arith.mul"(%R3, %C0.693359375, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B561C3 = "arith.sub"(%R1.0x700, %R1, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B562C3 = "arith.cast"(%R3, %D123C3) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B563C3 = "arith.min"(%R1.0x700, %C15, %D123C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B564C3 = "arith.max"(%R3, %C-15, %D123C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B565C3 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D123C3) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B566C3 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D123C3) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B567C3 = "arith.mul"(%R1.0x700, %R3, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B568C3 = "arith.add"(%R3, %C1.0, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B569C3 = "arith.div"(%C1.0, %R1, %D123C3) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B570C3 = "arith.mul"(%R3, %R2, %D123C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c84b0, %D124C3 = "dma.tensor"(%R3, %B570C3) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B571C3, %msg49 = "system.send_msg"(%D124C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D125C3, %msg49 = "dma.sys.sys_send"(%B571C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D125C4, %msg49 = "@core_4"(%D113C4, %msg48) {
CHECK:          %B513C4 = "system.wait_msg"(%D113C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D114C4 = "dma.sys.sys_wait"(%B513C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D115C4 = "dma.tensor"(%G1.0x1df000, %B513C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D116C4 = "dma.tensor"(%G1.0x1e0000, %B513C4) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D117C4 = "dma.tensor"(%L30.0x69801905f0, %B513C4) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R2, %B514C4 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D117C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D118C4 = "dma.tensor"(%L30.0x6980000640, %B513C4) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B515C4 = "tsbc.s_bc"(%R0.0x580, %D118C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B516C4 = "arith.sub"(%C0.0, %R2, %D118C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B517C4 = "arith.max"(%R4.0x380, %C-45408.0, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B518C4 = "arith.min"(%R4.0x380, %C45408.0, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B519C4 = "arith.mul"(%R4.0x380, %C1.4423828125, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B520C4 = "arith.cast"(%R4, %D118C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B521C4 = "arith.mul"(%R1.0x700, %C0.693359375, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B522C4 = "arith.sub"(%R4.0x380, %R4, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B523C4 = "arith.cast"(%R1.0x700, %D118C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B524C4 = "arith.min"(%R4.0x380, %C15, %D118C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B525C4 = "arith.max"(%R1.0x700, %C-15, %D118C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B526C4 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D118C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B527C4 = "sfu.taylor_4x"(%R4, %R4.0x700, %D118C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B528C4 = "arith.mul"(%R4.0x380, %R1.0x700, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B529C4 = "arith.add"(%R1.0x700, %C1.0, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B530C4 = "arith.div"(%C1.0, %R4, %D118C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B531C4 = "arith.mul"(%R1.0x700, %R2, %D118C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D119C4 = "dma.tensor"(%G1.0x229000, %B514C4) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D120C4 = "dma.tensor"(%L30.0x69801f4640, %B514C4) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B532C4 = "arith.add"(%R3, %R1.0x700, %D120C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D121C4 = "dma.tensor"(%G1.0x228000, %B531C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B533C4 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D121C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D122C4 = "dma.tensor"(%G1.0x239000, %B532C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B534C4 = "tsbc.s_bc"(%R0.0x580, %D122C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B535C4 = "arith.sub"(%C0.0, %R2, %D122C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B536C4 = "arith.max"(%R1.0x380, %C-45408.0, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B537C4 = "arith.min"(%R1.0x380, %C45408.0, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B538C4 = "arith.mul"(%R1.0x380, %C1.4423828125, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B539C4 = "arith.cast"(%R1, %D122C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B540C4 = "arith.mul"(%R3, %C0.693359375, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B541C4 = "arith.sub"(%R1.0x380, %R1, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B542C4 = "arith.cast"(%R3, %D122C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B543C4 = "arith.min"(%R1.0x380, %C15, %D122C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B544C4 = "arith.max"(%R3, %C-15, %D122C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B545C4 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D122C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B546C4 = "sfu.taylor_4x"(%R1, %R1.0x700, %D122C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B547C4 = "arith.mul"(%R1.0x380, %R3, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B548C4 = "arith.add"(%R3, %C1.0, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B549C4 = "arith.div"(%C1.0, %R1, %D122C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B550C4 = "arith.mul"(%R3, %R2, %D122C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D123C4 = "dma.tensor"(%G1.0x23a000, %B533C4) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B551C4 = "arith.copy"(%R0.0x1e00, %D123C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B552C4 = "arith.copy"(%R3, %D123C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B553C4 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D123C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B554C4 = "tsbc.s_bc"(%R0.0x580, %D123C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B555C4 = "arith.sub"(%C0.0, %R2, %D123C4) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B556C4 = "arith.max"(%R1.0x700, %C-45408.0, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B557C4 = "arith.min"(%R1.0x700, %C45408.0, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B558C4 = "arith.mul"(%R1.0x700, %C1.4423828125, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B559C4 = "arith.cast"(%R1, %D123C4) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B560C4 = "arith.mul"(%R3, %C0.693359375, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B561C4 = "arith.sub"(%R1.0x700, %R1, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B562C4 = "arith.cast"(%R3, %D123C4) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B563C4 = "arith.min"(%R1.0x700, %C15, %D123C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B564C4 = "arith.max"(%R3, %C-15, %D123C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B565C4 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D123C4) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B566C4 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D123C4) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B567C4 = "arith.mul"(%R1.0x700, %R3, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B568C4 = "arith.add"(%R3, %C1.0, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B569C4 = "arith.div"(%C1.0, %R1, %D123C4) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B570C4 = "arith.mul"(%R3, %R2, %D123C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8640, %D124C4 = "dma.tensor"(%R3, %B570C4) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B571C4, %msg49 = "system.send_msg"(%D124C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D125C4, %msg49 = "dma.sys.sys_send"(%B571C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D125C5, %msg49 = "@core_5"(%D113C5, %msg48) {
CHECK:          %B513C5 = "system.wait_msg"(%D113C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D114C5 = "dma.sys.sys_wait"(%B513C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D115C5 = "dma.tensor"(%G1.0x1df000, %B513C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D116C5 = "dma.tensor"(%G1.0x1e0000, %B513C5) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D117C5 = "dma.tensor"(%L30.0x6980190780, %B513C5) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R2, %B514C5 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D117C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D118C5 = "dma.tensor"(%L30.0x69800007d0, %B513C5) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B515C5 = "tsbc.s_bc"(%R0.0x580, %D118C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B516C5 = "arith.sub"(%C0.0, %R2, %D118C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B517C5 = "arith.max"(%R4.0x380, %C-45408.0, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B518C5 = "arith.min"(%R4.0x380, %C45408.0, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B519C5 = "arith.mul"(%R4.0x380, %C1.4423828125, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B520C5 = "arith.cast"(%R4, %D118C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B521C5 = "arith.mul"(%R1.0x700, %C0.693359375, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B522C5 = "arith.sub"(%R4.0x380, %R4, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B523C5 = "arith.cast"(%R1.0x700, %D118C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B524C5 = "arith.min"(%R4.0x380, %C15, %D118C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B525C5 = "arith.max"(%R1.0x700, %C-15, %D118C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B526C5 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D118C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B527C5 = "sfu.taylor_4x"(%R4, %R4.0x700, %D118C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B528C5 = "arith.mul"(%R4.0x380, %R1.0x700, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B529C5 = "arith.add"(%R1.0x700, %C1.0, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B530C5 = "arith.div"(%C1.0, %R4, %D118C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B531C5 = "arith.mul"(%R1.0x700, %R2, %D118C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D119C5 = "dma.tensor"(%G1.0x229000, %B514C5) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D120C5 = "dma.tensor"(%L30.0x69801f47d0, %B514C5) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B532C5 = "arith.add"(%R3, %R1.0x700, %D120C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D121C5 = "dma.tensor"(%G1.0x228000, %B531C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B533C5 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D121C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D122C5 = "dma.tensor"(%G1.0x239000, %B532C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B534C5 = "tsbc.s_bc"(%R0.0x580, %D122C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B535C5 = "arith.sub"(%C0.0, %R2, %D122C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B536C5 = "arith.max"(%R1.0x380, %C-45408.0, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B537C5 = "arith.min"(%R1.0x380, %C45408.0, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B538C5 = "arith.mul"(%R1.0x380, %C1.4423828125, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B539C5 = "arith.cast"(%R1, %D122C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B540C5 = "arith.mul"(%R3, %C0.693359375, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B541C5 = "arith.sub"(%R1.0x380, %R1, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B542C5 = "arith.cast"(%R3, %D122C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B543C5 = "arith.min"(%R1.0x380, %C15, %D122C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B544C5 = "arith.max"(%R3, %C-15, %D122C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B545C5 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D122C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B546C5 = "sfu.taylor_4x"(%R1, %R1.0x700, %D122C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B547C5 = "arith.mul"(%R1.0x380, %R3, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B548C5 = "arith.add"(%R3, %C1.0, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B549C5 = "arith.div"(%C1.0, %R1, %D122C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B550C5 = "arith.mul"(%R3, %R2, %D122C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D123C5 = "dma.tensor"(%G1.0x23a000, %B533C5) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B551C5 = "arith.copy"(%R0.0x1e00, %D123C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B552C5 = "arith.copy"(%R3, %D123C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B553C5 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D123C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B554C5 = "tsbc.s_bc"(%R0.0x580, %D123C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B555C5 = "arith.sub"(%C0.0, %R2, %D123C5) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B556C5 = "arith.max"(%R1.0x700, %C-45408.0, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B557C5 = "arith.min"(%R1.0x700, %C45408.0, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B558C5 = "arith.mul"(%R1.0x700, %C1.4423828125, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B559C5 = "arith.cast"(%R1, %D123C5) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B560C5 = "arith.mul"(%R3, %C0.693359375, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B561C5 = "arith.sub"(%R1.0x700, %R1, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B562C5 = "arith.cast"(%R3, %D123C5) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B563C5 = "arith.min"(%R1.0x700, %C15, %D123C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B564C5 = "arith.max"(%R3, %C-15, %D123C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B565C5 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D123C5) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B566C5 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D123C5) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B567C5 = "arith.mul"(%R1.0x700, %R3, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B568C5 = "arith.add"(%R3, %C1.0, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B569C5 = "arith.div"(%C1.0, %R1, %D123C5) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B570C5 = "arith.mul"(%R3, %R2, %D123C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c87d0, %D124C5 = "dma.tensor"(%R3, %B570C5) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B571C5, %msg49 = "system.send_msg"(%D124C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D125C5, %msg49 = "dma.sys.sys_send"(%B571C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D121C6, %msg49 = "@core_6"(%D109C6, %msg48) {
CHECK:          %B440C6 = "system.wait_msg"(%D109C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D110C6 = "dma.sys.sys_wait"(%B440C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D111C6 = "dma.tensor"(%G1.0x1df000, %B440C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D112C6 = "dma.tensor"(%G1.0x1e0000, %B440C6) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D113C6 = "dma.tensor"(%L30.0x6980190910, %B440C6) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R2, %B441C6 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D113C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D114C6 = "dma.tensor"(%L30.0x6980000960, %B440C6) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B442C6 = "tsbc.s_bc"(%R0.0x580, %D114C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B443C6 = "arith.sub"(%C0.0, %R2, %D114C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B444C6 = "arith.max"(%R4.0x380, %C-45408.0, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B445C6 = "arith.min"(%R4.0x380, %C45408.0, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B446C6 = "arith.mul"(%R4.0x380, %C1.4423828125, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B447C6 = "arith.cast"(%R4, %D114C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B448C6 = "arith.mul"(%R1.0x700, %C0.693359375, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B449C6 = "arith.sub"(%R4.0x380, %R4, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B450C6 = "arith.cast"(%R1.0x700, %D114C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B451C6 = "arith.min"(%R4.0x380, %C15, %D114C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B452C6 = "arith.max"(%R1.0x700, %C-15, %D114C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B453C6 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D114C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B454C6 = "sfu.taylor_4x"(%R4, %R4.0x700, %D114C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B455C6 = "arith.mul"(%R4.0x380, %R1.0x700, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B456C6 = "arith.add"(%R1.0x700, %C1.0, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B457C6 = "arith.div"(%C1.0, %R4, %D114C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B458C6 = "arith.mul"(%R1.0x700, %R2, %D114C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D115C6 = "dma.tensor"(%G1.0x229000, %B441C6) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D116C6 = "dma.tensor"(%L30.0x69801f4960, %B441C6) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B459C6 = "arith.add"(%R3, %R1.0x700, %D116C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D117C6 = "dma.tensor"(%G1.0x228000, %B458C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B460C6 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D117C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D118C6 = "dma.tensor"(%G1.0x239000, %B459C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B461C6 = "tsbc.s_bc"(%R0.0x580, %D118C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B462C6 = "arith.sub"(%C0.0, %R2, %D118C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B463C6 = "arith.max"(%R1.0x380, %C-45408.0, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B464C6 = "arith.min"(%R1.0x380, %C45408.0, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B465C6 = "arith.mul"(%R1.0x380, %C1.4423828125, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B466C6 = "arith.cast"(%R1, %D118C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B467C6 = "arith.mul"(%R3, %C0.693359375, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B468C6 = "arith.sub"(%R1.0x380, %R1, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B469C6 = "arith.cast"(%R3, %D118C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B470C6 = "arith.min"(%R1.0x380, %C15, %D118C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B471C6 = "arith.max"(%R3, %C-15, %D118C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B472C6 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D118C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B473C6 = "sfu.taylor_4x"(%R1, %R1.0x700, %D118C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B474C6 = "arith.mul"(%R1.0x380, %R3, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B475C6 = "arith.add"(%R3, %C1.0, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B476C6 = "arith.div"(%C1.0, %R1, %D118C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B477C6 = "arith.mul"(%R3, %R2, %D118C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D119C6 = "dma.tensor"(%G1.0x23a000, %B460C6) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B478C6 = "arith.copy"(%R0.0x1e00, %D119C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B479C6 = "arith.copy"(%R3, %D119C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B480C6 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D119C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B481C6 = "tsbc.s_bc"(%R0.0x580, %D119C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B482C6 = "arith.sub"(%C0.0, %R2, %D119C6) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B483C6 = "arith.max"(%R1.0x700, %C-45408.0, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B484C6 = "arith.min"(%R1.0x700, %C45408.0, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B485C6 = "arith.mul"(%R1.0x700, %C1.4423828125, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B486C6 = "arith.cast"(%R1, %D119C6) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B487C6 = "arith.mul"(%R3, %C0.693359375, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B488C6 = "arith.sub"(%R1.0x700, %R1, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B489C6 = "arith.cast"(%R3, %D119C6) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B490C6 = "arith.min"(%R1.0x700, %C15, %D119C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B491C6 = "arith.max"(%R3, %C-15, %D119C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B492C6 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D119C6) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B493C6 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D119C6) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B494C6 = "arith.mul"(%R1.0x700, %R3, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B495C6 = "arith.add"(%R3, %C1.0, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B496C6 = "arith.div"(%C1.0, %R1, %D119C6) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B497C6 = "arith.mul"(%R3, %R2, %D119C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8960, %D120C6 = "dma.tensor"(%R3, %B497C6) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B498C6, %msg49 = "system.send_msg"(%D120C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D121C6, %msg49 = "dma.sys.sys_send"(%B498C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D109C7, %msg49 = "@core_7"(%D97C7, %msg48) {
CHECK:          %B367C7 = "system.wait_msg"(%D97C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D98C7 = "dma.sys.sys_wait"(%B367C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D99C7 = "dma.tensor"(%G1.0x1df000, %B367C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D100C7 = "dma.tensor"(%G1.0x1e0000, %B367C7) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R4, %D101C7 = "dma.tensor"(%L30.0x6980190aa0, %B367C7) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2, %B368C7 = "conv.normal"(%R4, %R0, %R5, %C0.0, %D101C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D102C7 = "dma.tensor"(%L30.0x6980000af0, %B367C7) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B369C7 = "tsbc.s_bc"(%R0.0x580, %D102C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x380, %B370C7 = "arith.sub"(%C0.0, %R2, %D102C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B371C7 = "arith.max"(%R4.0x380, %C-45408.0, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B372C7 = "arith.min"(%R4.0x380, %C45408.0, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B373C7 = "arith.mul"(%R4.0x380, %C1.4423828125, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B374C7 = "arith.cast"(%R4, %D102C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B375C7 = "arith.mul"(%R1.0x700, %C0.693359375, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B376C7 = "arith.sub"(%R4.0x380, %R4, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B377C7 = "arith.cast"(%R1.0x700, %D102C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B378C7 = "arith.min"(%R4.0x380, %C15, %D102C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x380, %B379C7 = "arith.max"(%R1.0x700, %C-15, %D102C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B380C7 = "arith.add_satu"(%R4.0x380, %C15, %C10, %D102C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x380, %B381C7 = "sfu.taylor_4x"(%R4, %R4.0x700, %D102C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B382C7 = "arith.mul"(%R4.0x380, %R1.0x700, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4, %B383C7 = "arith.add"(%R1.0x700, %C1.0, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B384C7 = "arith.div"(%C1.0, %R4, %D102C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B385C7 = "arith.mul"(%R1.0x700, %R2, %D102C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D103C7 = "dma.tensor"(%G1.0x229000, %B368C7) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R3, %D104C7 = "dma.tensor"(%L30.0x69801f4af0, %B368C7) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1e00, %B386C7 = "arith.add"(%R3, %R1.0x700, %D104C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [0, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x740, %D105C7 = "dma.tensor"(%G1.0x228000, %B385C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B387C7 = "conv.normal"(%R1, %R0.0x1a00, %R4.0x740, %C0.0, %D105C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %D106C7 = "dma.tensor"(%G1.0x239000, %B386C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x700, %B388C7 = "tsbc.s_bc"(%R0.0x580, %D106C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x380, %B389C7 = "arith.sub"(%C0.0, %R2, %D106C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B390C7 = "arith.max"(%R1.0x380, %C-45408.0, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B391C7 = "arith.min"(%R1.0x380, %C45408.0, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B392C7 = "arith.mul"(%R1.0x380, %C1.4423828125, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B393C7 = "arith.cast"(%R1, %D106C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B394C7 = "arith.mul"(%R3, %C0.693359375, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B395C7 = "arith.sub"(%R1.0x380, %R1, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B396C7 = "arith.cast"(%R3, %D106C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B397C7 = "arith.min"(%R1.0x380, %C15, %D106C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B398C7 = "arith.max"(%R3, %C-15, %D106C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B399C7 = "arith.add_satu"(%R1.0x380, %C15, %C10, %D106C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B400C7 = "sfu.taylor_4x"(%R1, %R1.0x700, %D106C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B401C7 = "arith.mul"(%R1.0x380, %R3, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B402C7 = "arith.add"(%R3, %C1.0, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B403C7 = "arith.div"(%C1.0, %R1, %D106C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B404C7 = "arith.mul"(%R3, %R2, %D106C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D107C7 = "dma.tensor"(%G1.0x23a000, %B387C7) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1, %B405C7 = "arith.copy"(%R0.0x1e00, %D107C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B406C7 = "arith.copy"(%R3, %D107C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B407C7 = "conv.normal"(%R1, %R0.0x1200, %R3.0x700, %C0.0, %D107C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0xe00, %B408C7 = "tsbc.s_bc"(%R0.0x580, %D107C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x700, %B409C7 = "arith.sub"(%C0.0, %R2, %D107C7) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B410C7 = "arith.max"(%R1.0x700, %C-45408.0, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B411C7 = "arith.min"(%R1.0x700, %C45408.0, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B412C7 = "arith.mul"(%R1.0x700, %C1.4423828125, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B413C7 = "arith.cast"(%R1, %D107C7) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B414C7 = "arith.mul"(%R3, %C0.693359375, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B415C7 = "arith.sub"(%R1.0x700, %R1, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B416C7 = "arith.cast"(%R3, %D107C7) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B417C7 = "arith.min"(%R1.0x700, %C15, %D107C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x700, %B418C7 = "arith.max"(%R3, %C-15, %D107C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R3, %B419C7 = "arith.add_satu"(%R1.0x700, %C15, %C10, %D107C7) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B420C7 = "sfu.taylor_4x"(%R1, %R1.0xe00, %D107C7) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B421C7 = "arith.mul"(%R1.0x700, %R3, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B422C7 = "arith.add"(%R3, %C1.0, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B423C7 = "arith.div"(%C1.0, %R1, %D107C7) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B424C7 = "arith.mul"(%R3, %R2, %D107C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8af0, %D108C7 = "dma.tensor"(%R3, %B424C7) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B425C7, %msg49 = "system.send_msg"(%D108C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D109C7, %msg49 = "dma.sys.sys_send"(%B425C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D127C0, %msg48 = "@core_0"(%D125C0, %msg49) {
CHECK:          %B572C0 = "system.wait_msg"(%D125C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D126C0 = "dma.sys.sys_wait"(%B572C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B573C0, %msg48 = "system.send_msg"(%D126C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D127C0, %msg48 = "dma.sys.sys_send"(%B573C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D127C1, %msg48 = "@core_1"(%D125C1, %msg49) {
CHECK:          %B572C1 = "system.wait_msg"(%D125C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D126C1 = "dma.sys.sys_wait"(%B572C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B573C1, %msg48 = "system.send_msg"(%D126C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D127C1, %msg48 = "dma.sys.sys_send"(%B573C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D127C2, %msg48 = "@core_2"(%D125C2, %msg49) {
CHECK:          %B572C2 = "system.wait_msg"(%D125C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D126C2 = "dma.sys.sys_wait"(%B572C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B573C2, %msg48 = "system.send_msg"(%D126C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D127C2, %msg48 = "dma.sys.sys_send"(%B573C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D127C3, %msg48 = "@core_3"(%D125C3, %msg49) {
CHECK:          %B572C3 = "system.wait_msg"(%D125C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D126C3 = "dma.sys.sys_wait"(%B572C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B573C3, %msg48 = "system.send_msg"(%D126C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D127C3, %msg48 = "dma.sys.sys_send"(%B573C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D127C4, %msg48 = "@core_4"(%D125C4, %msg49) {
CHECK:          %B572C4 = "system.wait_msg"(%D125C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D126C4 = "dma.sys.sys_wait"(%B572C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B573C4, %msg48 = "system.send_msg"(%D126C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D127C4, %msg48 = "dma.sys.sys_send"(%B573C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D127C5, %msg48 = "@core_5"(%D125C5, %msg49) {
CHECK:          %B572C5 = "system.wait_msg"(%D125C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D126C5 = "dma.sys.sys_wait"(%B572C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B573C5, %msg48 = "system.send_msg"(%D126C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D127C5, %msg48 = "dma.sys.sys_send"(%B573C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D123C6, %msg48 = "@core_6"(%D121C6, %msg49) {
CHECK:          %B499C6 = "system.wait_msg"(%D121C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D122C6 = "dma.sys.sys_wait"(%B499C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B500C6, %msg48 = "system.send_msg"(%D122C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D123C6, %msg48 = "dma.sys.sys_send"(%B500C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D111C7, %msg48 = "@core_7"(%D109C7, %msg49) {
CHECK:          %B426C7 = "system.wait_msg"(%D109C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D110C7 = "dma.sys.sys_wait"(%B426C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B427C7, %msg48 = "system.send_msg"(%D110C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D111C7, %msg48 = "dma.sys.sys_send"(%B427C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D136C0, %msg49 = "@core_0"(%D127C0, %msg48) {
CHECK:          %B574C0 = "system.wait_msg"(%D127C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D128C0 = "dma.sys.sys_wait"(%B574C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D129C0 = "dma.tensor"(%G1.0x25a000, %B574C0) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D130C0 = "dma.tensor"(%L30.0x69800c8000, %B574C0) : (memref<1x256x6x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x6x40xi16, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0, %D131C0 = "dma.tensor"(%G1.0x25b000, %B574C0) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B575C0 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D131C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x6x40xf16, strides: [1024, 256, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D132C0 = "dma.tensor"(%G1.0x49c000, %B574C0) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B576C0 = "tsbc.s_bc"(%R0.0x580, %D132C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B577C0 = "arith.sub"(%C0.0, %R5, %D132C0) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B578C0 = "arith.max"(%R2.0x1400, %C-45408.0, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B579C0 = "arith.min"(%R2.0x1400, %C45408.0, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B580C0 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B581C0 = "arith.cast"(%R2.0x1000, %D132C0) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B582C0 = "arith.mul"(%R6, %C0.693359375, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B583C0 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B584C0 = "arith.cast"(%R6, %D132C0) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B585C0 = "arith.min"(%R2.0x1400, %C15, %D132C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B586C0 = "arith.max"(%R6, %C-15, %D132C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B587C0 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D132C0) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B588C0 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D132C0) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B589C0 = "arith.mul"(%R2.0x1400, %R6, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B590C0 = "arith.add"(%R6, %C1.0, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B591C0 = "arith.div"(%C1.0, %R2.0x1000, %D132C0) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B592C0 = "arith.mul"(%R6, %R5, %D132C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D133C0 = "dma.tensor"(%G1.0x49b000, %B575C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B593C0 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D133C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B594C0 = "tsbc.s_bc"(%R0.0x580, %D133C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B595C0 = "arith.sub"(%C0.0, %R4.0x900, %D133C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B596C0 = "arith.max"(%R4.0xd00, %C-45408.0, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B597C0 = "arith.min"(%R4.0xd00, %C45408.0, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B598C0 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B599C0 = "arith.cast"(%R4.0xb00, %D133C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B600C0 = "arith.mul"(%R3.0x1000, %C0.693359375, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B601C0 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B602C0 = "arith.cast"(%R3.0x1000, %D133C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B603C0 = "arith.min"(%R4.0xd00, %C15, %D133C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B604C0 = "arith.max"(%R3.0x1000, %C-15, %D133C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B605C0 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D133C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B606C0 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D133C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B607C0 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B608C0 = "arith.add"(%R3.0x1000, %C1.0, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B609C0 = "arith.div"(%C1.0, %R4.0xb00, %D133C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B610C0 = "arith.mul"(%R3.0x1000, %R4.0x900, %D133C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000000, %D134C0 = "dma.tensor"(%R6, %B592C0) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x6980190000, %D135C0 = "dma.tensor"(%R3.0x1000, %B610C0) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B611C0, %msg49 = "system.send_msg"(%D135C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D136C0, %msg49 = "dma.sys.sys_send"(%B611C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D136C1, %msg49 = "@core_1"(%D127C1, %msg48) {
CHECK:          %B574C1 = "system.wait_msg"(%D127C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D128C1 = "dma.sys.sys_wait"(%B574C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D129C1 = "dma.tensor"(%G1.0x25a000, %B574C1) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D130C1 = "dma.tensor"(%L30.0x69800c8190, %B574C1) : (memref<1x256x7x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x7x40xi16, strides: [1152, 288, 40, 1]>, none)
CHECK:          %R0, %D131C1 = "dma.tensor"(%G1.0x25b000, %B574C1) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B575C1 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D131C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x7x40xf16, strides: [1152, 288, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D132C1 = "dma.tensor"(%G1.0x49c000, %B574C1) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B576C1 = "tsbc.s_bc"(%R0.0x580, %D132C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B577C1 = "arith.sub"(%C0.0, %R5, %D132C1) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B578C1 = "arith.max"(%R2.0x1400, %C-45408.0, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B579C1 = "arith.min"(%R2.0x1400, %C45408.0, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B580C1 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B581C1 = "arith.cast"(%R2.0x1000, %D132C1) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B582C1 = "arith.mul"(%R6, %C0.693359375, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B583C1 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B584C1 = "arith.cast"(%R6, %D132C1) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B585C1 = "arith.min"(%R2.0x1400, %C15, %D132C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B586C1 = "arith.max"(%R6, %C-15, %D132C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B587C1 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D132C1) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B588C1 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D132C1) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B589C1 = "arith.mul"(%R2.0x1400, %R6, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B590C1 = "arith.add"(%R6, %C1.0, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B591C1 = "arith.div"(%C1.0, %R2.0x1000, %D132C1) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B592C1 = "arith.mul"(%R6, %R5, %D132C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D133C1 = "dma.tensor"(%G1.0x49b000, %B575C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B593C1 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D133C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B594C1 = "tsbc.s_bc"(%R0.0x580, %D133C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B595C1 = "arith.sub"(%C0.0, %R4.0x900, %D133C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B596C1 = "arith.max"(%R4.0xd00, %C-45408.0, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B597C1 = "arith.min"(%R4.0xd00, %C45408.0, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B598C1 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B599C1 = "arith.cast"(%R4.0xb00, %D133C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B600C1 = "arith.mul"(%R3.0x1000, %C0.693359375, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B601C1 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B602C1 = "arith.cast"(%R3.0x1000, %D133C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B603C1 = "arith.min"(%R4.0xd00, %C15, %D133C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B604C1 = "arith.max"(%R3.0x1000, %C-15, %D133C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B605C1 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D133C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B606C1 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D133C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B607C1 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B608C1 = "arith.add"(%R3.0x1000, %C1.0, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B609C1 = "arith.div"(%C1.0, %R4.0xb00, %D133C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B610C1 = "arith.mul"(%R3.0x1000, %R4.0x900, %D133C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000078, %D134C1 = "dma.tensor"(%R6, %B592C1) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x6980190078, %D135C1 = "dma.tensor"(%R3.0x1000, %B610C1) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B611C1, %msg49 = "system.send_msg"(%D135C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D136C1, %msg49 = "dma.sys.sys_send"(%B611C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D136C2, %msg49 = "@core_2"(%D127C2, %msg48) {
CHECK:          %B574C2 = "system.wait_msg"(%D127C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D128C2 = "dma.sys.sys_wait"(%B574C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D129C2 = "dma.tensor"(%G1.0x25a000, %B574C2) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D130C2 = "dma.tensor"(%L30.0x69800c8370, %B574C2) : (memref<1x256x7x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x7x40xi16, strides: [1152, 288, 40, 1]>, none)
CHECK:          %R0, %D131C2 = "dma.tensor"(%G1.0x25b000, %B574C2) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B575C2 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D131C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x7x40xf16, strides: [1152, 288, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D132C2 = "dma.tensor"(%G1.0x49c000, %B574C2) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B576C2 = "tsbc.s_bc"(%R0.0x580, %D132C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B577C2 = "arith.sub"(%C0.0, %R5, %D132C2) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B578C2 = "arith.max"(%R2.0x1400, %C-45408.0, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B579C2 = "arith.min"(%R2.0x1400, %C45408.0, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B580C2 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B581C2 = "arith.cast"(%R2.0x1000, %D132C2) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B582C2 = "arith.mul"(%R6, %C0.693359375, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B583C2 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B584C2 = "arith.cast"(%R6, %D132C2) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B585C2 = "arith.min"(%R2.0x1400, %C15, %D132C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B586C2 = "arith.max"(%R6, %C-15, %D132C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B587C2 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D132C2) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B588C2 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D132C2) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B589C2 = "arith.mul"(%R2.0x1400, %R6, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B590C2 = "arith.add"(%R6, %C1.0, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B591C2 = "arith.div"(%C1.0, %R2.0x1000, %D132C2) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B592C2 = "arith.mul"(%R6, %R5, %D132C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D133C2 = "dma.tensor"(%G1.0x49b000, %B575C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B593C2 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D133C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B594C2 = "tsbc.s_bc"(%R0.0x580, %D133C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B595C2 = "arith.sub"(%C0.0, %R4.0x900, %D133C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B596C2 = "arith.max"(%R4.0xd00, %C-45408.0, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B597C2 = "arith.min"(%R4.0xd00, %C45408.0, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B598C2 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B599C2 = "arith.cast"(%R4.0xb00, %D133C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B600C2 = "arith.mul"(%R3.0x1000, %C0.693359375, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B601C2 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B602C2 = "arith.cast"(%R3.0x1000, %D133C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B603C2 = "arith.min"(%R4.0xd00, %C15, %D133C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B604C2 = "arith.max"(%R3.0x1000, %C-15, %D133C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B605C2 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D133C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B606C2 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D133C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B607C2 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B608C2 = "arith.add"(%R3.0x1000, %C1.0, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B609C2 = "arith.div"(%C1.0, %R4.0xb00, %D133C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B610C2 = "arith.mul"(%R3.0x1000, %R4.0x900, %D133C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800000f0, %D134C2 = "dma.tensor"(%R6, %B592C2) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x69801900f0, %D135C2 = "dma.tensor"(%R3.0x1000, %B610C2) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B611C2, %msg49 = "system.send_msg"(%D135C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D136C2, %msg49 = "dma.sys.sys_send"(%B611C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D136C3, %msg49 = "@core_3"(%D127C3, %msg48) {
CHECK:          %B574C3 = "system.wait_msg"(%D127C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D128C3 = "dma.sys.sys_wait"(%B574C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D129C3 = "dma.tensor"(%G1.0x25a000, %B574C3) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D130C3 = "dma.tensor"(%L30.0x69800c8550, %B574C3) : (memref<1x256x7x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x7x40xi16, strides: [1152, 288, 40, 1]>, none)
CHECK:          %R0, %D131C3 = "dma.tensor"(%G1.0x25b000, %B574C3) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B575C3 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D131C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x7x40xf16, strides: [1152, 288, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D132C3 = "dma.tensor"(%G1.0x49c000, %B574C3) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B576C3 = "tsbc.s_bc"(%R0.0x580, %D132C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B577C3 = "arith.sub"(%C0.0, %R5, %D132C3) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B578C3 = "arith.max"(%R2.0x1400, %C-45408.0, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B579C3 = "arith.min"(%R2.0x1400, %C45408.0, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B580C3 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B581C3 = "arith.cast"(%R2.0x1000, %D132C3) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B582C3 = "arith.mul"(%R6, %C0.693359375, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B583C3 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B584C3 = "arith.cast"(%R6, %D132C3) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B585C3 = "arith.min"(%R2.0x1400, %C15, %D132C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B586C3 = "arith.max"(%R6, %C-15, %D132C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B587C3 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D132C3) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B588C3 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D132C3) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B589C3 = "arith.mul"(%R2.0x1400, %R6, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B590C3 = "arith.add"(%R6, %C1.0, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B591C3 = "arith.div"(%C1.0, %R2.0x1000, %D132C3) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B592C3 = "arith.mul"(%R6, %R5, %D132C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D133C3 = "dma.tensor"(%G1.0x49b000, %B575C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B593C3 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D133C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B594C3 = "tsbc.s_bc"(%R0.0x580, %D133C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B595C3 = "arith.sub"(%C0.0, %R4.0x900, %D133C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B596C3 = "arith.max"(%R4.0xd00, %C-45408.0, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B597C3 = "arith.min"(%R4.0xd00, %C45408.0, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B598C3 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B599C3 = "arith.cast"(%R4.0xb00, %D133C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B600C3 = "arith.mul"(%R3.0x1000, %C0.693359375, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B601C3 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B602C3 = "arith.cast"(%R3.0x1000, %D133C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B603C3 = "arith.min"(%R4.0xd00, %C15, %D133C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B604C3 = "arith.max"(%R3.0x1000, %C-15, %D133C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B605C3 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D133C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B606C3 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D133C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B607C3 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B608C3 = "arith.add"(%R3.0x1000, %C1.0, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B609C3 = "arith.div"(%C1.0, %R4.0xb00, %D133C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B610C3 = "arith.mul"(%R3.0x1000, %R4.0x900, %D133C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000168, %D134C3 = "dma.tensor"(%R6, %B592C3) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x6980190168, %D135C3 = "dma.tensor"(%R3.0x1000, %B610C3) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B611C3, %msg49 = "system.send_msg"(%D135C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D136C3, %msg49 = "dma.sys.sys_send"(%B611C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D136C4, %msg49 = "@core_4"(%D127C4, %msg48) {
CHECK:          %B574C4 = "system.wait_msg"(%D127C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D128C4 = "dma.sys.sys_wait"(%B574C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D129C4 = "dma.tensor"(%G1.0x25a000, %B574C4) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D130C4 = "dma.tensor"(%L30.0x69800c8730, %B574C4) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D131C4 = "dma.tensor"(%G1.0x25b000, %B574C4) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B575C4 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D131C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D132C4 = "dma.tensor"(%G1.0x49c000, %B574C4) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B576C4 = "tsbc.s_bc"(%R0.0x580, %D132C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B577C4 = "arith.sub"(%C0.0, %R5, %D132C4) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B578C4 = "arith.max"(%R2.0x1400, %C-45408.0, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B579C4 = "arith.min"(%R2.0x1400, %C45408.0, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B580C4 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B581C4 = "arith.cast"(%R2.0x1000, %D132C4) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B582C4 = "arith.mul"(%R6, %C0.693359375, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B583C4 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B584C4 = "arith.cast"(%R6, %D132C4) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B585C4 = "arith.min"(%R2.0x1400, %C15, %D132C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B586C4 = "arith.max"(%R6, %C-15, %D132C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B587C4 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D132C4) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B588C4 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D132C4) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B589C4 = "arith.mul"(%R2.0x1400, %R6, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B590C4 = "arith.add"(%R6, %C1.0, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B591C4 = "arith.div"(%C1.0, %R2.0x1000, %D132C4) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B592C4 = "arith.mul"(%R6, %R5, %D132C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D133C4 = "dma.tensor"(%G1.0x49b000, %B575C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B593C4 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D133C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B594C4 = "tsbc.s_bc"(%R0.0x580, %D133C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B595C4 = "arith.sub"(%C0.0, %R4.0x900, %D133C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B596C4 = "arith.max"(%R4.0xd00, %C-45408.0, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B597C4 = "arith.min"(%R4.0xd00, %C45408.0, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B598C4 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B599C4 = "arith.cast"(%R4.0xb00, %D133C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B600C4 = "arith.mul"(%R3.0x1000, %C0.693359375, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B601C4 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B602C4 = "arith.cast"(%R3.0x1000, %D133C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B603C4 = "arith.min"(%R4.0xd00, %C15, %D133C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B604C4 = "arith.max"(%R3.0x1000, %C-15, %D133C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B605C4 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D133C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B606C4 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D133C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B607C4 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B608C4 = "arith.add"(%R3.0x1000, %C1.0, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B609C4 = "arith.div"(%C1.0, %R4.0xb00, %D133C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B610C4 = "arith.mul"(%R3.0x1000, %R4.0x900, %D133C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800001e0, %D134C4 = "dma.tensor"(%R6, %B592C4) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x69801901e0, %D135C4 = "dma.tensor"(%R3.0x1000, %B610C4) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B611C4, %msg49 = "system.send_msg"(%D135C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D136C4, %msg49 = "dma.sys.sys_send"(%B611C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D136C5, %msg49 = "@core_5"(%D127C5, %msg48) {
CHECK:          %B574C5 = "system.wait_msg"(%D127C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D128C5 = "dma.sys.sys_wait"(%B574C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D129C5 = "dma.tensor"(%G1.0x25a000, %B574C5) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D130C5 = "dma.tensor"(%L30.0x69800c8870, %B574C5) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D131C5 = "dma.tensor"(%G1.0x25b000, %B574C5) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B575C5 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D131C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D132C5 = "dma.tensor"(%G1.0x49c000, %B574C5) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B576C5 = "tsbc.s_bc"(%R0.0x580, %D132C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B577C5 = "arith.sub"(%C0.0, %R5, %D132C5) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B578C5 = "arith.max"(%R2.0x1400, %C-45408.0, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B579C5 = "arith.min"(%R2.0x1400, %C45408.0, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B580C5 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B581C5 = "arith.cast"(%R2.0x1000, %D132C5) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B582C5 = "arith.mul"(%R6, %C0.693359375, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B583C5 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B584C5 = "arith.cast"(%R6, %D132C5) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B585C5 = "arith.min"(%R2.0x1400, %C15, %D132C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B586C5 = "arith.max"(%R6, %C-15, %D132C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B587C5 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D132C5) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B588C5 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D132C5) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B589C5 = "arith.mul"(%R2.0x1400, %R6, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B590C5 = "arith.add"(%R6, %C1.0, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B591C5 = "arith.div"(%C1.0, %R2.0x1000, %D132C5) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B592C5 = "arith.mul"(%R6, %R5, %D132C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D133C5 = "dma.tensor"(%G1.0x49b000, %B575C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B593C5 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D133C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B594C5 = "tsbc.s_bc"(%R0.0x580, %D133C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B595C5 = "arith.sub"(%C0.0, %R4.0x900, %D133C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B596C5 = "arith.max"(%R4.0xd00, %C-45408.0, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B597C5 = "arith.min"(%R4.0xd00, %C45408.0, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B598C5 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B599C5 = "arith.cast"(%R4.0xb00, %D133C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B600C5 = "arith.mul"(%R3.0x1000, %C0.693359375, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B601C5 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B602C5 = "arith.cast"(%R3.0x1000, %D133C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B603C5 = "arith.min"(%R4.0xd00, %C15, %D133C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B604C5 = "arith.max"(%R3.0x1000, %C-15, %D133C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B605C5 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D133C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B606C5 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D133C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B607C5 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B608C5 = "arith.add"(%R3.0x1000, %C1.0, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B609C5 = "arith.div"(%C1.0, %R4.0xb00, %D133C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B610C5 = "arith.mul"(%R3.0x1000, %R4.0x900, %D133C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000230, %D134C5 = "dma.tensor"(%R6, %B592C5) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x6980190230, %D135C5 = "dma.tensor"(%R3.0x1000, %B610C5) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B611C5, %msg49 = "system.send_msg"(%D135C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D136C5, %msg49 = "dma.sys.sys_send"(%B611C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D132C6, %msg49 = "@core_6"(%D123C6, %msg48) {
CHECK:          %B501C6 = "system.wait_msg"(%D123C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D124C6 = "dma.sys.sys_wait"(%B501C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D125C6 = "dma.tensor"(%G1.0x25a000, %B501C6) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D126C6 = "dma.tensor"(%L30.0x69800c89b0, %B501C6) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D127C6 = "dma.tensor"(%G1.0x25b000, %B501C6) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B502C6 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D127C6) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D128C6 = "dma.tensor"(%G1.0x49c000, %B501C6) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B503C6 = "tsbc.s_bc"(%R0.0x580, %D128C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B504C6 = "arith.sub"(%C0.0, %R5, %D128C6) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B505C6 = "arith.max"(%R2.0x1400, %C-45408.0, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B506C6 = "arith.min"(%R2.0x1400, %C45408.0, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B507C6 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B508C6 = "arith.cast"(%R2.0x1000, %D128C6) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B509C6 = "arith.mul"(%R6, %C0.693359375, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B510C6 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B511C6 = "arith.cast"(%R6, %D128C6) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B512C6 = "arith.min"(%R2.0x1400, %C15, %D128C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B513C6 = "arith.max"(%R6, %C-15, %D128C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B514C6 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D128C6) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B515C6 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D128C6) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B516C6 = "arith.mul"(%R2.0x1400, %R6, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B517C6 = "arith.add"(%R6, %C1.0, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B518C6 = "arith.div"(%C1.0, %R2.0x1000, %D128C6) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B519C6 = "arith.mul"(%R6, %R5, %D128C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D129C6 = "dma.tensor"(%G1.0x49b000, %B502C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B520C6 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D129C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B521C6 = "tsbc.s_bc"(%R0.0x580, %D129C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B522C6 = "arith.sub"(%C0.0, %R4.0x900, %D129C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B523C6 = "arith.max"(%R4.0xd00, %C-45408.0, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B524C6 = "arith.min"(%R4.0xd00, %C45408.0, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B525C6 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B526C6 = "arith.cast"(%R4.0xb00, %D129C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B527C6 = "arith.mul"(%R3.0x1000, %C0.693359375, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B528C6 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B529C6 = "arith.cast"(%R3.0x1000, %D129C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B530C6 = "arith.min"(%R4.0xd00, %C15, %D129C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B531C6 = "arith.max"(%R3.0x1000, %C-15, %D129C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B532C6 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D129C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B533C6 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D129C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B534C6 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B535C6 = "arith.add"(%R3.0x1000, %C1.0, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B536C6 = "arith.div"(%C1.0, %R4.0xb00, %D129C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B537C6 = "arith.mul"(%R3.0x1000, %R4.0x900, %D129C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000280, %D130C6 = "dma.tensor"(%R6, %B519C6) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x6980190280, %D131C6 = "dma.tensor"(%R3.0x1000, %B537C6) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B538C6, %msg49 = "system.send_msg"(%D131C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D132C6, %msg49 = "dma.sys.sys_send"(%B538C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D120C7, %msg49 = "@core_7"(%D111C7, %msg48) {
CHECK:          %B428C7 = "system.wait_msg"(%D111C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D112C7 = "dma.sys.sys_wait"(%B428C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R7, %D113C7 = "dma.tensor"(%G1.0x25a000, %B428C7) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R4, %D114C7 = "dma.tensor"(%L30.0x69800c8af0, %B428C7) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D115C7 = "dma.tensor"(%G1.0x25b000, %B428C7) : (memref<1x512x1x2304xi16, strides: [1179648, 2304, 2304, 1]>, none) -> (memref<1x512x1x2304xi16, strides: [18432, 2304, 2304, 1]>, none)
CHECK:          %R5, %B429C7 = "conv.normal"(%R4, %R0, %R7, %C0.0, %D115C7) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<512x256x3x3xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3, %D116C7 = "dma.tensor"(%G1.0x49c000, %B428C7) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1800, %B430C7 = "tsbc.s_bc"(%R0.0x580, %D116C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x1400, %B431C7 = "arith.sub"(%C0.0, %R5, %D116C7) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B432C7 = "arith.max"(%R2.0x1400, %C-45408.0, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B433C7 = "arith.min"(%R2.0x1400, %C45408.0, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B434C7 = "arith.mul"(%R2.0x1400, %C1.4423828125, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B435C7 = "arith.cast"(%R2.0x1000, %D116C7) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B436C7 = "arith.mul"(%R6, %C0.693359375, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B437C7 = "arith.sub"(%R2.0x1400, %R2.0x1000, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B438C7 = "arith.cast"(%R6, %D116C7) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B439C7 = "arith.min"(%R2.0x1400, %C15, %D116C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B440C7 = "arith.max"(%R6, %C-15, %D116C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B441C7 = "arith.add_satu"(%R2.0x1400, %C15, %C10, %D116C7) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1400, %B442C7 = "sfu.taylor_4x"(%R2.0x1000, %R2.0x1800, %D116C7) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B443C7 = "arith.mul"(%R2.0x1400, %R6, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x1000, %B444C7 = "arith.add"(%R6, %C1.0, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B445C7 = "arith.div"(%C1.0, %R2.0x1000, %D116C7) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R6, %B446C7 = "arith.mul"(%R6, %R5, %D116C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R7.0x40, %D117C7 = "dma.tensor"(%G1.0x49b000, %B429C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x900, %B447C7 = "conv.normal"(%R6, %R3, %R7.0x40, %C0.0, %D117C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xf00, %B448C7 = "tsbc.s_bc"(%R0.0x580, %D117C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xd00, %B449C7 = "arith.sub"(%C0.0, %R4.0x900, %D117C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B450C7 = "arith.max"(%R4.0xd00, %C-45408.0, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B451C7 = "arith.min"(%R4.0xd00, %C45408.0, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B452C7 = "arith.mul"(%R4.0xd00, %C1.4423828125, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B453C7 = "arith.cast"(%R4.0xb00, %D117C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B454C7 = "arith.mul"(%R3.0x1000, %C0.693359375, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B455C7 = "arith.sub"(%R4.0xd00, %R4.0xb00, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B456C7 = "arith.cast"(%R3.0x1000, %D117C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B457C7 = "arith.min"(%R4.0xd00, %C15, %D117C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B458C7 = "arith.max"(%R3.0x1000, %C-15, %D117C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B459C7 = "arith.add_satu"(%R4.0xd00, %C15, %C10, %D117C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xd00, %B460C7 = "sfu.taylor_4x"(%R4.0xb00, %R4.0xf00, %D117C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B461C7 = "arith.mul"(%R4.0xd00, %R3.0x1000, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0xb00, %B462C7 = "arith.add"(%R3.0x1000, %C1.0, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B463C7 = "arith.div"(%C1.0, %R4.0xb00, %D117C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x1000, %B464C7 = "arith.mul"(%R3.0x1000, %R4.0x900, %D117C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800002d0, %D118C7 = "dma.tensor"(%R6, %B446C7) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %L30.0x69801902d0, %D119C7 = "dma.tensor"(%R3.0x1000, %B464C7) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B465C7, %msg49 = "system.send_msg"(%D119C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D120C7, %msg49 = "dma.sys.sys_send"(%B465C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D138C0, %msg48 = "@core_0"(%D136C0, %msg49) {
CHECK:          %B612C0 = "system.wait_msg"(%D136C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D137C0 = "dma.sys.sys_wait"(%B612C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B613C0, %msg48 = "system.send_msg"(%D137C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D138C0, %msg48 = "dma.sys.sys_send"(%B613C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D138C1, %msg48 = "@core_1"(%D136C1, %msg49) {
CHECK:          %B612C1 = "system.wait_msg"(%D136C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D137C1 = "dma.sys.sys_wait"(%B612C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B613C1, %msg48 = "system.send_msg"(%D137C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D138C1, %msg48 = "dma.sys.sys_send"(%B613C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D138C2, %msg48 = "@core_2"(%D136C2, %msg49) {
CHECK:          %B612C2 = "system.wait_msg"(%D136C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D137C2 = "dma.sys.sys_wait"(%B612C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B613C2, %msg48 = "system.send_msg"(%D137C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D138C2, %msg48 = "dma.sys.sys_send"(%B613C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D138C3, %msg48 = "@core_3"(%D136C3, %msg49) {
CHECK:          %B612C3 = "system.wait_msg"(%D136C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D137C3 = "dma.sys.sys_wait"(%B612C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B613C3, %msg48 = "system.send_msg"(%D137C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D138C3, %msg48 = "dma.sys.sys_send"(%B613C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D138C4, %msg48 = "@core_4"(%D136C4, %msg49) {
CHECK:          %B612C4 = "system.wait_msg"(%D136C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D137C4 = "dma.sys.sys_wait"(%B612C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B613C4, %msg48 = "system.send_msg"(%D137C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D138C4, %msg48 = "dma.sys.sys_send"(%B613C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D138C5, %msg48 = "@core_5"(%D136C5, %msg49) {
CHECK:          %B612C5 = "system.wait_msg"(%D136C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D137C5 = "dma.sys.sys_wait"(%B612C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B613C5, %msg48 = "system.send_msg"(%D137C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D138C5, %msg48 = "dma.sys.sys_send"(%B613C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D134C6, %msg48 = "@core_6"(%D132C6, %msg49) {
CHECK:          %B539C6 = "system.wait_msg"(%D132C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D133C6 = "dma.sys.sys_wait"(%B539C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B540C6, %msg48 = "system.send_msg"(%D133C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D134C6, %msg48 = "dma.sys.sys_send"(%B540C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D122C7, %msg48 = "@core_7"(%D120C7, %msg49) {
CHECK:          %B466C7 = "system.wait_msg"(%D120C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D121C7 = "dma.sys.sys_wait"(%B466C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B467C7, %msg48 = "system.send_msg"(%D121C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D122C7, %msg48 = "dma.sys.sys_send"(%B467C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C0, %msg49 = "@core_0"(%D138C0, %msg48) {
CHECK:          %B614C0 = "system.wait_msg"(%D138C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D139C0 = "dma.sys.sys_wait"(%B614C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D140C0 = "dma.tensor"(%L30.0x6980190000, %B614C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D141C0 = "dma.tensor"(%G1.0x4dd000, %B614C0) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D142C0 = "dma.tensor"(%G1.0x4dc000, %B614C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B615C0 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D142C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B616C0 = "tsbc.s_bc"(%R0.0x580, %D142C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B617C0 = "arith.sub"(%C0.0, %R1, %D142C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B618C0 = "arith.max"(%R4.0x200, %C-45408.0, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B619C0 = "arith.min"(%R4.0x200, %C45408.0, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B620C0 = "arith.mul"(%R4.0x200, %C1.4423828125, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B621C0 = "arith.cast"(%R4, %D142C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B622C0 = "arith.mul"(%R3, %C0.693359375, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B623C0 = "arith.sub"(%R4.0x200, %R4, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B624C0 = "arith.cast"(%R3, %D142C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B625C0 = "arith.min"(%R4.0x200, %C15, %D142C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B626C0 = "arith.max"(%R3, %C-15, %D142C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B627C0 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D142C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B628C0 = "sfu.taylor_4x"(%R4, %R4.0x400, %D142C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B629C0 = "arith.mul"(%R4.0x200, %R3, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B630C0 = "arith.add"(%R3, %C1.0, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B631C0 = "arith.div"(%C1.0, %R4, %D142C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B632C0 = "arith.mul"(%R3, %R1, %D142C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096000, %D143C0 = "dma.tensor"(%R3, %B632C0) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B633C0, %msg49 = "system.send_msg"(%D143C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C0, %msg49 = "dma.sys.sys_send"(%B633C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C1, %msg49 = "@core_1"(%D138C1, %msg48) {
CHECK:          %B614C1 = "system.wait_msg"(%D138C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D139C1 = "dma.sys.sys_wait"(%B614C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D140C1 = "dma.tensor"(%L30.0x6980190078, %B614C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D141C1 = "dma.tensor"(%G1.0x4dd000, %B614C1) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D142C1 = "dma.tensor"(%G1.0x4dc000, %B614C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B615C1 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D142C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B616C1 = "tsbc.s_bc"(%R0.0x580, %D142C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B617C1 = "arith.sub"(%C0.0, %R1, %D142C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B618C1 = "arith.max"(%R4.0x200, %C-45408.0, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B619C1 = "arith.min"(%R4.0x200, %C45408.0, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B620C1 = "arith.mul"(%R4.0x200, %C1.4423828125, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B621C1 = "arith.cast"(%R4, %D142C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B622C1 = "arith.mul"(%R3, %C0.693359375, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B623C1 = "arith.sub"(%R4.0x200, %R4, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B624C1 = "arith.cast"(%R3, %D142C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B625C1 = "arith.min"(%R4.0x200, %C15, %D142C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B626C1 = "arith.max"(%R3, %C-15, %D142C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B627C1 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D142C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B628C1 = "sfu.taylor_4x"(%R4, %R4.0x400, %D142C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B629C1 = "arith.mul"(%R4.0x200, %R3, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B630C1 = "arith.add"(%R3, %C1.0, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B631C1 = "arith.div"(%C1.0, %R4, %D142C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B632C1 = "arith.mul"(%R3, %R1, %D142C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096078, %D143C1 = "dma.tensor"(%R3, %B632C1) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B633C1, %msg49 = "system.send_msg"(%D143C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C1, %msg49 = "dma.sys.sys_send"(%B633C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C2, %msg49 = "@core_2"(%D138C2, %msg48) {
CHECK:          %B614C2 = "system.wait_msg"(%D138C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D139C2 = "dma.sys.sys_wait"(%B614C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D140C2 = "dma.tensor"(%L30.0x69801900f0, %B614C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D141C2 = "dma.tensor"(%G1.0x4dd000, %B614C2) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D142C2 = "dma.tensor"(%G1.0x4dc000, %B614C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B615C2 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D142C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B616C2 = "tsbc.s_bc"(%R0.0x580, %D142C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B617C2 = "arith.sub"(%C0.0, %R1, %D142C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B618C2 = "arith.max"(%R4.0x200, %C-45408.0, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B619C2 = "arith.min"(%R4.0x200, %C45408.0, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B620C2 = "arith.mul"(%R4.0x200, %C1.4423828125, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B621C2 = "arith.cast"(%R4, %D142C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B622C2 = "arith.mul"(%R3, %C0.693359375, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B623C2 = "arith.sub"(%R4.0x200, %R4, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B624C2 = "arith.cast"(%R3, %D142C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B625C2 = "arith.min"(%R4.0x200, %C15, %D142C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B626C2 = "arith.max"(%R3, %C-15, %D142C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B627C2 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D142C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B628C2 = "sfu.taylor_4x"(%R4, %R4.0x400, %D142C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B629C2 = "arith.mul"(%R4.0x200, %R3, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B630C2 = "arith.add"(%R3, %C1.0, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B631C2 = "arith.div"(%C1.0, %R4, %D142C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B632C2 = "arith.mul"(%R3, %R1, %D142C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800960f0, %D143C2 = "dma.tensor"(%R3, %B632C2) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B633C2, %msg49 = "system.send_msg"(%D143C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C2, %msg49 = "dma.sys.sys_send"(%B633C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C3, %msg49 = "@core_3"(%D138C3, %msg48) {
CHECK:          %B614C3 = "system.wait_msg"(%D138C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D139C3 = "dma.sys.sys_wait"(%B614C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D140C3 = "dma.tensor"(%L30.0x6980190168, %B614C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D141C3 = "dma.tensor"(%G1.0x4dd000, %B614C3) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D142C3 = "dma.tensor"(%G1.0x4dc000, %B614C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B615C3 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D142C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B616C3 = "tsbc.s_bc"(%R0.0x580, %D142C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B617C3 = "arith.sub"(%C0.0, %R1, %D142C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B618C3 = "arith.max"(%R4.0x200, %C-45408.0, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B619C3 = "arith.min"(%R4.0x200, %C45408.0, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B620C3 = "arith.mul"(%R4.0x200, %C1.4423828125, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B621C3 = "arith.cast"(%R4, %D142C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B622C3 = "arith.mul"(%R3, %C0.693359375, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B623C3 = "arith.sub"(%R4.0x200, %R4, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B624C3 = "arith.cast"(%R3, %D142C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B625C3 = "arith.min"(%R4.0x200, %C15, %D142C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B626C3 = "arith.max"(%R3, %C-15, %D142C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B627C3 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D142C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B628C3 = "sfu.taylor_4x"(%R4, %R4.0x400, %D142C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B629C3 = "arith.mul"(%R4.0x200, %R3, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B630C3 = "arith.add"(%R3, %C1.0, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B631C3 = "arith.div"(%C1.0, %R4, %D142C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B632C3 = "arith.mul"(%R3, %R1, %D142C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096168, %D143C3 = "dma.tensor"(%R3, %B632C3) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B633C3, %msg49 = "system.send_msg"(%D143C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C3, %msg49 = "dma.sys.sys_send"(%B633C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C4, %msg49 = "@core_4"(%D138C4, %msg48) {
CHECK:          %B614C4 = "system.wait_msg"(%D138C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D139C4 = "dma.sys.sys_wait"(%B614C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D140C4 = "dma.tensor"(%L30.0x69801901e0, %B614C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D141C4 = "dma.tensor"(%G1.0x4dd000, %B614C4) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D142C4 = "dma.tensor"(%G1.0x4dc000, %B614C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B615C4 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D142C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B616C4 = "tsbc.s_bc"(%R0.0x580, %D142C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B617C4 = "arith.sub"(%C0.0, %R1, %D142C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B618C4 = "arith.max"(%R4.0x200, %C-45408.0, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B619C4 = "arith.min"(%R4.0x200, %C45408.0, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B620C4 = "arith.mul"(%R4.0x200, %C1.4423828125, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B621C4 = "arith.cast"(%R4, %D142C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B622C4 = "arith.mul"(%R3, %C0.693359375, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B623C4 = "arith.sub"(%R4.0x200, %R4, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B624C4 = "arith.cast"(%R3, %D142C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B625C4 = "arith.min"(%R4.0x200, %C15, %D142C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B626C4 = "arith.max"(%R3, %C-15, %D142C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B627C4 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D142C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B628C4 = "sfu.taylor_4x"(%R4, %R4.0x400, %D142C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B629C4 = "arith.mul"(%R4.0x200, %R3, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B630C4 = "arith.add"(%R3, %C1.0, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B631C4 = "arith.div"(%C1.0, %R4, %D142C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B632C4 = "arith.mul"(%R3, %R1, %D142C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800961e0, %D143C4 = "dma.tensor"(%R3, %B632C4) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B633C4, %msg49 = "system.send_msg"(%D143C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C4, %msg49 = "dma.sys.sys_send"(%B633C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C5, %msg49 = "@core_5"(%D138C5, %msg48) {
CHECK:          %B614C5 = "system.wait_msg"(%D138C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D139C5 = "dma.sys.sys_wait"(%B614C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D140C5 = "dma.tensor"(%L30.0x6980190230, %B614C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D141C5 = "dma.tensor"(%G1.0x4dd000, %B614C5) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D142C5 = "dma.tensor"(%G1.0x4dc000, %B614C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B615C5 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D142C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B616C5 = "tsbc.s_bc"(%R0.0x580, %D142C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B617C5 = "arith.sub"(%C0.0, %R1, %D142C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B618C5 = "arith.max"(%R4.0x200, %C-45408.0, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B619C5 = "arith.min"(%R4.0x200, %C45408.0, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B620C5 = "arith.mul"(%R4.0x200, %C1.4423828125, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B621C5 = "arith.cast"(%R4, %D142C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B622C5 = "arith.mul"(%R3, %C0.693359375, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B623C5 = "arith.sub"(%R4.0x200, %R4, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B624C5 = "arith.cast"(%R3, %D142C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B625C5 = "arith.min"(%R4.0x200, %C15, %D142C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B626C5 = "arith.max"(%R3, %C-15, %D142C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B627C5 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D142C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B628C5 = "sfu.taylor_4x"(%R4, %R4.0x400, %D142C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B629C5 = "arith.mul"(%R4.0x200, %R3, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B630C5 = "arith.add"(%R3, %C1.0, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B631C5 = "arith.div"(%C1.0, %R4, %D142C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B632C5 = "arith.mul"(%R3, %R1, %D142C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096230, %D143C5 = "dma.tensor"(%R3, %B632C5) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B633C5, %msg49 = "system.send_msg"(%D143C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C5, %msg49 = "dma.sys.sys_send"(%B633C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D140C6, %msg49 = "@core_6"(%D134C6, %msg48) {
CHECK:          %B541C6 = "system.wait_msg"(%D134C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D135C6 = "dma.sys.sys_wait"(%B541C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D136C6 = "dma.tensor"(%L30.0x6980190280, %B541C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D137C6 = "dma.tensor"(%G1.0x4dd000, %B541C6) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D138C6 = "dma.tensor"(%G1.0x4dc000, %B541C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B542C6 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D138C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B543C6 = "tsbc.s_bc"(%R0.0x580, %D138C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B544C6 = "arith.sub"(%C0.0, %R1, %D138C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B545C6 = "arith.max"(%R4.0x200, %C-45408.0, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B546C6 = "arith.min"(%R4.0x200, %C45408.0, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B547C6 = "arith.mul"(%R4.0x200, %C1.4423828125, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B548C6 = "arith.cast"(%R4, %D138C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B549C6 = "arith.mul"(%R3, %C0.693359375, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B550C6 = "arith.sub"(%R4.0x200, %R4, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B551C6 = "arith.cast"(%R3, %D138C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B552C6 = "arith.min"(%R4.0x200, %C15, %D138C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B553C6 = "arith.max"(%R3, %C-15, %D138C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B554C6 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D138C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B555C6 = "sfu.taylor_4x"(%R4, %R4.0x400, %D138C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B556C6 = "arith.mul"(%R4.0x200, %R3, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B557C6 = "arith.add"(%R3, %C1.0, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B558C6 = "arith.div"(%C1.0, %R4, %D138C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B559C6 = "arith.mul"(%R3, %R1, %D138C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096280, %D139C6 = "dma.tensor"(%R3, %B559C6) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B560C6, %msg49 = "system.send_msg"(%D139C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D140C6, %msg49 = "dma.sys.sys_send"(%B560C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D128C7, %msg49 = "@core_7"(%D122C7, %msg48) {
CHECK:          %B468C7 = "system.wait_msg"(%D122C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D123C7 = "dma.sys.sys_wait"(%B468C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D124C7 = "dma.tensor"(%L30.0x69801902d0, %B468C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D125C7 = "dma.tensor"(%G1.0x4dd000, %B468C7) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R5, %D126C7 = "dma.tensor"(%G1.0x4dc000, %B468C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1, %B469C7 = "conv.normal"(%R2, %R0, %R5, %C0.0, %D126C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x400, %B470C7 = "tsbc.s_bc"(%R0.0x580, %D126C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x200, %B471C7 = "arith.sub"(%C0.0, %R1, %D126C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B472C7 = "arith.max"(%R4.0x200, %C-45408.0, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B473C7 = "arith.min"(%R4.0x200, %C45408.0, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B474C7 = "arith.mul"(%R4.0x200, %C1.4423828125, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B475C7 = "arith.cast"(%R4, %D126C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B476C7 = "arith.mul"(%R3, %C0.693359375, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B477C7 = "arith.sub"(%R4.0x200, %R4, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B478C7 = "arith.cast"(%R3, %D126C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B479C7 = "arith.min"(%R4.0x200, %C15, %D126C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B480C7 = "arith.max"(%R3, %C-15, %D126C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B481C7 = "arith.add_satu"(%R4.0x200, %C15, %C10, %D126C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %B482C7 = "sfu.taylor_4x"(%R4, %R4.0x400, %D126C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B483C7 = "arith.mul"(%R4.0x200, %R3, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B484C7 = "arith.add"(%R3, %C1.0, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B485C7 = "arith.div"(%C1.0, %R4, %D126C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B486C7 = "arith.mul"(%R3, %R1, %D126C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800962d0, %D127C7 = "dma.tensor"(%R3, %B486C7) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B487C7, %msg49 = "system.send_msg"(%D127C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D128C7, %msg49 = "dma.sys.sys_send"(%B487C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C0, %msg48 = "@core_0"(%D144C0, %msg49) {
CHECK:          %B634C0 = "system.wait_msg"(%D144C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C0 = "dma.sys.sys_wait"(%B634C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B635C0, %msg48 = "system.send_msg"(%D145C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C0, %msg48 = "dma.sys.sys_send"(%B635C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C1, %msg48 = "@core_1"(%D144C1, %msg49) {
CHECK:          %B634C1 = "system.wait_msg"(%D144C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C1 = "dma.sys.sys_wait"(%B634C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B635C1, %msg48 = "system.send_msg"(%D145C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C1, %msg48 = "dma.sys.sys_send"(%B635C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C2, %msg48 = "@core_2"(%D144C2, %msg49) {
CHECK:          %B634C2 = "system.wait_msg"(%D144C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C2 = "dma.sys.sys_wait"(%B634C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B635C2, %msg48 = "system.send_msg"(%D145C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C2, %msg48 = "dma.sys.sys_send"(%B635C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C3, %msg48 = "@core_3"(%D144C3, %msg49) {
CHECK:          %B634C3 = "system.wait_msg"(%D144C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C3 = "dma.sys.sys_wait"(%B634C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B635C3, %msg48 = "system.send_msg"(%D145C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C3, %msg48 = "dma.sys.sys_send"(%B635C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C4, %msg48 = "@core_4"(%D144C4, %msg49) {
CHECK:          %B634C4 = "system.wait_msg"(%D144C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C4 = "dma.sys.sys_wait"(%B634C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B635C4, %msg48 = "system.send_msg"(%D145C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C4, %msg48 = "dma.sys.sys_send"(%B635C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C5, %msg48 = "@core_5"(%D144C5, %msg49) {
CHECK:          %B634C5 = "system.wait_msg"(%D144C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C5 = "dma.sys.sys_wait"(%B634C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B635C5, %msg48 = "system.send_msg"(%D145C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C5, %msg48 = "dma.sys.sys_send"(%B635C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D142C6, %msg48 = "@core_6"(%D140C6, %msg49) {
CHECK:          %B561C6 = "system.wait_msg"(%D140C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D141C6 = "dma.sys.sys_wait"(%B561C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B562C6, %msg48 = "system.send_msg"(%D141C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D142C6, %msg48 = "dma.sys.sys_send"(%B562C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D130C7, %msg48 = "@core_7"(%D128C7, %msg49) {
CHECK:          %B488C7 = "system.wait_msg"(%D128C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D129C7 = "dma.sys.sys_wait"(%B488C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B489C7, %msg48 = "system.send_msg"(%D129C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D130C7, %msg48 = "dma.sys.sys_send"(%B489C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D152C0, %msg49 = "@core_0"(%D146C0, %msg48) {
CHECK:          %B636C0 = "system.wait_msg"(%D146C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C0 = "dma.sys.sys_wait"(%B636C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D148C0 = "dma.tensor"(%G1.0x4fe000, %B636C0) : (memref<1x64x72x32xf16, strides: [589824, 2304, 32, 1]>, none) -> (memref<1x64x72x32xf16, strides: [2304, 2304, 32, 1]>, none)
CHECK:          %R0.0x1200, %D149C0 = "dma.tensor"(%G1.0x4fd000, %B636C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D150C0 = "dma.tensor"(%L30.0x6980096000, %B636C0) : (memref<1x256x20x20xf16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none)
CHECK:          %R3, %B637C0 = "conv.normal"(%R1, %R0, %R0.0x1200, %C0.0, %D150C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, memref<64x256x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980064000, %D151C0 = "dma.tensor"(%R3, %B637C0) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B638C0, %msg49 = "system.send_msg"(%D151C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D152C0, %msg49 = "dma.sys.sys_send"(%B638C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D152C1, %msg49 = "@core_1"(%D146C1, %msg48) {
CHECK:          %B636C1 = "system.wait_msg"(%D146C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C1 = "dma.sys.sys_wait"(%B636C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D148C1 = "dma.tensor"(%G1.0x546000, %B636C1) : (memref<1x64x72x32xf16, strides: [589824, 2304, 32, 1]>, none) -> (memref<1x64x72x32xf16, strides: [2304, 2304, 32, 1]>, none)
CHECK:          %R0.0x1200, %D149C1 = "dma.tensor"(%G1.0x4fd100, %B636C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D150C1 = "dma.tensor"(%L30.0x6980096000, %B636C1) : (memref<1x256x20x20xf16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none)
CHECK:          %R3, %B637C1 = "conv.normal"(%R1, %R0, %R0.0x1200, %C0.0, %D150C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, memref<64x256x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980070800, %D151C1 = "dma.tensor"(%R3, %B637C1) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B638C1, %msg49 = "system.send_msg"(%D151C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D152C1, %msg49 = "dma.sys.sys_send"(%B638C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D152C2, %msg49 = "@core_2"(%D146C2, %msg48) {
CHECK:          %B636C2 = "system.wait_msg"(%D146C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C2 = "dma.sys.sys_wait"(%B636C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D148C2 = "dma.tensor"(%G1.0x58e000, %B636C2) : (memref<1x64x72x32xf16, strides: [589824, 2304, 32, 1]>, none) -> (memref<1x64x72x32xf16, strides: [2304, 2304, 32, 1]>, none)
CHECK:          %R0.0x1200, %D149C2 = "dma.tensor"(%G1.0x4fd200, %B636C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D150C2 = "dma.tensor"(%L30.0x6980096000, %B636C2) : (memref<1x256x20x20xf16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none)
CHECK:          %R3, %B637C2 = "conv.normal"(%R1, %R0, %R0.0x1200, %C0.0, %D150C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, memref<64x256x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698007d000, %D151C2 = "dma.tensor"(%R3, %B637C2) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B638C2, %msg49 = "system.send_msg"(%D151C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D152C2, %msg49 = "dma.sys.sys_send"(%B638C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D152C3, %msg49 = "@core_3"(%D146C3, %msg48) {
CHECK:          %B636C3 = "system.wait_msg"(%D146C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C3 = "dma.sys.sys_wait"(%B636C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D148C3 = "dma.tensor"(%G1.0x5d6000, %B636C3) : (memref<1x64x72x32xf16, strides: [589824, 2304, 32, 1]>, none) -> (memref<1x64x72x32xf16, strides: [2304, 2304, 32, 1]>, none)
CHECK:          %R0.0x1200, %D149C3 = "dma.tensor"(%G1.0x4fd300, %B636C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D150C3 = "dma.tensor"(%L30.0x6980096000, %B636C3) : (memref<1x256x20x20xf16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none)
CHECK:          %R3, %B637C3 = "conv.normal"(%R1, %R0, %R0.0x1200, %C0.0, %D150C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, memref<64x256x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980089800, %D151C3 = "dma.tensor"(%R3, %B637C3) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B638C3, %msg49 = "system.send_msg"(%D151C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D152C3, %msg49 = "dma.sys.sys_send"(%B638C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D148C4, %msg49 = "@core_4"(%D146C4, %msg48) {
CHECK:          %B636C4 = "system.wait_msg"(%D146C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C4 = "dma.sys.sys_wait"(%B636C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B637C4, %msg49 = "system.send_msg"(%D147C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D148C4, %msg49 = "dma.sys.sys_send"(%B637C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D148C5, %msg49 = "@core_5"(%D146C5, %msg48) {
CHECK:          %B636C5 = "system.wait_msg"(%D146C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C5 = "dma.sys.sys_wait"(%B636C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B637C5, %msg49 = "system.send_msg"(%D147C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D148C5, %msg49 = "dma.sys.sys_send"(%B637C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D144C6, %msg49 = "@core_6"(%D142C6, %msg48) {
CHECK:          %B563C6 = "system.wait_msg"(%D142C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D143C6 = "dma.sys.sys_wait"(%B563C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B564C6, %msg49 = "system.send_msg"(%D143C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D144C6, %msg49 = "dma.sys.sys_send"(%B564C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D132C7, %msg49 = "@core_7"(%D130C7, %msg48) {
CHECK:          %B490C7 = "system.wait_msg"(%D130C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D131C7 = "dma.sys.sys_wait"(%B490C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B491C7, %msg49 = "system.send_msg"(%D131C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D132C7, %msg49 = "dma.sys.sys_send"(%B491C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D154C0, %msg48 = "@core_0"(%D152C0, %msg49) {
CHECK:          %B639C0 = "system.wait_msg"(%D152C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D153C0 = "dma.sys.sys_wait"(%B639C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B640C0, %msg48 = "system.send_msg"(%D153C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D154C0, %msg48 = "dma.sys.sys_send"(%B640C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D154C1, %msg48 = "@core_1"(%D152C1, %msg49) {
CHECK:          %B639C1 = "system.wait_msg"(%D152C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D153C1 = "dma.sys.sys_wait"(%B639C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B640C1, %msg48 = "system.send_msg"(%D153C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D154C1, %msg48 = "dma.sys.sys_send"(%B640C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D154C2, %msg48 = "@core_2"(%D152C2, %msg49) {
CHECK:          %B639C2 = "system.wait_msg"(%D152C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D153C2 = "dma.sys.sys_wait"(%B639C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B640C2, %msg48 = "system.send_msg"(%D153C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D154C2, %msg48 = "dma.sys.sys_send"(%B640C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D154C3, %msg48 = "@core_3"(%D152C3, %msg49) {
CHECK:          %B639C3 = "system.wait_msg"(%D152C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D153C3 = "dma.sys.sys_wait"(%B639C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B640C3, %msg48 = "system.send_msg"(%D153C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D154C3, %msg48 = "dma.sys.sys_send"(%B640C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D150C4, %msg48 = "@core_4"(%D148C4, %msg49) {
CHECK:          %B638C4 = "system.wait_msg"(%D148C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D149C4 = "dma.sys.sys_wait"(%B638C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B639C4, %msg48 = "system.send_msg"(%D149C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D150C4, %msg48 = "dma.sys.sys_send"(%B639C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D150C5, %msg48 = "@core_5"(%D148C5, %msg49) {
CHECK:          %B638C5 = "system.wait_msg"(%D148C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D149C5 = "dma.sys.sys_wait"(%B638C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B639C5, %msg48 = "system.send_msg"(%D149C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D150C5, %msg48 = "dma.sys.sys_send"(%B639C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C6, %msg48 = "@core_6"(%D144C6, %msg49) {
CHECK:          %B565C6 = "system.wait_msg"(%D144C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D145C6 = "dma.sys.sys_wait"(%B565C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B566C6, %msg48 = "system.send_msg"(%D145C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C6, %msg48 = "dma.sys.sys_send"(%B566C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D134C7, %msg48 = "@core_7"(%D132C7, %msg49) {
CHECK:          %B492C7 = "system.wait_msg"(%D132C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D133C7 = "dma.sys.sys_wait"(%B492C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B493C7, %msg48 = "system.send_msg"(%D133C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D134C7, %msg48 = "dma.sys.sys_send"(%B493C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D166C0, %msg49 = "@core_0"(%D154C0, %msg48) {
CHECK:          %B641C0 = "system.wait_msg"(%D154C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D155C0 = "dma.sys.sys_wait"(%B641C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D156C0 = "dma.tensor"(%L30.0x6980064000, %B641C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B642C0 = "tsbc.s_bc"(%R0.0x580, %D156C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B643C0 = "arith.sub"(%C0.0, %R0.0x3000, %D156C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B644C0 = "arith.max"(%R1.0x1200, %C-45408.0, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B645C0 = "arith.min"(%R1.0x1200, %C45408.0, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B646C0 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B647C0 = "arith.cast"(%R1.0x1000, %D156C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B648C0 = "arith.mul"(%R4, %C0.693359375, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B649C0 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B650C0 = "arith.cast"(%R4, %D156C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B651C0 = "arith.min"(%R1.0x1200, %C15, %D156C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B652C0 = "arith.max"(%R4, %C-15, %D156C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B653C0 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D156C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B654C0 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D156C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B655C0 = "arith.mul"(%R1.0x1200, %R4, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B656C0 = "arith.add"(%R4, %C1.0, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B657C0 = "arith.div"(%C1.0, %R1.0x1000, %D156C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B658C0 = "arith.mul"(%R4, %R0.0x3000, %D156C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D157C0 = "dma.tensor"(%L30.0x6980190000, %B641C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D158C0 = "dma.tensor"(%G1.0x61e000, %B641C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B659C0 = "arith.add"(%R3.0x200, %R4, %D158C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D159C0 = "dma.tensor"(%L30.0x6980000000, %B658C0) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D160C0 = "dma.tensor"(%G1.0x61f000, %B658C0) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B660C0 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D160C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D161C0 = "dma.tensor"(%G1.0x65f000, %B659C0) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B661C0 = "tsbc.s_bc"(%R0.0x580, %D161C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B662C0 = "arith.sub"(%C0.0, %R2.0x200, %D161C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B663C0 = "arith.max"(%R3.0x200, %C-45408.0, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B664C0 = "arith.min"(%R3.0x200, %C45408.0, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B665C0 = "arith.mul"(%R3.0x200, %C1.4423828125, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B666C0 = "arith.cast"(%R3, %D161C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B667C0 = "arith.mul"(%R1.0x1000, %C0.693359375, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B668C0 = "arith.sub"(%R3.0x200, %R3, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B669C0 = "arith.cast"(%R1.0x1000, %D161C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B670C0 = "arith.min"(%R3.0x200, %C15, %D161C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B671C0 = "arith.max"(%R1.0x1000, %C-15, %D161C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B672C0 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D161C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B673C0 = "sfu.taylor_4x"(%R3, %R3.0x400, %D161C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B674C0 = "arith.mul"(%R3.0x200, %R1.0x1000, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B675C0 = "arith.add"(%R1.0x1000, %C1.0, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B676C0 = "arith.div"(%C1.0, %R3, %D161C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B677C0 = "arith.mul"(%R1.0x1000, %R2.0x200, %D161C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D162C0 = "dma.tensor"(%G1.0x660000, %B660C0) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B678C0 = "arith.copy"(%R2, %D162C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B679C0 = "arith.copy"(%R1.0x1000, %D162C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B680C0 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D162C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D163C0 = "dma.tensor"(%G1.0x6e1000, %B679C0) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B681C0 = "tsbc.s_bc"(%R0.0x580, %D163C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B682C0 = "arith.sub"(%C0.0, %R2, %D163C0) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B683C0 = "arith.max"(%R1.0x1400, %C-45408.0, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B684C0 = "arith.min"(%R1.0x1400, %C45408.0, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B685C0 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B686C0 = "arith.cast"(%R1.0x1000, %D163C0) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B687C0 = "arith.mul"(%R0.0x3000, %C0.693359375, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B688C0 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B689C0 = "arith.cast"(%R0.0x3000, %D163C0) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B690C0 = "arith.min"(%R1.0x1400, %C15, %D163C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B691C0 = "arith.max"(%R0.0x3000, %C-15, %D163C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B692C0 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D163C0) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B693C0 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D163C0) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B694C0 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B695C0 = "arith.add"(%R0.0x3000, %C1.0, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B696C0 = "arith.div"(%C1.0, %R1.0x1000, %D163C0) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B697C0 = "arith.mul"(%R0.0x3000, %R2, %D163C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D164C0 = "dma.tensor"(%G1.0x6e0000, %B680C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B698C0 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D164C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B699C0 = "tsbc.s_bc"(%R0.0x580, %D164C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B700C0 = "arith.sub"(%C0.0, %R2, %D164C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B701C0 = "arith.max"(%R1.0x1200, %C-45408.0, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B702C0 = "arith.min"(%R1.0x1200, %C45408.0, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B703C0 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B704C0 = "arith.cast"(%R1.0x1000, %D164C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B705C0 = "arith.mul"(%R3, %C0.693359375, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B706C0 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B707C0 = "arith.cast"(%R3, %D164C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B708C0 = "arith.min"(%R1.0x1200, %C15, %D164C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B709C0 = "arith.max"(%R3, %C-15, %D164C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B710C0 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D164C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B711C0 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D164C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B712C0 = "arith.mul"(%R1.0x1200, %R3, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B713C0 = "arith.add"(%R3, %C1.0, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B714C0 = "arith.div"(%C1.0, %R1.0x1000, %D164C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B715C0 = "arith.mul"(%R3, %R2, %D164C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096000, %D165C0 = "dma.tensor"(%R3, %B715C0) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B716C0, %msg49 = "system.send_msg"(%D165C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D166C0, %msg49 = "dma.sys.sys_send"(%B716C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D166C1, %msg49 = "@core_1"(%D154C1, %msg48) {
CHECK:          %B641C1 = "system.wait_msg"(%D154C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D155C1 = "dma.sys.sys_wait"(%B641C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D156C1 = "dma.tensor"(%L30.0x6980064078, %B641C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B642C1 = "tsbc.s_bc"(%R0.0x580, %D156C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B643C1 = "arith.sub"(%C0.0, %R0.0x3000, %D156C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B644C1 = "arith.max"(%R1.0x1200, %C-45408.0, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B645C1 = "arith.min"(%R1.0x1200, %C45408.0, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B646C1 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B647C1 = "arith.cast"(%R1.0x1000, %D156C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B648C1 = "arith.mul"(%R4, %C0.693359375, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B649C1 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B650C1 = "arith.cast"(%R4, %D156C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B651C1 = "arith.min"(%R1.0x1200, %C15, %D156C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B652C1 = "arith.max"(%R4, %C-15, %D156C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B653C1 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D156C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B654C1 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D156C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B655C1 = "arith.mul"(%R1.0x1200, %R4, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B656C1 = "arith.add"(%R4, %C1.0, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B657C1 = "arith.div"(%C1.0, %R1.0x1000, %D156C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B658C1 = "arith.mul"(%R4, %R0.0x3000, %D156C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D157C1 = "dma.tensor"(%L30.0x6980190078, %B641C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D158C1 = "dma.tensor"(%G1.0x61e000, %B641C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B659C1 = "arith.add"(%R3.0x200, %R4, %D158C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D159C1 = "dma.tensor"(%L30.0x6980000078, %B658C1) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D160C1 = "dma.tensor"(%G1.0x61f000, %B658C1) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B660C1 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D160C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D161C1 = "dma.tensor"(%G1.0x65f000, %B659C1) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B661C1 = "tsbc.s_bc"(%R0.0x580, %D161C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B662C1 = "arith.sub"(%C0.0, %R2.0x200, %D161C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B663C1 = "arith.max"(%R3.0x200, %C-45408.0, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B664C1 = "arith.min"(%R3.0x200, %C45408.0, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B665C1 = "arith.mul"(%R3.0x200, %C1.4423828125, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B666C1 = "arith.cast"(%R3, %D161C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B667C1 = "arith.mul"(%R1.0x1000, %C0.693359375, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B668C1 = "arith.sub"(%R3.0x200, %R3, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B669C1 = "arith.cast"(%R1.0x1000, %D161C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B670C1 = "arith.min"(%R3.0x200, %C15, %D161C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B671C1 = "arith.max"(%R1.0x1000, %C-15, %D161C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B672C1 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D161C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B673C1 = "sfu.taylor_4x"(%R3, %R3.0x400, %D161C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B674C1 = "arith.mul"(%R3.0x200, %R1.0x1000, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B675C1 = "arith.add"(%R1.0x1000, %C1.0, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B676C1 = "arith.div"(%C1.0, %R3, %D161C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B677C1 = "arith.mul"(%R1.0x1000, %R2.0x200, %D161C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D162C1 = "dma.tensor"(%G1.0x660000, %B660C1) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B678C1 = "arith.copy"(%R2, %D162C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B679C1 = "arith.copy"(%R1.0x1000, %D162C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B680C1 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D162C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D163C1 = "dma.tensor"(%G1.0x6e1000, %B679C1) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B681C1 = "tsbc.s_bc"(%R0.0x580, %D163C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B682C1 = "arith.sub"(%C0.0, %R2, %D163C1) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B683C1 = "arith.max"(%R1.0x1400, %C-45408.0, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B684C1 = "arith.min"(%R1.0x1400, %C45408.0, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B685C1 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B686C1 = "arith.cast"(%R1.0x1000, %D163C1) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B687C1 = "arith.mul"(%R0.0x3000, %C0.693359375, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B688C1 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B689C1 = "arith.cast"(%R0.0x3000, %D163C1) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B690C1 = "arith.min"(%R1.0x1400, %C15, %D163C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B691C1 = "arith.max"(%R0.0x3000, %C-15, %D163C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B692C1 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D163C1) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B693C1 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D163C1) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B694C1 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B695C1 = "arith.add"(%R0.0x3000, %C1.0, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B696C1 = "arith.div"(%C1.0, %R1.0x1000, %D163C1) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B697C1 = "arith.mul"(%R0.0x3000, %R2, %D163C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D164C1 = "dma.tensor"(%G1.0x6e0000, %B680C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B698C1 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D164C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B699C1 = "tsbc.s_bc"(%R0.0x580, %D164C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B700C1 = "arith.sub"(%C0.0, %R2, %D164C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B701C1 = "arith.max"(%R1.0x1200, %C-45408.0, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B702C1 = "arith.min"(%R1.0x1200, %C45408.0, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B703C1 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B704C1 = "arith.cast"(%R1.0x1000, %D164C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B705C1 = "arith.mul"(%R3, %C0.693359375, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B706C1 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B707C1 = "arith.cast"(%R3, %D164C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B708C1 = "arith.min"(%R1.0x1200, %C15, %D164C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B709C1 = "arith.max"(%R3, %C-15, %D164C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B710C1 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D164C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B711C1 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D164C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B712C1 = "arith.mul"(%R1.0x1200, %R3, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B713C1 = "arith.add"(%R3, %C1.0, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B714C1 = "arith.div"(%C1.0, %R1.0x1000, %D164C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B715C1 = "arith.mul"(%R3, %R2, %D164C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096078, %D165C1 = "dma.tensor"(%R3, %B715C1) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B716C1, %msg49 = "system.send_msg"(%D165C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D166C1, %msg49 = "dma.sys.sys_send"(%B716C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D166C2, %msg49 = "@core_2"(%D154C2, %msg48) {
CHECK:          %B641C2 = "system.wait_msg"(%D154C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D155C2 = "dma.sys.sys_wait"(%B641C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D156C2 = "dma.tensor"(%L30.0x69800640f0, %B641C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B642C2 = "tsbc.s_bc"(%R0.0x580, %D156C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B643C2 = "arith.sub"(%C0.0, %R0.0x3000, %D156C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B644C2 = "arith.max"(%R1.0x1200, %C-45408.0, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B645C2 = "arith.min"(%R1.0x1200, %C45408.0, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B646C2 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B647C2 = "arith.cast"(%R1.0x1000, %D156C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B648C2 = "arith.mul"(%R4, %C0.693359375, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B649C2 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B650C2 = "arith.cast"(%R4, %D156C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B651C2 = "arith.min"(%R1.0x1200, %C15, %D156C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B652C2 = "arith.max"(%R4, %C-15, %D156C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B653C2 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D156C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B654C2 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D156C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B655C2 = "arith.mul"(%R1.0x1200, %R4, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B656C2 = "arith.add"(%R4, %C1.0, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B657C2 = "arith.div"(%C1.0, %R1.0x1000, %D156C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B658C2 = "arith.mul"(%R4, %R0.0x3000, %D156C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D157C2 = "dma.tensor"(%L30.0x69801900f0, %B641C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D158C2 = "dma.tensor"(%G1.0x61e000, %B641C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B659C2 = "arith.add"(%R3.0x200, %R4, %D158C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D159C2 = "dma.tensor"(%L30.0x69800000f0, %B658C2) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D160C2 = "dma.tensor"(%G1.0x61f000, %B658C2) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B660C2 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D160C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D161C2 = "dma.tensor"(%G1.0x65f000, %B659C2) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B661C2 = "tsbc.s_bc"(%R0.0x580, %D161C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B662C2 = "arith.sub"(%C0.0, %R2.0x200, %D161C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B663C2 = "arith.max"(%R3.0x200, %C-45408.0, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B664C2 = "arith.min"(%R3.0x200, %C45408.0, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B665C2 = "arith.mul"(%R3.0x200, %C1.4423828125, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B666C2 = "arith.cast"(%R3, %D161C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B667C2 = "arith.mul"(%R1.0x1000, %C0.693359375, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B668C2 = "arith.sub"(%R3.0x200, %R3, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B669C2 = "arith.cast"(%R1.0x1000, %D161C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B670C2 = "arith.min"(%R3.0x200, %C15, %D161C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B671C2 = "arith.max"(%R1.0x1000, %C-15, %D161C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B672C2 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D161C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B673C2 = "sfu.taylor_4x"(%R3, %R3.0x400, %D161C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B674C2 = "arith.mul"(%R3.0x200, %R1.0x1000, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B675C2 = "arith.add"(%R1.0x1000, %C1.0, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B676C2 = "arith.div"(%C1.0, %R3, %D161C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B677C2 = "arith.mul"(%R1.0x1000, %R2.0x200, %D161C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D162C2 = "dma.tensor"(%G1.0x660000, %B660C2) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B678C2 = "arith.copy"(%R2, %D162C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B679C2 = "arith.copy"(%R1.0x1000, %D162C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B680C2 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D162C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D163C2 = "dma.tensor"(%G1.0x6e1000, %B679C2) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B681C2 = "tsbc.s_bc"(%R0.0x580, %D163C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B682C2 = "arith.sub"(%C0.0, %R2, %D163C2) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B683C2 = "arith.max"(%R1.0x1400, %C-45408.0, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B684C2 = "arith.min"(%R1.0x1400, %C45408.0, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B685C2 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B686C2 = "arith.cast"(%R1.0x1000, %D163C2) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B687C2 = "arith.mul"(%R0.0x3000, %C0.693359375, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B688C2 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B689C2 = "arith.cast"(%R0.0x3000, %D163C2) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B690C2 = "arith.min"(%R1.0x1400, %C15, %D163C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B691C2 = "arith.max"(%R0.0x3000, %C-15, %D163C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B692C2 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D163C2) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B693C2 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D163C2) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B694C2 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B695C2 = "arith.add"(%R0.0x3000, %C1.0, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B696C2 = "arith.div"(%C1.0, %R1.0x1000, %D163C2) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B697C2 = "arith.mul"(%R0.0x3000, %R2, %D163C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D164C2 = "dma.tensor"(%G1.0x6e0000, %B680C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B698C2 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D164C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B699C2 = "tsbc.s_bc"(%R0.0x580, %D164C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B700C2 = "arith.sub"(%C0.0, %R2, %D164C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B701C2 = "arith.max"(%R1.0x1200, %C-45408.0, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B702C2 = "arith.min"(%R1.0x1200, %C45408.0, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B703C2 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B704C2 = "arith.cast"(%R1.0x1000, %D164C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B705C2 = "arith.mul"(%R3, %C0.693359375, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B706C2 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B707C2 = "arith.cast"(%R3, %D164C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B708C2 = "arith.min"(%R1.0x1200, %C15, %D164C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B709C2 = "arith.max"(%R3, %C-15, %D164C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B710C2 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D164C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B711C2 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D164C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B712C2 = "arith.mul"(%R1.0x1200, %R3, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B713C2 = "arith.add"(%R3, %C1.0, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B714C2 = "arith.div"(%C1.0, %R1.0x1000, %D164C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B715C2 = "arith.mul"(%R3, %R2, %D164C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800960f0, %D165C2 = "dma.tensor"(%R3, %B715C2) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B716C2, %msg49 = "system.send_msg"(%D165C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D166C2, %msg49 = "dma.sys.sys_send"(%B716C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D166C3, %msg49 = "@core_3"(%D154C3, %msg48) {
CHECK:          %B641C3 = "system.wait_msg"(%D154C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D155C3 = "dma.sys.sys_wait"(%B641C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D156C3 = "dma.tensor"(%L30.0x6980064168, %B641C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B642C3 = "tsbc.s_bc"(%R0.0x580, %D156C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B643C3 = "arith.sub"(%C0.0, %R0.0x3000, %D156C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B644C3 = "arith.max"(%R1.0x1200, %C-45408.0, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B645C3 = "arith.min"(%R1.0x1200, %C45408.0, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B646C3 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B647C3 = "arith.cast"(%R1.0x1000, %D156C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B648C3 = "arith.mul"(%R4, %C0.693359375, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B649C3 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B650C3 = "arith.cast"(%R4, %D156C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B651C3 = "arith.min"(%R1.0x1200, %C15, %D156C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B652C3 = "arith.max"(%R4, %C-15, %D156C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B653C3 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D156C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B654C3 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D156C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B655C3 = "arith.mul"(%R1.0x1200, %R4, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B656C3 = "arith.add"(%R4, %C1.0, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B657C3 = "arith.div"(%C1.0, %R1.0x1000, %D156C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B658C3 = "arith.mul"(%R4, %R0.0x3000, %D156C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D157C3 = "dma.tensor"(%L30.0x6980190168, %B641C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D158C3 = "dma.tensor"(%G1.0x61e000, %B641C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B659C3 = "arith.add"(%R3.0x200, %R4, %D158C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D159C3 = "dma.tensor"(%L30.0x6980000168, %B658C3) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D160C3 = "dma.tensor"(%G1.0x61f000, %B658C3) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B660C3 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D160C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D161C3 = "dma.tensor"(%G1.0x65f000, %B659C3) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B661C3 = "tsbc.s_bc"(%R0.0x580, %D161C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B662C3 = "arith.sub"(%C0.0, %R2.0x200, %D161C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B663C3 = "arith.max"(%R3.0x200, %C-45408.0, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B664C3 = "arith.min"(%R3.0x200, %C45408.0, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B665C3 = "arith.mul"(%R3.0x200, %C1.4423828125, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B666C3 = "arith.cast"(%R3, %D161C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B667C3 = "arith.mul"(%R1.0x1000, %C0.693359375, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B668C3 = "arith.sub"(%R3.0x200, %R3, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B669C3 = "arith.cast"(%R1.0x1000, %D161C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B670C3 = "arith.min"(%R3.0x200, %C15, %D161C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B671C3 = "arith.max"(%R1.0x1000, %C-15, %D161C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B672C3 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D161C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B673C3 = "sfu.taylor_4x"(%R3, %R3.0x400, %D161C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B674C3 = "arith.mul"(%R3.0x200, %R1.0x1000, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B675C3 = "arith.add"(%R1.0x1000, %C1.0, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B676C3 = "arith.div"(%C1.0, %R3, %D161C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B677C3 = "arith.mul"(%R1.0x1000, %R2.0x200, %D161C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D162C3 = "dma.tensor"(%G1.0x660000, %B660C3) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B678C3 = "arith.copy"(%R2, %D162C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B679C3 = "arith.copy"(%R1.0x1000, %D162C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B680C3 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D162C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D163C3 = "dma.tensor"(%G1.0x6e1000, %B679C3) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B681C3 = "tsbc.s_bc"(%R0.0x580, %D163C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B682C3 = "arith.sub"(%C0.0, %R2, %D163C3) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B683C3 = "arith.max"(%R1.0x1400, %C-45408.0, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B684C3 = "arith.min"(%R1.0x1400, %C45408.0, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B685C3 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B686C3 = "arith.cast"(%R1.0x1000, %D163C3) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B687C3 = "arith.mul"(%R0.0x3000, %C0.693359375, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B688C3 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B689C3 = "arith.cast"(%R0.0x3000, %D163C3) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B690C3 = "arith.min"(%R1.0x1400, %C15, %D163C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B691C3 = "arith.max"(%R0.0x3000, %C-15, %D163C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B692C3 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D163C3) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B693C3 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D163C3) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B694C3 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B695C3 = "arith.add"(%R0.0x3000, %C1.0, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B696C3 = "arith.div"(%C1.0, %R1.0x1000, %D163C3) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B697C3 = "arith.mul"(%R0.0x3000, %R2, %D163C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D164C3 = "dma.tensor"(%G1.0x6e0000, %B680C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B698C3 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D164C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B699C3 = "tsbc.s_bc"(%R0.0x580, %D164C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B700C3 = "arith.sub"(%C0.0, %R2, %D164C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B701C3 = "arith.max"(%R1.0x1200, %C-45408.0, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B702C3 = "arith.min"(%R1.0x1200, %C45408.0, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B703C3 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B704C3 = "arith.cast"(%R1.0x1000, %D164C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B705C3 = "arith.mul"(%R3, %C0.693359375, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B706C3 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B707C3 = "arith.cast"(%R3, %D164C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B708C3 = "arith.min"(%R1.0x1200, %C15, %D164C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B709C3 = "arith.max"(%R3, %C-15, %D164C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B710C3 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D164C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B711C3 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D164C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B712C3 = "arith.mul"(%R1.0x1200, %R3, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B713C3 = "arith.add"(%R3, %C1.0, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B714C3 = "arith.div"(%C1.0, %R1.0x1000, %D164C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B715C3 = "arith.mul"(%R3, %R2, %D164C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096168, %D165C3 = "dma.tensor"(%R3, %B715C3) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B716C3, %msg49 = "system.send_msg"(%D165C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D166C3, %msg49 = "dma.sys.sys_send"(%B716C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D162C4, %msg49 = "@core_4"(%D150C4, %msg48) {
CHECK:          %B640C4 = "system.wait_msg"(%D150C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D151C4 = "dma.sys.sys_wait"(%B640C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D152C4 = "dma.tensor"(%L30.0x69800641e0, %B640C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B641C4 = "tsbc.s_bc"(%R0.0x580, %D152C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B642C4 = "arith.sub"(%C0.0, %R0.0x3000, %D152C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B643C4 = "arith.max"(%R1.0x1200, %C-45408.0, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B644C4 = "arith.min"(%R1.0x1200, %C45408.0, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B645C4 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B646C4 = "arith.cast"(%R1.0x1000, %D152C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B647C4 = "arith.mul"(%R4, %C0.693359375, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B648C4 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B649C4 = "arith.cast"(%R4, %D152C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B650C4 = "arith.min"(%R1.0x1200, %C15, %D152C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B651C4 = "arith.max"(%R4, %C-15, %D152C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B652C4 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D152C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B653C4 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D152C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B654C4 = "arith.mul"(%R1.0x1200, %R4, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B655C4 = "arith.add"(%R4, %C1.0, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B656C4 = "arith.div"(%C1.0, %R1.0x1000, %D152C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B657C4 = "arith.mul"(%R4, %R0.0x3000, %D152C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D153C4 = "dma.tensor"(%L30.0x69801901e0, %B640C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D154C4 = "dma.tensor"(%G1.0x61e000, %B640C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B658C4 = "arith.add"(%R3.0x200, %R4, %D154C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D155C4 = "dma.tensor"(%L30.0x69800001e0, %B657C4) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D156C4 = "dma.tensor"(%G1.0x61f000, %B657C4) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B659C4 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D156C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D157C4 = "dma.tensor"(%G1.0x65f000, %B658C4) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B660C4 = "tsbc.s_bc"(%R0.0x580, %D157C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B661C4 = "arith.sub"(%C0.0, %R2.0x200, %D157C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B662C4 = "arith.max"(%R3.0x200, %C-45408.0, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B663C4 = "arith.min"(%R3.0x200, %C45408.0, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B664C4 = "arith.mul"(%R3.0x200, %C1.4423828125, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B665C4 = "arith.cast"(%R3, %D157C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B666C4 = "arith.mul"(%R1.0x1000, %C0.693359375, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B667C4 = "arith.sub"(%R3.0x200, %R3, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B668C4 = "arith.cast"(%R1.0x1000, %D157C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B669C4 = "arith.min"(%R3.0x200, %C15, %D157C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B670C4 = "arith.max"(%R1.0x1000, %C-15, %D157C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B671C4 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D157C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B672C4 = "sfu.taylor_4x"(%R3, %R3.0x400, %D157C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B673C4 = "arith.mul"(%R3.0x200, %R1.0x1000, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B674C4 = "arith.add"(%R1.0x1000, %C1.0, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B675C4 = "arith.div"(%C1.0, %R3, %D157C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B676C4 = "arith.mul"(%R1.0x1000, %R2.0x200, %D157C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D158C4 = "dma.tensor"(%G1.0x660000, %B659C4) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B677C4 = "arith.copy"(%R2, %D158C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B678C4 = "arith.copy"(%R1.0x1000, %D158C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B679C4 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D158C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D159C4 = "dma.tensor"(%G1.0x6e1000, %B678C4) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B680C4 = "tsbc.s_bc"(%R0.0x580, %D159C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B681C4 = "arith.sub"(%C0.0, %R2, %D159C4) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B682C4 = "arith.max"(%R1.0x1400, %C-45408.0, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B683C4 = "arith.min"(%R1.0x1400, %C45408.0, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B684C4 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B685C4 = "arith.cast"(%R1.0x1000, %D159C4) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B686C4 = "arith.mul"(%R0.0x3000, %C0.693359375, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B687C4 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B688C4 = "arith.cast"(%R0.0x3000, %D159C4) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B689C4 = "arith.min"(%R1.0x1400, %C15, %D159C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B690C4 = "arith.max"(%R0.0x3000, %C-15, %D159C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B691C4 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D159C4) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B692C4 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D159C4) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B693C4 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B694C4 = "arith.add"(%R0.0x3000, %C1.0, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B695C4 = "arith.div"(%C1.0, %R1.0x1000, %D159C4) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B696C4 = "arith.mul"(%R0.0x3000, %R2, %D159C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D160C4 = "dma.tensor"(%G1.0x6e0000, %B679C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B697C4 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D160C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B698C4 = "tsbc.s_bc"(%R0.0x580, %D160C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B699C4 = "arith.sub"(%C0.0, %R2, %D160C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B700C4 = "arith.max"(%R1.0x1200, %C-45408.0, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B701C4 = "arith.min"(%R1.0x1200, %C45408.0, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B702C4 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B703C4 = "arith.cast"(%R1.0x1000, %D160C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B704C4 = "arith.mul"(%R3, %C0.693359375, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B705C4 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B706C4 = "arith.cast"(%R3, %D160C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B707C4 = "arith.min"(%R1.0x1200, %C15, %D160C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B708C4 = "arith.max"(%R3, %C-15, %D160C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B709C4 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D160C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B710C4 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D160C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B711C4 = "arith.mul"(%R1.0x1200, %R3, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B712C4 = "arith.add"(%R3, %C1.0, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B713C4 = "arith.div"(%C1.0, %R1.0x1000, %D160C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B714C4 = "arith.mul"(%R3, %R2, %D160C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800961e0, %D161C4 = "dma.tensor"(%R3, %B714C4) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B715C4, %msg49 = "system.send_msg"(%D161C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D162C4, %msg49 = "dma.sys.sys_send"(%B715C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D162C5, %msg49 = "@core_5"(%D150C5, %msg48) {
CHECK:          %B640C5 = "system.wait_msg"(%D150C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D151C5 = "dma.sys.sys_wait"(%B640C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D152C5 = "dma.tensor"(%L30.0x6980064230, %B640C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B641C5 = "tsbc.s_bc"(%R0.0x580, %D152C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B642C5 = "arith.sub"(%C0.0, %R0.0x3000, %D152C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B643C5 = "arith.max"(%R1.0x1200, %C-45408.0, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B644C5 = "arith.min"(%R1.0x1200, %C45408.0, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B645C5 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B646C5 = "arith.cast"(%R1.0x1000, %D152C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B647C5 = "arith.mul"(%R4, %C0.693359375, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B648C5 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B649C5 = "arith.cast"(%R4, %D152C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B650C5 = "arith.min"(%R1.0x1200, %C15, %D152C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B651C5 = "arith.max"(%R4, %C-15, %D152C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B652C5 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D152C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B653C5 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D152C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B654C5 = "arith.mul"(%R1.0x1200, %R4, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B655C5 = "arith.add"(%R4, %C1.0, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B656C5 = "arith.div"(%C1.0, %R1.0x1000, %D152C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B657C5 = "arith.mul"(%R4, %R0.0x3000, %D152C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D153C5 = "dma.tensor"(%L30.0x6980190230, %B640C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D154C5 = "dma.tensor"(%G1.0x61e000, %B640C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B658C5 = "arith.add"(%R3.0x200, %R4, %D154C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D155C5 = "dma.tensor"(%L30.0x6980000230, %B657C5) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D156C5 = "dma.tensor"(%G1.0x61f000, %B657C5) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B659C5 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D156C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D157C5 = "dma.tensor"(%G1.0x65f000, %B658C5) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B660C5 = "tsbc.s_bc"(%R0.0x580, %D157C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B661C5 = "arith.sub"(%C0.0, %R2.0x200, %D157C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B662C5 = "arith.max"(%R3.0x200, %C-45408.0, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B663C5 = "arith.min"(%R3.0x200, %C45408.0, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B664C5 = "arith.mul"(%R3.0x200, %C1.4423828125, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B665C5 = "arith.cast"(%R3, %D157C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B666C5 = "arith.mul"(%R1.0x1000, %C0.693359375, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B667C5 = "arith.sub"(%R3.0x200, %R3, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B668C5 = "arith.cast"(%R1.0x1000, %D157C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B669C5 = "arith.min"(%R3.0x200, %C15, %D157C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B670C5 = "arith.max"(%R1.0x1000, %C-15, %D157C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B671C5 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D157C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B672C5 = "sfu.taylor_4x"(%R3, %R3.0x400, %D157C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B673C5 = "arith.mul"(%R3.0x200, %R1.0x1000, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B674C5 = "arith.add"(%R1.0x1000, %C1.0, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B675C5 = "arith.div"(%C1.0, %R3, %D157C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B676C5 = "arith.mul"(%R1.0x1000, %R2.0x200, %D157C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D158C5 = "dma.tensor"(%G1.0x660000, %B659C5) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B677C5 = "arith.copy"(%R2, %D158C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B678C5 = "arith.copy"(%R1.0x1000, %D158C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B679C5 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D158C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D159C5 = "dma.tensor"(%G1.0x6e1000, %B678C5) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B680C5 = "tsbc.s_bc"(%R0.0x580, %D159C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B681C5 = "arith.sub"(%C0.0, %R2, %D159C5) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B682C5 = "arith.max"(%R1.0x1400, %C-45408.0, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B683C5 = "arith.min"(%R1.0x1400, %C45408.0, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B684C5 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B685C5 = "arith.cast"(%R1.0x1000, %D159C5) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B686C5 = "arith.mul"(%R0.0x3000, %C0.693359375, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B687C5 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B688C5 = "arith.cast"(%R0.0x3000, %D159C5) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B689C5 = "arith.min"(%R1.0x1400, %C15, %D159C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B690C5 = "arith.max"(%R0.0x3000, %C-15, %D159C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B691C5 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D159C5) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B692C5 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D159C5) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B693C5 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B694C5 = "arith.add"(%R0.0x3000, %C1.0, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B695C5 = "arith.div"(%C1.0, %R1.0x1000, %D159C5) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B696C5 = "arith.mul"(%R0.0x3000, %R2, %D159C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D160C5 = "dma.tensor"(%G1.0x6e0000, %B679C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B697C5 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D160C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B698C5 = "tsbc.s_bc"(%R0.0x580, %D160C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B699C5 = "arith.sub"(%C0.0, %R2, %D160C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B700C5 = "arith.max"(%R1.0x1200, %C-45408.0, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B701C5 = "arith.min"(%R1.0x1200, %C45408.0, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B702C5 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B703C5 = "arith.cast"(%R1.0x1000, %D160C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B704C5 = "arith.mul"(%R3, %C0.693359375, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B705C5 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B706C5 = "arith.cast"(%R3, %D160C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B707C5 = "arith.min"(%R1.0x1200, %C15, %D160C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B708C5 = "arith.max"(%R3, %C-15, %D160C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B709C5 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D160C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B710C5 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D160C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B711C5 = "arith.mul"(%R1.0x1200, %R3, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B712C5 = "arith.add"(%R3, %C1.0, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B713C5 = "arith.div"(%C1.0, %R1.0x1000, %D160C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B714C5 = "arith.mul"(%R3, %R2, %D160C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096230, %D161C5 = "dma.tensor"(%R3, %B714C5) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B715C5, %msg49 = "system.send_msg"(%D161C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D162C5, %msg49 = "dma.sys.sys_send"(%B715C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D158C6, %msg49 = "@core_6"(%D146C6, %msg48) {
CHECK:          %B567C6 = "system.wait_msg"(%D146C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C6 = "dma.sys.sys_wait"(%B567C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D148C6 = "dma.tensor"(%L30.0x6980064280, %B567C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B568C6 = "tsbc.s_bc"(%R0.0x580, %D148C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B569C6 = "arith.sub"(%C0.0, %R0.0x3000, %D148C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B570C6 = "arith.max"(%R1.0x1200, %C-45408.0, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B571C6 = "arith.min"(%R1.0x1200, %C45408.0, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B572C6 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B573C6 = "arith.cast"(%R1.0x1000, %D148C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B574C6 = "arith.mul"(%R4, %C0.693359375, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B575C6 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B576C6 = "arith.cast"(%R4, %D148C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B577C6 = "arith.min"(%R1.0x1200, %C15, %D148C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B578C6 = "arith.max"(%R4, %C-15, %D148C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B579C6 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D148C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B580C6 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D148C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B581C6 = "arith.mul"(%R1.0x1200, %R4, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B582C6 = "arith.add"(%R4, %C1.0, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B583C6 = "arith.div"(%C1.0, %R1.0x1000, %D148C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B584C6 = "arith.mul"(%R4, %R0.0x3000, %D148C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D149C6 = "dma.tensor"(%L30.0x6980190280, %B567C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D150C6 = "dma.tensor"(%G1.0x61e000, %B567C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B585C6 = "arith.add"(%R3.0x200, %R4, %D150C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D151C6 = "dma.tensor"(%L30.0x6980000280, %B584C6) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D152C6 = "dma.tensor"(%G1.0x61f000, %B584C6) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B586C6 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D152C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D153C6 = "dma.tensor"(%G1.0x65f000, %B585C6) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B587C6 = "tsbc.s_bc"(%R0.0x580, %D153C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B588C6 = "arith.sub"(%C0.0, %R2.0x200, %D153C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B589C6 = "arith.max"(%R3.0x200, %C-45408.0, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B590C6 = "arith.min"(%R3.0x200, %C45408.0, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B591C6 = "arith.mul"(%R3.0x200, %C1.4423828125, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B592C6 = "arith.cast"(%R3, %D153C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B593C6 = "arith.mul"(%R1.0x1000, %C0.693359375, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B594C6 = "arith.sub"(%R3.0x200, %R3, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B595C6 = "arith.cast"(%R1.0x1000, %D153C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B596C6 = "arith.min"(%R3.0x200, %C15, %D153C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B597C6 = "arith.max"(%R1.0x1000, %C-15, %D153C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B598C6 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D153C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B599C6 = "sfu.taylor_4x"(%R3, %R3.0x400, %D153C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B600C6 = "arith.mul"(%R3.0x200, %R1.0x1000, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B601C6 = "arith.add"(%R1.0x1000, %C1.0, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B602C6 = "arith.div"(%C1.0, %R3, %D153C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B603C6 = "arith.mul"(%R1.0x1000, %R2.0x200, %D153C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D154C6 = "dma.tensor"(%G1.0x660000, %B586C6) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B604C6 = "arith.copy"(%R2, %D154C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B605C6 = "arith.copy"(%R1.0x1000, %D154C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B606C6 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D154C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D155C6 = "dma.tensor"(%G1.0x6e1000, %B605C6) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B607C6 = "tsbc.s_bc"(%R0.0x580, %D155C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B608C6 = "arith.sub"(%C0.0, %R2, %D155C6) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B609C6 = "arith.max"(%R1.0x1400, %C-45408.0, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B610C6 = "arith.min"(%R1.0x1400, %C45408.0, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B611C6 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B612C6 = "arith.cast"(%R1.0x1000, %D155C6) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B613C6 = "arith.mul"(%R0.0x3000, %C0.693359375, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B614C6 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B615C6 = "arith.cast"(%R0.0x3000, %D155C6) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B616C6 = "arith.min"(%R1.0x1400, %C15, %D155C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B617C6 = "arith.max"(%R0.0x3000, %C-15, %D155C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B618C6 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D155C6) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B619C6 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D155C6) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B620C6 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B621C6 = "arith.add"(%R0.0x3000, %C1.0, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B622C6 = "arith.div"(%C1.0, %R1.0x1000, %D155C6) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B623C6 = "arith.mul"(%R0.0x3000, %R2, %D155C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D156C6 = "dma.tensor"(%G1.0x6e0000, %B606C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B624C6 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D156C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B625C6 = "tsbc.s_bc"(%R0.0x580, %D156C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B626C6 = "arith.sub"(%C0.0, %R2, %D156C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B627C6 = "arith.max"(%R1.0x1200, %C-45408.0, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B628C6 = "arith.min"(%R1.0x1200, %C45408.0, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B629C6 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B630C6 = "arith.cast"(%R1.0x1000, %D156C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B631C6 = "arith.mul"(%R3, %C0.693359375, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B632C6 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B633C6 = "arith.cast"(%R3, %D156C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B634C6 = "arith.min"(%R1.0x1200, %C15, %D156C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B635C6 = "arith.max"(%R3, %C-15, %D156C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B636C6 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D156C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B637C6 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D156C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B638C6 = "arith.mul"(%R1.0x1200, %R3, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B639C6 = "arith.add"(%R3, %C1.0, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B640C6 = "arith.div"(%C1.0, %R1.0x1000, %D156C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B641C6 = "arith.mul"(%R3, %R2, %D156C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980096280, %D157C6 = "dma.tensor"(%R3, %B641C6) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B642C6, %msg49 = "system.send_msg"(%D157C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D158C6, %msg49 = "dma.sys.sys_send"(%B642C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D146C7, %msg49 = "@core_7"(%D134C7, %msg48) {
CHECK:          %B494C7 = "system.wait_msg"(%D134C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D135C7 = "dma.sys.sys_wait"(%B494C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0.0x3000, %D136C7 = "dma.tensor"(%L30.0x69800642d0, %B494C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B495C7 = "tsbc.s_bc"(%R0.0x580, %D136C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B496C7 = "arith.sub"(%C0.0, %R0.0x3000, %D136C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B497C7 = "arith.max"(%R1.0x1200, %C-45408.0, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B498C7 = "arith.min"(%R1.0x1200, %C45408.0, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B499C7 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B500C7 = "arith.cast"(%R1.0x1000, %D136C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B501C7 = "arith.mul"(%R4, %C0.693359375, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B502C7 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B503C7 = "arith.cast"(%R4, %D136C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B504C7 = "arith.min"(%R1.0x1200, %C15, %D136C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B505C7 = "arith.max"(%R4, %C-15, %D136C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B506C7 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D136C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B507C7 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D136C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B508C7 = "arith.mul"(%R1.0x1200, %R4, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B509C7 = "arith.add"(%R4, %C1.0, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B510C7 = "arith.div"(%C1.0, %R1.0x1000, %D136C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B511C7 = "arith.mul"(%R4, %R0.0x3000, %D136C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %D137C7 = "dma.tensor"(%L30.0x69801902d0, %B494C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D138C7 = "dma.tensor"(%G1.0x61e000, %B494C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B512C7 = "arith.add"(%R3.0x200, %R4, %D138C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [0, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %D139C7 = "dma.tensor"(%L30.0x69800002d0, %B511C7) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x2000, %D140C7 = "dma.tensor"(%G1.0x61f000, %B511C7) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x200, %B513C7 = "conv.normal"(%R1.0x1000, %R0.0x2000, %R5, %C0.0, %D140C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4.0x200, %D141C7 = "dma.tensor"(%G1.0x65f000, %B512C7) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B514C7 = "tsbc.s_bc"(%R0.0x580, %D141C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B515C7 = "arith.sub"(%C0.0, %R2.0x200, %D141C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B516C7 = "arith.max"(%R3.0x200, %C-45408.0, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B517C7 = "arith.min"(%R3.0x200, %C45408.0, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B518C7 = "arith.mul"(%R3.0x200, %C1.4423828125, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B519C7 = "arith.cast"(%R3, %D141C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B520C7 = "arith.mul"(%R1.0x1000, %C0.693359375, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B521C7 = "arith.sub"(%R3.0x200, %R3, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B522C7 = "arith.cast"(%R1.0x1000, %D141C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B523C7 = "arith.min"(%R3.0x200, %C15, %D141C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B524C7 = "arith.max"(%R1.0x1000, %C-15, %D141C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B525C7 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D141C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B526C7 = "sfu.taylor_4x"(%R3, %R3.0x400, %D141C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B527C7 = "arith.mul"(%R3.0x200, %R1.0x1000, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B528C7 = "arith.add"(%R1.0x1000, %C1.0, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B529C7 = "arith.div"(%C1.0, %R3, %D141C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B530C7 = "arith.mul"(%R1.0x1000, %R2.0x200, %D141C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R0, %D142C7 = "dma.tensor"(%G1.0x660000, %B513C7) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B531C7 = "arith.copy"(%R2, %D142C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B532C7 = "arith.copy"(%R1.0x1000, %D142C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B533C7 = "conv.normal"(%R3, %R0, %R4.0x200, %C0.0, %D142C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D143C7 = "dma.tensor"(%G1.0x6e1000, %B532C7) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1800, %B534C7 = "tsbc.s_bc"(%R0.0x580, %D143C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1400, %B535C7 = "arith.sub"(%C0.0, %R2, %D143C7) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B536C7 = "arith.max"(%R1.0x1400, %C-45408.0, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B537C7 = "arith.min"(%R1.0x1400, %C45408.0, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B538C7 = "arith.mul"(%R1.0x1400, %C1.4423828125, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B539C7 = "arith.cast"(%R1.0x1000, %D143C7) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B540C7 = "arith.mul"(%R0.0x3000, %C0.693359375, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B541C7 = "arith.sub"(%R1.0x1400, %R1.0x1000, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B542C7 = "arith.cast"(%R0.0x3000, %D143C7) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B543C7 = "arith.min"(%R1.0x1400, %C15, %D143C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B544C7 = "arith.max"(%R0.0x3000, %C-15, %D143C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B545C7 = "arith.add_satu"(%R1.0x1400, %C15, %C10, %D143C7) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B546C7 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1800, %D143C7) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B547C7 = "arith.mul"(%R1.0x1400, %R0.0x3000, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B548C7 = "arith.add"(%R0.0x3000, %C1.0, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B549C7 = "arith.div"(%C1.0, %R1.0x1000, %D143C7) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R0.0x3000, %B550C7 = "arith.mul"(%R0.0x3000, %R2, %D143C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x440, %D144C7 = "dma.tensor"(%G1.0x6e0000, %B533C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R2, %B551C7 = "conv.normal"(%R0.0x3000, %R1, %R3.0x440, %C0.0, %D144C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1400, %B552C7 = "tsbc.s_bc"(%R0.0x580, %D144C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1200, %B553C7 = "arith.sub"(%C0.0, %R2, %D144C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B554C7 = "arith.max"(%R1.0x1200, %C-45408.0, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B555C7 = "arith.min"(%R1.0x1200, %C45408.0, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B556C7 = "arith.mul"(%R1.0x1200, %C1.4423828125, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B557C7 = "arith.cast"(%R1.0x1000, %D144C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B558C7 = "arith.mul"(%R3, %C0.693359375, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B559C7 = "arith.sub"(%R1.0x1200, %R1.0x1000, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B560C7 = "arith.cast"(%R3, %D144C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B561C7 = "arith.min"(%R1.0x1200, %C15, %D144C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B562C7 = "arith.max"(%R3, %C-15, %D144C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B563C7 = "arith.add_satu"(%R1.0x1200, %C15, %C10, %D144C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B564C7 = "sfu.taylor_4x"(%R1.0x1000, %R1.0x1400, %D144C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B565C7 = "arith.mul"(%R1.0x1200, %R3, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B566C7 = "arith.add"(%R3, %C1.0, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B567C7 = "arith.div"(%C1.0, %R1.0x1000, %D144C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B568C7 = "arith.mul"(%R3, %R2, %D144C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800962d0, %D145C7 = "dma.tensor"(%R3, %B568C7) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B569C7, %msg49 = "system.send_msg"(%D145C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D146C7, %msg49 = "dma.sys.sys_send"(%B569C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D168C0, %msg48 = "@core_0"(%D166C0, %msg49) {
CHECK:          %B717C0 = "system.wait_msg"(%D166C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D167C0 = "dma.sys.sys_wait"(%B717C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B718C0, %msg48 = "system.send_msg"(%D167C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D168C0, %msg48 = "dma.sys.sys_send"(%B718C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D168C1, %msg48 = "@core_1"(%D166C1, %msg49) {
CHECK:          %B717C1 = "system.wait_msg"(%D166C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D167C1 = "dma.sys.sys_wait"(%B717C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B718C1, %msg48 = "system.send_msg"(%D167C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D168C1, %msg48 = "dma.sys.sys_send"(%B718C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D168C2, %msg48 = "@core_2"(%D166C2, %msg49) {
CHECK:          %B717C2 = "system.wait_msg"(%D166C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D167C2 = "dma.sys.sys_wait"(%B717C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B718C2, %msg48 = "system.send_msg"(%D167C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D168C2, %msg48 = "dma.sys.sys_send"(%B718C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D168C3, %msg48 = "@core_3"(%D166C3, %msg49) {
CHECK:          %B717C3 = "system.wait_msg"(%D166C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D167C3 = "dma.sys.sys_wait"(%B717C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B718C3, %msg48 = "system.send_msg"(%D167C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D168C3, %msg48 = "dma.sys.sys_send"(%B718C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D164C4, %msg48 = "@core_4"(%D162C4, %msg49) {
CHECK:          %B716C4 = "system.wait_msg"(%D162C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D163C4 = "dma.sys.sys_wait"(%B716C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B717C4, %msg48 = "system.send_msg"(%D163C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D164C4, %msg48 = "dma.sys.sys_send"(%B717C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D164C5, %msg48 = "@core_5"(%D162C5, %msg49) {
CHECK:          %B716C5 = "system.wait_msg"(%D162C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D163C5 = "dma.sys.sys_wait"(%B716C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B717C5, %msg48 = "system.send_msg"(%D163C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D164C5, %msg48 = "dma.sys.sys_send"(%B717C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D160C6, %msg48 = "@core_6"(%D158C6, %msg49) {
CHECK:          %B643C6 = "system.wait_msg"(%D158C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D159C6 = "dma.sys.sys_wait"(%B643C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B644C6, %msg48 = "system.send_msg"(%D159C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D160C6, %msg48 = "dma.sys.sys_send"(%B644C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D148C7, %msg48 = "@core_7"(%D146C7, %msg49) {
CHECK:          %B570C7 = "system.wait_msg"(%D146C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D147C7 = "dma.sys.sys_wait"(%B570C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B571C7, %msg48 = "system.send_msg"(%D147C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D148C7, %msg48 = "dma.sys.sys_send"(%B571C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D172C0, %msg49 = "@core_0"(%D168C0, %msg48) {
CHECK:          %B719C0 = "system.wait_msg"(%D168C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D169C0 = "dma.sys.sys_wait"(%B719C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D170C0 = "dma.tensor"(%L30.0x6980096000, %B719C0) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B720C0 = "pord.maxpooling"(%R0, %C-65504.0, %D170C0) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980064000, %D171C0 = "dma.tensor"(%R10, %B720C0) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B721C0, %msg49 = "system.send_msg"(%D171C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D172C0, %msg49 = "dma.sys.sys_send"(%B721C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D172C1, %msg49 = "@core_1"(%D168C1, %msg48) {
CHECK:          %B719C1 = "system.wait_msg"(%D168C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D169C1 = "dma.sys.sys_wait"(%B719C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D170C1 = "dma.tensor"(%L30.0x698009c400, %B719C1) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B720C1 = "pord.maxpooling"(%R0, %C-65504.0, %D170C1) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698006a400, %D171C1 = "dma.tensor"(%R10, %B720C1) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B721C1, %msg49 = "system.send_msg"(%D171C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D172C1, %msg49 = "dma.sys.sys_send"(%B721C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D172C2, %msg49 = "@core_2"(%D168C2, %msg48) {
CHECK:          %B719C2 = "system.wait_msg"(%D168C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D169C2 = "dma.sys.sys_wait"(%B719C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D170C2 = "dma.tensor"(%L30.0x69800a2800, %B719C2) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B720C2 = "pord.maxpooling"(%R0, %C-65504.0, %D170C2) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980070800, %D171C2 = "dma.tensor"(%R10, %B720C2) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B721C2, %msg49 = "system.send_msg"(%D171C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D172C2, %msg49 = "dma.sys.sys_send"(%B721C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D172C3, %msg49 = "@core_3"(%D168C3, %msg48) {
CHECK:          %B719C3 = "system.wait_msg"(%D168C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D169C3 = "dma.sys.sys_wait"(%B719C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D170C3 = "dma.tensor"(%L30.0x69800a8c00, %B719C3) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B720C3 = "pord.maxpooling"(%R0, %C-65504.0, %D170C3) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980076c00, %D171C3 = "dma.tensor"(%R10, %B720C3) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B721C3, %msg49 = "system.send_msg"(%D171C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D172C3, %msg49 = "dma.sys.sys_send"(%B721C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D168C4, %msg49 = "@core_4"(%D164C4, %msg48) {
CHECK:          %B718C4 = "system.wait_msg"(%D164C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D165C4 = "dma.sys.sys_wait"(%B718C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D166C4 = "dma.tensor"(%L30.0x69800af000, %B718C4) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B719C4 = "pord.maxpooling"(%R0, %C-65504.0, %D166C4) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698007d000, %D167C4 = "dma.tensor"(%R10, %B719C4) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B720C4, %msg49 = "system.send_msg"(%D167C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D168C4, %msg49 = "dma.sys.sys_send"(%B720C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D168C5, %msg49 = "@core_5"(%D164C5, %msg48) {
CHECK:          %B718C5 = "system.wait_msg"(%D164C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D165C5 = "dma.sys.sys_wait"(%B718C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D166C5 = "dma.tensor"(%L30.0x69800b5400, %B718C5) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B719C5 = "pord.maxpooling"(%R0, %C-65504.0, %D166C5) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980083400, %D167C5 = "dma.tensor"(%R10, %B719C5) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B720C5, %msg49 = "system.send_msg"(%D167C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D168C5, %msg49 = "dma.sys.sys_send"(%B720C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D164C6, %msg49 = "@core_6"(%D160C6, %msg48) {
CHECK:          %B645C6 = "system.wait_msg"(%D160C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D161C6 = "dma.sys.sys_wait"(%B645C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D162C6 = "dma.tensor"(%L30.0x69800bb800, %B645C6) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B646C6 = "pord.maxpooling"(%R0, %C-65504.0, %D162C6) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980089800, %D163C6 = "dma.tensor"(%R10, %B646C6) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B647C6, %msg49 = "system.send_msg"(%D163C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D164C6, %msg49 = "dma.sys.sys_send"(%B647C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D152C7, %msg49 = "@core_7"(%D148C7, %msg48) {
CHECK:          %B572C7 = "system.wait_msg"(%D148C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D149C7 = "dma.sys.sys_wait"(%B572C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D150C7 = "dma.tensor"(%L30.0x69800c1c00, %B572C7) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B573C7 = "pord.maxpooling"(%R0, %C-65504.0, %D150C7) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698008fc00, %D151C7 = "dma.tensor"(%R10, %B573C7) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B574C7, %msg49 = "system.send_msg"(%D151C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D152C7, %msg49 = "dma.sys.sys_send"(%B574C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D174C0, %msg48 = "@core_0"(%D172C0, %msg49) {
CHECK:          %B722C0 = "system.wait_msg"(%D172C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D173C0 = "dma.sys.sys_wait"(%B722C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B723C0, %msg48 = "system.send_msg"(%D173C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D174C0, %msg48 = "dma.sys.sys_send"(%B723C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D174C1, %msg48 = "@core_1"(%D172C1, %msg49) {
CHECK:          %B722C1 = "system.wait_msg"(%D172C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D173C1 = "dma.sys.sys_wait"(%B722C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B723C1, %msg48 = "system.send_msg"(%D173C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D174C1, %msg48 = "dma.sys.sys_send"(%B723C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D174C2, %msg48 = "@core_2"(%D172C2, %msg49) {
CHECK:          %B722C2 = "system.wait_msg"(%D172C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D173C2 = "dma.sys.sys_wait"(%B722C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B723C2, %msg48 = "system.send_msg"(%D173C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D174C2, %msg48 = "dma.sys.sys_send"(%B723C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D174C3, %msg48 = "@core_3"(%D172C3, %msg49) {
CHECK:          %B722C3 = "system.wait_msg"(%D172C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D173C3 = "dma.sys.sys_wait"(%B722C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B723C3, %msg48 = "system.send_msg"(%D173C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D174C3, %msg48 = "dma.sys.sys_send"(%B723C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D170C4, %msg48 = "@core_4"(%D168C4, %msg49) {
CHECK:          %B721C4 = "system.wait_msg"(%D168C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D169C4 = "dma.sys.sys_wait"(%B721C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B722C4, %msg48 = "system.send_msg"(%D169C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D170C4, %msg48 = "dma.sys.sys_send"(%B722C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D170C5, %msg48 = "@core_5"(%D168C5, %msg49) {
CHECK:          %B721C5 = "system.wait_msg"(%D168C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D169C5 = "dma.sys.sys_wait"(%B721C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B722C5, %msg48 = "system.send_msg"(%D169C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D170C5, %msg48 = "dma.sys.sys_send"(%B722C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D166C6, %msg48 = "@core_6"(%D164C6, %msg49) {
CHECK:          %B648C6 = "system.wait_msg"(%D164C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D165C6 = "dma.sys.sys_wait"(%B648C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B649C6, %msg48 = "system.send_msg"(%D165C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D166C6, %msg48 = "dma.sys.sys_send"(%B649C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D154C7, %msg48 = "@core_7"(%D152C7, %msg49) {
CHECK:          %B575C7 = "system.wait_msg"(%D152C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D153C7 = "dma.sys.sys_wait"(%B575C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B576C7, %msg48 = "system.send_msg"(%D153C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D154C7, %msg48 = "dma.sys.sys_send"(%B576C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D178C0, %msg49 = "@core_0"(%D174C0, %msg48) {
CHECK:          %B724C0 = "system.wait_msg"(%D174C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D175C0 = "dma.sys.sys_wait"(%B724C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D176C0 = "dma.tensor"(%L30.0x6980064000, %B724C0) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B725C0 = "pord.maxpooling"(%R0, %C-65504.0, %D176C0) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980032000, %D177C0 = "dma.tensor"(%R10, %B725C0) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B726C0, %msg49 = "system.send_msg"(%D177C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D178C0, %msg49 = "dma.sys.sys_send"(%B726C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D178C1, %msg49 = "@core_1"(%D174C1, %msg48) {
CHECK:          %B724C1 = "system.wait_msg"(%D174C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D175C1 = "dma.sys.sys_wait"(%B724C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D176C1 = "dma.tensor"(%L30.0x698006a400, %B724C1) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B725C1 = "pord.maxpooling"(%R0, %C-65504.0, %D176C1) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980038400, %D177C1 = "dma.tensor"(%R10, %B725C1) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B726C1, %msg49 = "system.send_msg"(%D177C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D178C1, %msg49 = "dma.sys.sys_send"(%B726C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D178C2, %msg49 = "@core_2"(%D174C2, %msg48) {
CHECK:          %B724C2 = "system.wait_msg"(%D174C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D175C2 = "dma.sys.sys_wait"(%B724C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D176C2 = "dma.tensor"(%L30.0x6980070800, %B724C2) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B725C2 = "pord.maxpooling"(%R0, %C-65504.0, %D176C2) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698003e800, %D177C2 = "dma.tensor"(%R10, %B725C2) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B726C2, %msg49 = "system.send_msg"(%D177C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D178C2, %msg49 = "dma.sys.sys_send"(%B726C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D178C3, %msg49 = "@core_3"(%D174C3, %msg48) {
CHECK:          %B724C3 = "system.wait_msg"(%D174C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D175C3 = "dma.sys.sys_wait"(%B724C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D176C3 = "dma.tensor"(%L30.0x6980076c00, %B724C3) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B725C3 = "pord.maxpooling"(%R0, %C-65504.0, %D176C3) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980044c00, %D177C3 = "dma.tensor"(%R10, %B725C3) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B726C3, %msg49 = "system.send_msg"(%D177C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D178C3, %msg49 = "dma.sys.sys_send"(%B726C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D174C4, %msg49 = "@core_4"(%D170C4, %msg48) {
CHECK:          %B723C4 = "system.wait_msg"(%D170C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D171C4 = "dma.sys.sys_wait"(%B723C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D172C4 = "dma.tensor"(%L30.0x698007d000, %B723C4) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B724C4 = "pord.maxpooling"(%R0, %C-65504.0, %D172C4) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698004b000, %D173C4 = "dma.tensor"(%R10, %B724C4) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B725C4, %msg49 = "system.send_msg"(%D173C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D174C4, %msg49 = "dma.sys.sys_send"(%B725C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D174C5, %msg49 = "@core_5"(%D170C5, %msg48) {
CHECK:          %B723C5 = "system.wait_msg"(%D170C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D171C5 = "dma.sys.sys_wait"(%B723C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D172C5 = "dma.tensor"(%L30.0x6980083400, %B723C5) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B724C5 = "pord.maxpooling"(%R0, %C-65504.0, %D172C5) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980051400, %D173C5 = "dma.tensor"(%R10, %B724C5) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B725C5, %msg49 = "system.send_msg"(%D173C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D174C5, %msg49 = "dma.sys.sys_send"(%B725C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D170C6, %msg49 = "@core_6"(%D166C6, %msg48) {
CHECK:          %B650C6 = "system.wait_msg"(%D166C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D167C6 = "dma.sys.sys_wait"(%B650C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D168C6 = "dma.tensor"(%L30.0x6980089800, %B650C6) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B651C6 = "pord.maxpooling"(%R0, %C-65504.0, %D168C6) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980057800, %D169C6 = "dma.tensor"(%R10, %B651C6) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B652C6, %msg49 = "system.send_msg"(%D169C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D170C6, %msg49 = "dma.sys.sys_send"(%B652C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D158C7, %msg49 = "@core_7"(%D154C7, %msg48) {
CHECK:          %B577C7 = "system.wait_msg"(%D154C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D155C7 = "dma.sys.sys_wait"(%B577C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D156C7 = "dma.tensor"(%L30.0x698008fc00, %B577C7) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B578C7 = "pord.maxpooling"(%R0, %C-65504.0, %D156C7) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698005dc00, %D157C7 = "dma.tensor"(%R10, %B578C7) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B579C7, %msg49 = "system.send_msg"(%D157C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D158C7, %msg49 = "dma.sys.sys_send"(%B579C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D180C0, %msg48 = "@core_0"(%D178C0, %msg49) {
CHECK:          %B727C0 = "system.wait_msg"(%D178C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D179C0 = "dma.sys.sys_wait"(%B727C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B728C0, %msg48 = "system.send_msg"(%D179C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D180C0, %msg48 = "dma.sys.sys_send"(%B728C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D180C1, %msg48 = "@core_1"(%D178C1, %msg49) {
CHECK:          %B727C1 = "system.wait_msg"(%D178C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D179C1 = "dma.sys.sys_wait"(%B727C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B728C1, %msg48 = "system.send_msg"(%D179C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D180C1, %msg48 = "dma.sys.sys_send"(%B728C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D180C2, %msg48 = "@core_2"(%D178C2, %msg49) {
CHECK:          %B727C2 = "system.wait_msg"(%D178C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D179C2 = "dma.sys.sys_wait"(%B727C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B728C2, %msg48 = "system.send_msg"(%D179C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D180C2, %msg48 = "dma.sys.sys_send"(%B728C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D180C3, %msg48 = "@core_3"(%D178C3, %msg49) {
CHECK:          %B727C3 = "system.wait_msg"(%D178C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D179C3 = "dma.sys.sys_wait"(%B727C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B728C3, %msg48 = "system.send_msg"(%D179C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D180C3, %msg48 = "dma.sys.sys_send"(%B728C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D176C4, %msg48 = "@core_4"(%D174C4, %msg49) {
CHECK:          %B726C4 = "system.wait_msg"(%D174C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D175C4 = "dma.sys.sys_wait"(%B726C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B727C4, %msg48 = "system.send_msg"(%D175C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D176C4, %msg48 = "dma.sys.sys_send"(%B727C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D176C5, %msg48 = "@core_5"(%D174C5, %msg49) {
CHECK:          %B726C5 = "system.wait_msg"(%D174C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D175C5 = "dma.sys.sys_wait"(%B726C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B727C5, %msg48 = "system.send_msg"(%D175C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D176C5, %msg48 = "dma.sys.sys_send"(%B727C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D172C6, %msg48 = "@core_6"(%D170C6, %msg49) {
CHECK:          %B653C6 = "system.wait_msg"(%D170C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D171C6 = "dma.sys.sys_wait"(%B653C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B654C6, %msg48 = "system.send_msg"(%D171C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D172C6, %msg48 = "dma.sys.sys_send"(%B654C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D160C7, %msg48 = "@core_7"(%D158C7, %msg49) {
CHECK:          %B580C7 = "system.wait_msg"(%D158C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D159C7 = "dma.sys.sys_wait"(%B580C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B581C7, %msg48 = "system.send_msg"(%D159C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D160C7, %msg48 = "dma.sys.sys_send"(%B581C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D184C0, %msg49 = "@core_0"(%D180C0, %msg48) {
CHECK:          %B729C0 = "system.wait_msg"(%D180C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D181C0 = "dma.sys.sys_wait"(%B729C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D182C0 = "dma.tensor"(%L30.0x6980032000, %B729C0) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B730C0 = "pord.maxpooling"(%R0, %C-65504.0, %D182C0) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980000000, %D183C0 = "dma.tensor"(%R10, %B730C0) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B731C0, %msg49 = "system.send_msg"(%D183C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D184C0, %msg49 = "dma.sys.sys_send"(%B731C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D184C1, %msg49 = "@core_1"(%D180C1, %msg48) {
CHECK:          %B729C1 = "system.wait_msg"(%D180C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D181C1 = "dma.sys.sys_wait"(%B729C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D182C1 = "dma.tensor"(%L30.0x6980038400, %B729C1) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B730C1 = "pord.maxpooling"(%R0, %C-65504.0, %D182C1) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980006400, %D183C1 = "dma.tensor"(%R10, %B730C1) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B731C1, %msg49 = "system.send_msg"(%D183C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D184C1, %msg49 = "dma.sys.sys_send"(%B731C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D184C2, %msg49 = "@core_2"(%D180C2, %msg48) {
CHECK:          %B729C2 = "system.wait_msg"(%D180C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D181C2 = "dma.sys.sys_wait"(%B729C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D182C2 = "dma.tensor"(%L30.0x698003e800, %B729C2) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B730C2 = "pord.maxpooling"(%R0, %C-65504.0, %D182C2) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698000c800, %D183C2 = "dma.tensor"(%R10, %B730C2) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B731C2, %msg49 = "system.send_msg"(%D183C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D184C2, %msg49 = "dma.sys.sys_send"(%B731C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D184C3, %msg49 = "@core_3"(%D180C3, %msg48) {
CHECK:          %B729C3 = "system.wait_msg"(%D180C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D181C3 = "dma.sys.sys_wait"(%B729C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D182C3 = "dma.tensor"(%L30.0x6980044c00, %B729C3) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B730C3 = "pord.maxpooling"(%R0, %C-65504.0, %D182C3) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980012c00, %D183C3 = "dma.tensor"(%R10, %B730C3) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B731C3, %msg49 = "system.send_msg"(%D183C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D184C3, %msg49 = "dma.sys.sys_send"(%B731C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D180C4, %msg49 = "@core_4"(%D176C4, %msg48) {
CHECK:          %B728C4 = "system.wait_msg"(%D176C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D177C4 = "dma.sys.sys_wait"(%B728C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D178C4 = "dma.tensor"(%L30.0x698004b000, %B728C4) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B729C4 = "pord.maxpooling"(%R0, %C-65504.0, %D178C4) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980019000, %D179C4 = "dma.tensor"(%R10, %B729C4) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B730C4, %msg49 = "system.send_msg"(%D179C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D180C4, %msg49 = "dma.sys.sys_send"(%B730C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D180C5, %msg49 = "@core_5"(%D176C5, %msg48) {
CHECK:          %B728C5 = "system.wait_msg"(%D176C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D177C5 = "dma.sys.sys_wait"(%B728C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D178C5 = "dma.tensor"(%L30.0x6980051400, %B728C5) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B729C5 = "pord.maxpooling"(%R0, %C-65504.0, %D178C5) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698001f400, %D179C5 = "dma.tensor"(%R10, %B729C5) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B730C5, %msg49 = "system.send_msg"(%D179C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D180C5, %msg49 = "dma.sys.sys_send"(%B730C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D176C6, %msg49 = "@core_6"(%D172C6, %msg48) {
CHECK:          %B655C6 = "system.wait_msg"(%D172C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D173C6 = "dma.sys.sys_wait"(%B655C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D174C6 = "dma.tensor"(%L30.0x6980057800, %B655C6) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B656C6 = "pord.maxpooling"(%R0, %C-65504.0, %D174C6) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980025800, %D175C6 = "dma.tensor"(%R10, %B656C6) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B657C6, %msg49 = "system.send_msg"(%D175C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D176C6, %msg49 = "dma.sys.sys_send"(%B657C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D164C7, %msg49 = "@core_7"(%D160C7, %msg48) {
CHECK:          %B582C7 = "system.wait_msg"(%D160C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D161C7 = "dma.sys.sys_wait"(%B582C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D162C7 = "dma.tensor"(%L30.0x698005dc00, %B582C7) : (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %R10, %B583C7 = "pord.maxpooling"(%R0, %C-65504.0, %D162C7) {kernel = [5, 5], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [2, 2, 2, 2], round_mode = 0, shift = 0}: (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, f16, none) -> (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698002bc00, %D163C7 = "dma.tensor"(%R10, %B583C7) : (memref<1x32x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x32x20x20xf16, strides: [12800, 400, 20, 1]>, none)
CHECK:          %B584C7, %msg49 = "system.send_msg"(%D163C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D164C7, %msg49 = "dma.sys.sys_send"(%B584C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D186C0, %msg48 = "@core_0"(%D184C0, %msg49) {
CHECK:          %B732C0 = "system.wait_msg"(%D184C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D185C0 = "dma.sys.sys_wait"(%B732C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B733C0, %msg48 = "system.send_msg"(%D185C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D186C0, %msg48 = "dma.sys.sys_send"(%B733C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D186C1, %msg48 = "@core_1"(%D184C1, %msg49) {
CHECK:          %B732C1 = "system.wait_msg"(%D184C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D185C1 = "dma.sys.sys_wait"(%B732C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B733C1, %msg48 = "system.send_msg"(%D185C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D186C1, %msg48 = "dma.sys.sys_send"(%B733C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D186C2, %msg48 = "@core_2"(%D184C2, %msg49) {
CHECK:          %B732C2 = "system.wait_msg"(%D184C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D185C2 = "dma.sys.sys_wait"(%B732C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B733C2, %msg48 = "system.send_msg"(%D185C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D186C2, %msg48 = "dma.sys.sys_send"(%B733C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D186C3, %msg48 = "@core_3"(%D184C3, %msg49) {
CHECK:          %B732C3 = "system.wait_msg"(%D184C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D185C3 = "dma.sys.sys_wait"(%B732C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B733C3, %msg48 = "system.send_msg"(%D185C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D186C3, %msg48 = "dma.sys.sys_send"(%B733C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D182C4, %msg48 = "@core_4"(%D180C4, %msg49) {
CHECK:          %B731C4 = "system.wait_msg"(%D180C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D181C4 = "dma.sys.sys_wait"(%B731C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B732C4, %msg48 = "system.send_msg"(%D181C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D182C4, %msg48 = "dma.sys.sys_send"(%B732C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D182C5, %msg48 = "@core_5"(%D180C5, %msg49) {
CHECK:          %B731C5 = "system.wait_msg"(%D180C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D181C5 = "dma.sys.sys_wait"(%B731C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B732C5, %msg48 = "system.send_msg"(%D181C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D182C5, %msg48 = "dma.sys.sys_send"(%B732C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D178C6, %msg48 = "@core_6"(%D176C6, %msg49) {
CHECK:          %B658C6 = "system.wait_msg"(%D176C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D177C6 = "dma.sys.sys_wait"(%B658C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B659C6, %msg48 = "system.send_msg"(%D177C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D178C6, %msg48 = "dma.sys.sys_send"(%B659C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D166C7, %msg48 = "@core_7"(%D164C7, %msg49) {
CHECK:          %B585C7 = "system.wait_msg"(%D164C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D165C7 = "dma.sys.sys_wait"(%B585C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B586C7, %msg48 = "system.send_msg"(%D165C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D166C7, %msg48 = "dma.sys.sys_send"(%B586C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D197C0, %msg49 = "@core_0"(%D186C0, %msg48) {
CHECK:          %B734C0 = "system.wait_msg"(%D186C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D187C0 = "dma.sys.sys_wait"(%B734C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D188C0 = "dma.tensor"(%L30.0x6980064000, %B734C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D189C0 = "dma.tensor"(%L30.0x6980096000, %B734C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D190C0 = "dma.tensor"(%L30.0x6980032000, %B734C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D191C0 = "dma.tensor"(%L30.0x6980000000, %B734C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B735C0 = "arith.copy"(%R4, %D191C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B736C0 = "arith.copy"(%R1.0x1000, %D191C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B737C0 = "arith.copy"(%R3, %D191C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B738C0 = "arith.copy"(%R5, %D191C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D192C0 = "dma.tensor"(%G1.0x722000, %B734C0) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D193C0 = "dma.tensor"(%G1.0x721000, %B734C0) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B739C0 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D193C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x3x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D194C0 = "dma.tensor"(%G1.0x823000, %B738C0) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B740C0 = "tsbc.s_bc"(%R0.0x580, %D194C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B741C0 = "arith.sub"(%C0.0, %R3, %D194C0) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B742C0 = "arith.max"(%R1.0x1600, %C-45408.0, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B743C0 = "arith.min"(%R1.0x1600, %C45408.0, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B744C0 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B745C0 = "arith.cast"(%R1.0x1200, %D194C0) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B746C0 = "arith.mul"(%R2, %C0.693359375, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B747C0 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B748C0 = "arith.cast"(%R2, %D194C0) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B749C0 = "arith.min"(%R1.0x1600, %C15, %D194C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B750C0 = "arith.max"(%R2, %C-15, %D194C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B751C0 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D194C0) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B752C0 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D194C0) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B753C0 = "arith.mul"(%R1.0x1600, %R2, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B754C0 = "arith.add"(%R2, %C1.0, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B755C0 = "arith.div"(%C1.0, %R1.0x1200, %D194C0) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B756C0 = "arith.mul"(%R2, %R3, %D194C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D195C0 = "dma.tensor"(%G1.0x822000, %B739C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B757C0 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D195C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B758C0 = "tsbc.s_bc"(%R0.0x580, %D195C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B759C0 = "arith.sub"(%C0.0, %R4.0x200, %D195C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B760C0 = "arith.max"(%R2.0x200, %C-45408.0, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B761C0 = "arith.min"(%R2.0x200, %C45408.0, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B762C0 = "arith.mul"(%R2.0x200, %C1.4423828125, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B763C0 = "arith.cast"(%R2, %D195C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B764C0 = "arith.mul"(%R1.0x1200, %C0.693359375, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B765C0 = "arith.sub"(%R2.0x200, %R2, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B766C0 = "arith.cast"(%R1.0x1200, %D195C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B767C0 = "arith.min"(%R2.0x200, %C15, %D195C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B768C0 = "arith.max"(%R1.0x1200, %C-15, %D195C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B769C0 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D195C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B770C0 = "sfu.taylor_4x"(%R2, %R2.0x400, %D195C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B771C0 = "arith.mul"(%R2.0x200, %R1.0x1200, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B772C0 = "arith.add"(%R1.0x1200, %C1.0, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B773C0 = "arith.div"(%C1.0, %R2, %D195C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B774C0 = "arith.mul"(%R1.0x1200, %R4.0x200, %D195C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d0000, %D196C0 = "dma.tensor"(%R1.0x1200, %B774C0) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B775C0, %msg49 = "system.send_msg"(%D196C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D197C0, %msg49 = "dma.sys.sys_send"(%B775C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D197C1, %msg49 = "@core_1"(%D186C1, %msg48) {
CHECK:          %B734C1 = "system.wait_msg"(%D186C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D187C1 = "dma.sys.sys_wait"(%B734C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D188C1 = "dma.tensor"(%L30.0x6980064078, %B734C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D189C1 = "dma.tensor"(%L30.0x6980096078, %B734C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D190C1 = "dma.tensor"(%L30.0x6980032078, %B734C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D191C1 = "dma.tensor"(%L30.0x6980000078, %B734C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B735C1 = "arith.copy"(%R4, %D191C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B736C1 = "arith.copy"(%R1.0x1000, %D191C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B737C1 = "arith.copy"(%R3, %D191C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B738C1 = "arith.copy"(%R5, %D191C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D192C1 = "dma.tensor"(%G1.0x722000, %B734C1) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D193C1 = "dma.tensor"(%G1.0x721000, %B734C1) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B739C1 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D193C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x3x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D194C1 = "dma.tensor"(%G1.0x823000, %B738C1) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B740C1 = "tsbc.s_bc"(%R0.0x580, %D194C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B741C1 = "arith.sub"(%C0.0, %R3, %D194C1) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B742C1 = "arith.max"(%R1.0x1600, %C-45408.0, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B743C1 = "arith.min"(%R1.0x1600, %C45408.0, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B744C1 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B745C1 = "arith.cast"(%R1.0x1200, %D194C1) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B746C1 = "arith.mul"(%R2, %C0.693359375, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B747C1 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B748C1 = "arith.cast"(%R2, %D194C1) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B749C1 = "arith.min"(%R1.0x1600, %C15, %D194C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B750C1 = "arith.max"(%R2, %C-15, %D194C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B751C1 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D194C1) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B752C1 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D194C1) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B753C1 = "arith.mul"(%R1.0x1600, %R2, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B754C1 = "arith.add"(%R2, %C1.0, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B755C1 = "arith.div"(%C1.0, %R1.0x1200, %D194C1) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B756C1 = "arith.mul"(%R2, %R3, %D194C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D195C1 = "dma.tensor"(%G1.0x822000, %B739C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B757C1 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D195C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B758C1 = "tsbc.s_bc"(%R0.0x580, %D195C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B759C1 = "arith.sub"(%C0.0, %R4.0x200, %D195C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B760C1 = "arith.max"(%R2.0x200, %C-45408.0, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B761C1 = "arith.min"(%R2.0x200, %C45408.0, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B762C1 = "arith.mul"(%R2.0x200, %C1.4423828125, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B763C1 = "arith.cast"(%R2, %D195C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B764C1 = "arith.mul"(%R1.0x1200, %C0.693359375, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B765C1 = "arith.sub"(%R2.0x200, %R2, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B766C1 = "arith.cast"(%R1.0x1200, %D195C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B767C1 = "arith.min"(%R2.0x200, %C15, %D195C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B768C1 = "arith.max"(%R1.0x1200, %C-15, %D195C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B769C1 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D195C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B770C1 = "sfu.taylor_4x"(%R2, %R2.0x400, %D195C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B771C1 = "arith.mul"(%R2.0x200, %R1.0x1200, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B772C1 = "arith.add"(%R1.0x1200, %C1.0, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B773C1 = "arith.div"(%C1.0, %R2, %D195C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B774C1 = "arith.mul"(%R1.0x1200, %R4.0x200, %D195C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d0078, %D196C1 = "dma.tensor"(%R1.0x1200, %B774C1) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B775C1, %msg49 = "system.send_msg"(%D196C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D197C1, %msg49 = "dma.sys.sys_send"(%B775C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D197C2, %msg49 = "@core_2"(%D186C2, %msg48) {
CHECK:          %B734C2 = "system.wait_msg"(%D186C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D187C2 = "dma.sys.sys_wait"(%B734C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D188C2 = "dma.tensor"(%L30.0x69800640f0, %B734C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D189C2 = "dma.tensor"(%L30.0x69800960f0, %B734C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D190C2 = "dma.tensor"(%L30.0x69800320f0, %B734C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D191C2 = "dma.tensor"(%L30.0x69800000f0, %B734C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B735C2 = "arith.copy"(%R4, %D191C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B736C2 = "arith.copy"(%R1.0x1000, %D191C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B737C2 = "arith.copy"(%R3, %D191C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B738C2 = "arith.copy"(%R5, %D191C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D192C2 = "dma.tensor"(%G1.0x722000, %B734C2) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D193C2 = "dma.tensor"(%G1.0x721000, %B734C2) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B739C2 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D193C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x3x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D194C2 = "dma.tensor"(%G1.0x823000, %B738C2) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B740C2 = "tsbc.s_bc"(%R0.0x580, %D194C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B741C2 = "arith.sub"(%C0.0, %R3, %D194C2) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B742C2 = "arith.max"(%R1.0x1600, %C-45408.0, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B743C2 = "arith.min"(%R1.0x1600, %C45408.0, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B744C2 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B745C2 = "arith.cast"(%R1.0x1200, %D194C2) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B746C2 = "arith.mul"(%R2, %C0.693359375, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B747C2 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B748C2 = "arith.cast"(%R2, %D194C2) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B749C2 = "arith.min"(%R1.0x1600, %C15, %D194C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B750C2 = "arith.max"(%R2, %C-15, %D194C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B751C2 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D194C2) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B752C2 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D194C2) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B753C2 = "arith.mul"(%R1.0x1600, %R2, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B754C2 = "arith.add"(%R2, %C1.0, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B755C2 = "arith.div"(%C1.0, %R1.0x1200, %D194C2) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B756C2 = "arith.mul"(%R2, %R3, %D194C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D195C2 = "dma.tensor"(%G1.0x822000, %B739C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B757C2 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D195C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B758C2 = "tsbc.s_bc"(%R0.0x580, %D195C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B759C2 = "arith.sub"(%C0.0, %R4.0x200, %D195C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B760C2 = "arith.max"(%R2.0x200, %C-45408.0, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B761C2 = "arith.min"(%R2.0x200, %C45408.0, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B762C2 = "arith.mul"(%R2.0x200, %C1.4423828125, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B763C2 = "arith.cast"(%R2, %D195C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B764C2 = "arith.mul"(%R1.0x1200, %C0.693359375, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B765C2 = "arith.sub"(%R2.0x200, %R2, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B766C2 = "arith.cast"(%R1.0x1200, %D195C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B767C2 = "arith.min"(%R2.0x200, %C15, %D195C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B768C2 = "arith.max"(%R1.0x1200, %C-15, %D195C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B769C2 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D195C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B770C2 = "sfu.taylor_4x"(%R2, %R2.0x400, %D195C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B771C2 = "arith.mul"(%R2.0x200, %R1.0x1200, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B772C2 = "arith.add"(%R1.0x1200, %C1.0, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B773C2 = "arith.div"(%C1.0, %R2, %D195C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B774C2 = "arith.mul"(%R1.0x1200, %R4.0x200, %D195C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d00f0, %D196C2 = "dma.tensor"(%R1.0x1200, %B774C2) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B775C2, %msg49 = "system.send_msg"(%D196C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D197C2, %msg49 = "dma.sys.sys_send"(%B775C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D197C3, %msg49 = "@core_3"(%D186C3, %msg48) {
CHECK:          %B734C3 = "system.wait_msg"(%D186C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D187C3 = "dma.sys.sys_wait"(%B734C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D188C3 = "dma.tensor"(%L30.0x6980064168, %B734C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D189C3 = "dma.tensor"(%L30.0x6980096168, %B734C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D190C3 = "dma.tensor"(%L30.0x6980032168, %B734C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D191C3 = "dma.tensor"(%L30.0x6980000168, %B734C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B735C3 = "arith.copy"(%R4, %D191C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B736C3 = "arith.copy"(%R1.0x1000, %D191C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B737C3 = "arith.copy"(%R3, %D191C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B738C3 = "arith.copy"(%R5, %D191C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D192C3 = "dma.tensor"(%G1.0x722000, %B734C3) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D193C3 = "dma.tensor"(%G1.0x721000, %B734C3) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B739C3 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D193C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x3x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D194C3 = "dma.tensor"(%G1.0x823000, %B738C3) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B740C3 = "tsbc.s_bc"(%R0.0x580, %D194C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B741C3 = "arith.sub"(%C0.0, %R3, %D194C3) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B742C3 = "arith.max"(%R1.0x1600, %C-45408.0, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B743C3 = "arith.min"(%R1.0x1600, %C45408.0, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B744C3 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B745C3 = "arith.cast"(%R1.0x1200, %D194C3) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B746C3 = "arith.mul"(%R2, %C0.693359375, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B747C3 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B748C3 = "arith.cast"(%R2, %D194C3) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B749C3 = "arith.min"(%R1.0x1600, %C15, %D194C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B750C3 = "arith.max"(%R2, %C-15, %D194C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B751C3 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D194C3) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B752C3 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D194C3) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B753C3 = "arith.mul"(%R1.0x1600, %R2, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B754C3 = "arith.add"(%R2, %C1.0, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B755C3 = "arith.div"(%C1.0, %R1.0x1200, %D194C3) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B756C3 = "arith.mul"(%R2, %R3, %D194C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D195C3 = "dma.tensor"(%G1.0x822000, %B739C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B757C3 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D195C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B758C3 = "tsbc.s_bc"(%R0.0x580, %D195C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B759C3 = "arith.sub"(%C0.0, %R4.0x200, %D195C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B760C3 = "arith.max"(%R2.0x200, %C-45408.0, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B761C3 = "arith.min"(%R2.0x200, %C45408.0, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B762C3 = "arith.mul"(%R2.0x200, %C1.4423828125, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B763C3 = "arith.cast"(%R2, %D195C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B764C3 = "arith.mul"(%R1.0x1200, %C0.693359375, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B765C3 = "arith.sub"(%R2.0x200, %R2, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B766C3 = "arith.cast"(%R1.0x1200, %D195C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B767C3 = "arith.min"(%R2.0x200, %C15, %D195C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B768C3 = "arith.max"(%R1.0x1200, %C-15, %D195C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B769C3 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D195C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B770C3 = "sfu.taylor_4x"(%R2, %R2.0x400, %D195C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B771C3 = "arith.mul"(%R2.0x200, %R1.0x1200, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B772C3 = "arith.add"(%R1.0x1200, %C1.0, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B773C3 = "arith.div"(%C1.0, %R2, %D195C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B774C3 = "arith.mul"(%R1.0x1200, %R4.0x200, %D195C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d0168, %D196C3 = "dma.tensor"(%R1.0x1200, %B774C3) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B775C3, %msg49 = "system.send_msg"(%D196C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D197C3, %msg49 = "dma.sys.sys_send"(%B775C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D193C4, %msg49 = "@core_4"(%D182C4, %msg48) {
CHECK:          %B733C4 = "system.wait_msg"(%D182C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D183C4 = "dma.sys.sys_wait"(%B733C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D184C4 = "dma.tensor"(%L30.0x69800641e0, %B733C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D185C4 = "dma.tensor"(%L30.0x69800961e0, %B733C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D186C4 = "dma.tensor"(%L30.0x69800321e0, %B733C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D187C4 = "dma.tensor"(%L30.0x69800001e0, %B733C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B734C4 = "arith.copy"(%R4, %D187C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B735C4 = "arith.copy"(%R1.0x1000, %D187C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B736C4 = "arith.copy"(%R3, %D187C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B737C4 = "arith.copy"(%R5, %D187C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D188C4 = "dma.tensor"(%G1.0x722000, %B733C4) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D189C4 = "dma.tensor"(%G1.0x721000, %B733C4) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B738C4 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D189C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x2x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D190C4 = "dma.tensor"(%G1.0x823000, %B737C4) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B739C4 = "tsbc.s_bc"(%R0.0x580, %D190C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B740C4 = "arith.sub"(%C0.0, %R3, %D190C4) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B741C4 = "arith.max"(%R1.0x1600, %C-45408.0, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B742C4 = "arith.min"(%R1.0x1600, %C45408.0, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B743C4 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B744C4 = "arith.cast"(%R1.0x1200, %D190C4) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B745C4 = "arith.mul"(%R2, %C0.693359375, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B746C4 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B747C4 = "arith.cast"(%R2, %D190C4) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B748C4 = "arith.min"(%R1.0x1600, %C15, %D190C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B749C4 = "arith.max"(%R2, %C-15, %D190C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B750C4 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D190C4) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B751C4 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D190C4) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B752C4 = "arith.mul"(%R1.0x1600, %R2, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B753C4 = "arith.add"(%R2, %C1.0, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B754C4 = "arith.div"(%C1.0, %R1.0x1200, %D190C4) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B755C4 = "arith.mul"(%R2, %R3, %D190C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D191C4 = "dma.tensor"(%G1.0x822000, %B738C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B756C4 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D191C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B757C4 = "tsbc.s_bc"(%R0.0x580, %D191C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B758C4 = "arith.sub"(%C0.0, %R4.0x200, %D191C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B759C4 = "arith.max"(%R2.0x200, %C-45408.0, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B760C4 = "arith.min"(%R2.0x200, %C45408.0, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B761C4 = "arith.mul"(%R2.0x200, %C1.4423828125, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B762C4 = "arith.cast"(%R2, %D191C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B763C4 = "arith.mul"(%R1.0x1200, %C0.693359375, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B764C4 = "arith.sub"(%R2.0x200, %R2, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B765C4 = "arith.cast"(%R1.0x1200, %D191C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B766C4 = "arith.min"(%R2.0x200, %C15, %D191C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B767C4 = "arith.max"(%R1.0x1200, %C-15, %D191C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B768C4 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D191C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B769C4 = "sfu.taylor_4x"(%R2, %R2.0x400, %D191C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B770C4 = "arith.mul"(%R2.0x200, %R1.0x1200, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B771C4 = "arith.add"(%R1.0x1200, %C1.0, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B772C4 = "arith.div"(%C1.0, %R2, %D191C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B773C4 = "arith.mul"(%R1.0x1200, %R4.0x200, %D191C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d01e0, %D192C4 = "dma.tensor"(%R1.0x1200, %B773C4) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B774C4, %msg49 = "system.send_msg"(%D192C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D193C4, %msg49 = "dma.sys.sys_send"(%B774C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D193C5, %msg49 = "@core_5"(%D182C5, %msg48) {
CHECK:          %B733C5 = "system.wait_msg"(%D182C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D183C5 = "dma.sys.sys_wait"(%B733C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D184C5 = "dma.tensor"(%L30.0x6980064230, %B733C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D185C5 = "dma.tensor"(%L30.0x6980096230, %B733C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D186C5 = "dma.tensor"(%L30.0x6980032230, %B733C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D187C5 = "dma.tensor"(%L30.0x6980000230, %B733C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B734C5 = "arith.copy"(%R4, %D187C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B735C5 = "arith.copy"(%R1.0x1000, %D187C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B736C5 = "arith.copy"(%R3, %D187C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B737C5 = "arith.copy"(%R5, %D187C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D188C5 = "dma.tensor"(%G1.0x722000, %B733C5) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D189C5 = "dma.tensor"(%G1.0x721000, %B733C5) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B738C5 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D189C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x2x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D190C5 = "dma.tensor"(%G1.0x823000, %B737C5) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B739C5 = "tsbc.s_bc"(%R0.0x580, %D190C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B740C5 = "arith.sub"(%C0.0, %R3, %D190C5) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B741C5 = "arith.max"(%R1.0x1600, %C-45408.0, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B742C5 = "arith.min"(%R1.0x1600, %C45408.0, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B743C5 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B744C5 = "arith.cast"(%R1.0x1200, %D190C5) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B745C5 = "arith.mul"(%R2, %C0.693359375, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B746C5 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B747C5 = "arith.cast"(%R2, %D190C5) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B748C5 = "arith.min"(%R1.0x1600, %C15, %D190C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B749C5 = "arith.max"(%R2, %C-15, %D190C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B750C5 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D190C5) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B751C5 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D190C5) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B752C5 = "arith.mul"(%R1.0x1600, %R2, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B753C5 = "arith.add"(%R2, %C1.0, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B754C5 = "arith.div"(%C1.0, %R1.0x1200, %D190C5) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B755C5 = "arith.mul"(%R2, %R3, %D190C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D191C5 = "dma.tensor"(%G1.0x822000, %B738C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B756C5 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D191C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B757C5 = "tsbc.s_bc"(%R0.0x580, %D191C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B758C5 = "arith.sub"(%C0.0, %R4.0x200, %D191C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B759C5 = "arith.max"(%R2.0x200, %C-45408.0, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B760C5 = "arith.min"(%R2.0x200, %C45408.0, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B761C5 = "arith.mul"(%R2.0x200, %C1.4423828125, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B762C5 = "arith.cast"(%R2, %D191C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B763C5 = "arith.mul"(%R1.0x1200, %C0.693359375, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B764C5 = "arith.sub"(%R2.0x200, %R2, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B765C5 = "arith.cast"(%R1.0x1200, %D191C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B766C5 = "arith.min"(%R2.0x200, %C15, %D191C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B767C5 = "arith.max"(%R1.0x1200, %C-15, %D191C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B768C5 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D191C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B769C5 = "sfu.taylor_4x"(%R2, %R2.0x400, %D191C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B770C5 = "arith.mul"(%R2.0x200, %R1.0x1200, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B771C5 = "arith.add"(%R1.0x1200, %C1.0, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B772C5 = "arith.div"(%C1.0, %R2, %D191C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B773C5 = "arith.mul"(%R1.0x1200, %R4.0x200, %D191C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d0230, %D192C5 = "dma.tensor"(%R1.0x1200, %B773C5) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B774C5, %msg49 = "system.send_msg"(%D192C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D193C5, %msg49 = "dma.sys.sys_send"(%B774C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D189C6, %msg49 = "@core_6"(%D178C6, %msg48) {
CHECK:          %B660C6 = "system.wait_msg"(%D178C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D179C6 = "dma.sys.sys_wait"(%B660C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D180C6 = "dma.tensor"(%L30.0x6980064280, %B660C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D181C6 = "dma.tensor"(%L30.0x6980096280, %B660C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D182C6 = "dma.tensor"(%L30.0x6980032280, %B660C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D183C6 = "dma.tensor"(%L30.0x6980000280, %B660C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B661C6 = "arith.copy"(%R4, %D183C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B662C6 = "arith.copy"(%R1.0x1000, %D183C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B663C6 = "arith.copy"(%R3, %D183C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B664C6 = "arith.copy"(%R5, %D183C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D184C6 = "dma.tensor"(%G1.0x722000, %B660C6) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D185C6 = "dma.tensor"(%G1.0x721000, %B660C6) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B665C6 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D185C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x2x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D186C6 = "dma.tensor"(%G1.0x823000, %B664C6) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B666C6 = "tsbc.s_bc"(%R0.0x580, %D186C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B667C6 = "arith.sub"(%C0.0, %R3, %D186C6) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B668C6 = "arith.max"(%R1.0x1600, %C-45408.0, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B669C6 = "arith.min"(%R1.0x1600, %C45408.0, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B670C6 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B671C6 = "arith.cast"(%R1.0x1200, %D186C6) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B672C6 = "arith.mul"(%R2, %C0.693359375, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B673C6 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B674C6 = "arith.cast"(%R2, %D186C6) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B675C6 = "arith.min"(%R1.0x1600, %C15, %D186C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B676C6 = "arith.max"(%R2, %C-15, %D186C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B677C6 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D186C6) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B678C6 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D186C6) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B679C6 = "arith.mul"(%R1.0x1600, %R2, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B680C6 = "arith.add"(%R2, %C1.0, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B681C6 = "arith.div"(%C1.0, %R1.0x1200, %D186C6) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B682C6 = "arith.mul"(%R2, %R3, %D186C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D187C6 = "dma.tensor"(%G1.0x822000, %B665C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B683C6 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D187C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B684C6 = "tsbc.s_bc"(%R0.0x580, %D187C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B685C6 = "arith.sub"(%C0.0, %R4.0x200, %D187C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B686C6 = "arith.max"(%R2.0x200, %C-45408.0, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B687C6 = "arith.min"(%R2.0x200, %C45408.0, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B688C6 = "arith.mul"(%R2.0x200, %C1.4423828125, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B689C6 = "arith.cast"(%R2, %D187C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B690C6 = "arith.mul"(%R1.0x1200, %C0.693359375, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B691C6 = "arith.sub"(%R2.0x200, %R2, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B692C6 = "arith.cast"(%R1.0x1200, %D187C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B693C6 = "arith.min"(%R2.0x200, %C15, %D187C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B694C6 = "arith.max"(%R1.0x1200, %C-15, %D187C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B695C6 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D187C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B696C6 = "sfu.taylor_4x"(%R2, %R2.0x400, %D187C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B697C6 = "arith.mul"(%R2.0x200, %R1.0x1200, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B698C6 = "arith.add"(%R1.0x1200, %C1.0, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B699C6 = "arith.div"(%C1.0, %R2, %D187C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B700C6 = "arith.mul"(%R1.0x1200, %R4.0x200, %D187C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d0280, %D188C6 = "dma.tensor"(%R1.0x1200, %B700C6) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B701C6, %msg49 = "system.send_msg"(%D188C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D189C6, %msg49 = "dma.sys.sys_send"(%B701C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D177C7, %msg49 = "@core_7"(%D166C7, %msg48) {
CHECK:          %B587C7 = "system.wait_msg"(%D166C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D167C7 = "dma.sys.sys_wait"(%B587C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R1.0x1000, %D168C7 = "dma.tensor"(%L30.0x69800642d0, %B587C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %D169C7 = "dma.tensor"(%L30.0x69800962d0, %B587C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D170C7 = "dma.tensor"(%L30.0x69800322d0, %B587C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D171C7 = "dma.tensor"(%L30.0x69800002d0, %B587C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B588C7 = "arith.copy"(%R4, %D171C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B589C7 = "arith.copy"(%R1.0x1000, %D171C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B590C7 = "arith.copy"(%R3, %D171C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R2.0x600, %B591C7 = "arith.copy"(%R5, %D171C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [1024, 64, 20, 1]>, none)
CHECK:          %R0, %D172C7 = "dma.tensor"(%G1.0x722000, %B587C7) : (memref<1x512x1x1024xi16, strides: [524288, 1024, 1024, 1]>, none) -> (memref<1x512x1x1024xi16, strides: [8192, 1024, 1024, 1]>, none)
CHECK:          %R6, %D173C7 = "dma.tensor"(%G1.0x721000, %B587C7) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3, %B592C7 = "conv.normal"(%R2, %R0, %R6, %C0.0, %D173C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x1024x2x20xf16, strides: [1024, 64, 20, 1]>, memref<512x1024x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1, %D174C7 = "dma.tensor"(%G1.0x823000, %B591C7) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R1.0x1a00, %B593C7 = "tsbc.s_bc"(%R0.0x580, %D174C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x1600, %B594C7 = "arith.sub"(%C0.0, %R3, %D174C7) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B595C7 = "arith.max"(%R1.0x1600, %C-45408.0, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B596C7 = "arith.min"(%R1.0x1600, %C45408.0, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B597C7 = "arith.mul"(%R1.0x1600, %C1.4423828125, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B598C7 = "arith.cast"(%R1.0x1200, %D174C7) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B599C7 = "arith.mul"(%R2, %C0.693359375, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B600C7 = "arith.sub"(%R1.0x1600, %R1.0x1200, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B601C7 = "arith.cast"(%R2, %D174C7) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B602C7 = "arith.min"(%R1.0x1600, %C15, %D174C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B603C7 = "arith.max"(%R2, %C-15, %D174C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B604C7 = "arith.add_satu"(%R1.0x1600, %C15, %C10, %D174C7) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1600, %B605C7 = "sfu.taylor_4x"(%R1.0x1200, %R1.0x1a00, %D174C7) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B606C7 = "arith.mul"(%R1.0x1600, %R2, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B607C7 = "arith.add"(%R2, %C1.0, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B608C7 = "arith.div"(%C1.0, %R1.0x1200, %D174C7) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2, %B609C7 = "arith.mul"(%R2, %R3, %D174C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x200, %D175C7 = "dma.tensor"(%G1.0x822000, %B592C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0x200, %B610C7 = "conv.normal"(%R2, %R1, %R5.0x200, %C0.0, %D175C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x400, %B611C7 = "tsbc.s_bc"(%R0.0x580, %D175C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x200, %B612C7 = "arith.sub"(%C0.0, %R4.0x200, %D175C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B613C7 = "arith.max"(%R2.0x200, %C-45408.0, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B614C7 = "arith.min"(%R2.0x200, %C45408.0, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B615C7 = "arith.mul"(%R2.0x200, %C1.4423828125, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B616C7 = "arith.cast"(%R2, %D175C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B617C7 = "arith.mul"(%R1.0x1200, %C0.693359375, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B618C7 = "arith.sub"(%R2.0x200, %R2, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B619C7 = "arith.cast"(%R1.0x1200, %D175C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B620C7 = "arith.min"(%R2.0x200, %C15, %D175C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B621C7 = "arith.max"(%R1.0x1200, %C-15, %D175C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B622C7 = "arith.add_satu"(%R2.0x200, %C15, %C10, %D175C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x200, %B623C7 = "sfu.taylor_4x"(%R2, %R2.0x400, %D175C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B624C7 = "arith.mul"(%R2.0x200, %R1.0x1200, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %B625C7 = "arith.add"(%R1.0x1200, %C1.0, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B626C7 = "arith.div"(%C1.0, %R2, %D175C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x1200, %B627C7 = "arith.mul"(%R1.0x1200, %R4.0x200, %D175C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69807d02d0, %D176C7 = "dma.tensor"(%R1.0x1200, %B627C7) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B628C7, %msg49 = "system.send_msg"(%D176C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D177C7, %msg49 = "dma.sys.sys_send"(%B628C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D201C0, %msg48 = "@core_0"(%D197C0, %msg49) {
CHECK:          %B776C0 = "system.wait_msg"(%D197C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D198C0 = "dma.sys.sys_wait"(%B776C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D199C0 = "dma.tensor"(%L30.0x69807d0000, %B776C0) : (memref<1x256x20x20xf16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none)
CHECK:          %R2, %B777C0 = "arith.copy"(%R0, %D199C0) {round_mode = 0}: (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [6400, 1600, 80, 2]>, none)
CHECK:          %R2.0x2, %B778C0 = "arith.copy"(%R0, %D199C0) {round_mode = 0}: (memref<1x256x20x20xf16, strides: [1664, 416, 20, 1]>, none) -> (memref<1x256x20x20xf16, strides: [6400, 1600, 80, 2]>, none)
CHECK:          %R2.0x50, %B779C0 = "arith.copy"(%R2, %D199C0) {round_mode = 0}: (memref<1x256x20x40xf16, strides: [6400, 1600, 80, 1]>, none) -> (memref<1x256x20x40xf16, strides: [6400, 1600, 80, 1]>, none)
CHECK:          %L30.0x6980000000, %D200C0 = "dma.tensor"(%R2, %B779C0) : (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, none) -> (memref<1x256x40x40xf16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B780C0, %msg48 = "system.send_msg"(%D200C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D201C0, %msg48 = "dma.sys.sys_send"(%B780C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D199C1, %msg48 = "@core_1"(%D197C1, %msg49) {
CHECK:          %B776C1 = "system.wait_msg"(%D197C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D198C1 = "dma.sys.sys_wait"(%B776C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B777C1, %msg48 = "system.send_msg"(%D198C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D199C1, %msg48 = "dma.sys.sys_send"(%B777C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D199C2, %msg48 = "@core_2"(%D197C2, %msg49) {
CHECK:          %B776C2 = "system.wait_msg"(%D197C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D198C2 = "dma.sys.sys_wait"(%B776C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B777C2, %msg48 = "system.send_msg"(%D198C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D199C2, %msg48 = "dma.sys.sys_send"(%B777C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D199C3, %msg48 = "@core_3"(%D197C3, %msg49) {
CHECK:          %B776C3 = "system.wait_msg"(%D197C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D198C3 = "dma.sys.sys_wait"(%B776C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B777C3, %msg48 = "system.send_msg"(%D198C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D199C3, %msg48 = "dma.sys.sys_send"(%B777C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D195C4, %msg48 = "@core_4"(%D193C4, %msg49) {
CHECK:          %B775C4 = "system.wait_msg"(%D193C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D194C4 = "dma.sys.sys_wait"(%B775C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B776C4, %msg48 = "system.send_msg"(%D194C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D195C4, %msg48 = "dma.sys.sys_send"(%B776C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D195C5, %msg48 = "@core_5"(%D193C5, %msg49) {
CHECK:          %B775C5 = "system.wait_msg"(%D193C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D194C5 = "dma.sys.sys_wait"(%B775C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B776C5, %msg48 = "system.send_msg"(%D194C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D195C5, %msg48 = "dma.sys.sys_send"(%B776C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D191C6, %msg48 = "@core_6"(%D189C6, %msg49) {
CHECK:          %B702C6 = "system.wait_msg"(%D189C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D190C6 = "dma.sys.sys_wait"(%B702C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B703C6, %msg48 = "system.send_msg"(%D190C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D191C6, %msg48 = "dma.sys.sys_send"(%B703C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D179C7, %msg48 = "@core_7"(%D177C7, %msg49) {
CHECK:          %B629C7 = "system.wait_msg"(%D177C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D178C7 = "dma.sys.sys_wait"(%B629C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B630C7, %msg48 = "system.send_msg"(%D178C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D179C7, %msg48 = "dma.sys.sys_send"(%B630C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D211C0, %msg49 = "@core_0"(%D201C0, %msg48) {
CHECK:          %B781C0 = "system.wait_msg"(%D201C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D202C0 = "dma.sys.sys_wait"(%B781C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D203C0 = "dma.tensor"(%L30.0x6980000000, %B781C0) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D204C0 = "dma.tensor"(%L30.0x69800c8000, %B781C0) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B782C0 = "arith.copy"(%R2, %D204C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B783C0 = "arith.copy"(%R3, %D204C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D205C0 = "dma.tensor"(%G1.0x864000, %B781C0) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D206C0 = "dma.tensor"(%G1.0x863000, %B781C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D207C0 = "dma.tensor"(%G1.0x884000, %B781C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D208C0 = "dma.tensor"(%G1.0x885000, %B781C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B784C0 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D208C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980320000, %D209C0 = "dma.tensor"(%R1, %B783C0) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B785C0 = "tsbc.s_bc"(%R0.0x580, %D209C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B786C0 = "arith.sub"(%C0.0, %R3, %D209C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B787C0 = "arith.max"(%R4.0x580, %C-45408.0, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B788C0 = "arith.min"(%R4.0x580, %C45408.0, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B789C0 = "arith.mul"(%R4.0x580, %C1.4423828125, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B790C0 = "arith.cast"(%R4.0x200, %D209C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B791C0 = "arith.mul"(%R1.0x380, %C0.693359375, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B792C0 = "arith.sub"(%R4.0x580, %R4.0x200, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B793C0 = "arith.cast"(%R1.0x380, %D209C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B794C0 = "arith.min"(%R4.0x580, %C15, %D209C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B795C0 = "arith.max"(%R1.0x380, %C-15, %D209C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B796C0 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D209C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B797C0 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D209C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B798C0 = "arith.mul"(%R4.0x580, %R1.0x380, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B799C0 = "arith.add"(%R1.0x380, %C1.0, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B800C0 = "arith.div"(%C1.0, %R4.0x200, %D209C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B801C0 = "arith.mul"(%R1.0x380, %R3, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B802C0 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D209C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B803C0 = "tsbc.s_bc"(%R0.0x580, %D209C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B804C0 = "arith.sub"(%C0.0, %R1, %D209C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B805C0 = "arith.max"(%R2.0xa80, %C-45408.0, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B806C0 = "arith.min"(%R2.0xa80, %C45408.0, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B807C0 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B808C0 = "arith.cast"(%R2.0x700, %D209C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B809C0 = "arith.mul"(%R0.0x800, %C0.693359375, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B810C0 = "arith.sub"(%R2.0xa80, %R2.0x700, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B811C0 = "arith.cast"(%R0.0x800, %D209C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B812C0 = "arith.min"(%R2.0xa80, %C15, %D209C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B813C0 = "arith.max"(%R0.0x800, %C-15, %D209C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B814C0 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D209C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B815C0 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D209C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B816C0 = "arith.mul"(%R2.0xa80, %R0.0x800, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B817C0 = "arith.add"(%R0.0x800, %C1.0, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B818C0 = "arith.div"(%C1.0, %R2.0x700, %D209C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B819C0 = "arith.mul"(%R0.0x800, %R1, %D209C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c000, %D210C0 = "dma.tensor"(%R0.0x800, %B819C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B820C0, %msg49 = "system.send_msg"(%D210C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D211C0, %msg49 = "dma.sys.sys_send"(%B820C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D209C1, %msg49 = "@core_1"(%D199C1, %msg48) {
CHECK:          %B778C1 = "system.wait_msg"(%D199C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D200C1 = "dma.sys.sys_wait"(%B778C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D201C1 = "dma.tensor"(%L30.0x6980000190, %B778C1) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D202C1 = "dma.tensor"(%L30.0x69800c8190, %B778C1) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B779C1 = "arith.copy"(%R2, %D202C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B780C1 = "arith.copy"(%R3, %D202C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D203C1 = "dma.tensor"(%G1.0x864000, %B778C1) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D204C1 = "dma.tensor"(%G1.0x863000, %B778C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D205C1 = "dma.tensor"(%G1.0x884000, %B778C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D206C1 = "dma.tensor"(%G1.0x885000, %B778C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B781C1 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D206C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980320190, %D207C1 = "dma.tensor"(%R1, %B780C1) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B782C1 = "tsbc.s_bc"(%R0.0x580, %D207C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B783C1 = "arith.sub"(%C0.0, %R3, %D207C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B784C1 = "arith.max"(%R4.0x580, %C-45408.0, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B785C1 = "arith.min"(%R4.0x580, %C45408.0, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B786C1 = "arith.mul"(%R4.0x580, %C1.4423828125, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B787C1 = "arith.cast"(%R4.0x200, %D207C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B788C1 = "arith.mul"(%R1.0x380, %C0.693359375, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B789C1 = "arith.sub"(%R4.0x580, %R4.0x200, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B790C1 = "arith.cast"(%R1.0x380, %D207C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B791C1 = "arith.min"(%R4.0x580, %C15, %D207C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B792C1 = "arith.max"(%R1.0x380, %C-15, %D207C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B793C1 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D207C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B794C1 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D207C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B795C1 = "arith.mul"(%R4.0x580, %R1.0x380, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B796C1 = "arith.add"(%R1.0x380, %C1.0, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B797C1 = "arith.div"(%C1.0, %R4.0x200, %D207C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B798C1 = "arith.mul"(%R1.0x380, %R3, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B799C1 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D207C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B800C1 = "tsbc.s_bc"(%R0.0x580, %D207C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B801C1 = "arith.sub"(%C0.0, %R1, %D207C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B802C1 = "arith.max"(%R2.0xa80, %C-45408.0, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B803C1 = "arith.min"(%R2.0xa80, %C45408.0, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B804C1 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B805C1 = "arith.cast"(%R2.0x700, %D207C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B806C1 = "arith.mul"(%R0.0x800, %C0.693359375, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B807C1 = "arith.sub"(%R2.0xa80, %R2.0x700, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B808C1 = "arith.cast"(%R0.0x800, %D207C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B809C1 = "arith.min"(%R2.0xa80, %C15, %D207C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B810C1 = "arith.max"(%R0.0x800, %C-15, %D207C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B811C1 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D207C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B812C1 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D207C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B813C1 = "arith.mul"(%R2.0xa80, %R0.0x800, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B814C1 = "arith.add"(%R0.0x800, %C1.0, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B815C1 = "arith.div"(%C1.0, %R2.0x700, %D207C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B816C1 = "arith.mul"(%R0.0x800, %R1, %D207C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c190, %D208C1 = "dma.tensor"(%R0.0x800, %B816C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B817C1, %msg49 = "system.send_msg"(%D208C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D209C1, %msg49 = "dma.sys.sys_send"(%B817C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D209C2, %msg49 = "@core_2"(%D199C2, %msg48) {
CHECK:          %B778C2 = "system.wait_msg"(%D199C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D200C2 = "dma.sys.sys_wait"(%B778C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D201C2 = "dma.tensor"(%L30.0x6980000320, %B778C2) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D202C2 = "dma.tensor"(%L30.0x69800c8320, %B778C2) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B779C2 = "arith.copy"(%R2, %D202C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B780C2 = "arith.copy"(%R3, %D202C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D203C2 = "dma.tensor"(%G1.0x864000, %B778C2) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D204C2 = "dma.tensor"(%G1.0x863000, %B778C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D205C2 = "dma.tensor"(%G1.0x884000, %B778C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D206C2 = "dma.tensor"(%G1.0x885000, %B778C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B781C2 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D206C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980320320, %D207C2 = "dma.tensor"(%R1, %B780C2) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B782C2 = "tsbc.s_bc"(%R0.0x580, %D207C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B783C2 = "arith.sub"(%C0.0, %R3, %D207C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B784C2 = "arith.max"(%R4.0x580, %C-45408.0, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B785C2 = "arith.min"(%R4.0x580, %C45408.0, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B786C2 = "arith.mul"(%R4.0x580, %C1.4423828125, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B787C2 = "arith.cast"(%R4.0x200, %D207C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B788C2 = "arith.mul"(%R1.0x380, %C0.693359375, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B789C2 = "arith.sub"(%R4.0x580, %R4.0x200, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B790C2 = "arith.cast"(%R1.0x380, %D207C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B791C2 = "arith.min"(%R4.0x580, %C15, %D207C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B792C2 = "arith.max"(%R1.0x380, %C-15, %D207C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B793C2 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D207C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B794C2 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D207C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B795C2 = "arith.mul"(%R4.0x580, %R1.0x380, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B796C2 = "arith.add"(%R1.0x380, %C1.0, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B797C2 = "arith.div"(%C1.0, %R4.0x200, %D207C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B798C2 = "arith.mul"(%R1.0x380, %R3, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B799C2 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D207C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B800C2 = "tsbc.s_bc"(%R0.0x580, %D207C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B801C2 = "arith.sub"(%C0.0, %R1, %D207C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B802C2 = "arith.max"(%R2.0xa80, %C-45408.0, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B803C2 = "arith.min"(%R2.0xa80, %C45408.0, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B804C2 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B805C2 = "arith.cast"(%R2.0x700, %D207C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B806C2 = "arith.mul"(%R0.0x800, %C0.693359375, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B807C2 = "arith.sub"(%R2.0xa80, %R2.0x700, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B808C2 = "arith.cast"(%R0.0x800, %D207C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B809C2 = "arith.min"(%R2.0xa80, %C15, %D207C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B810C2 = "arith.max"(%R0.0x800, %C-15, %D207C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B811C2 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D207C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B812C2 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D207C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B813C2 = "arith.mul"(%R2.0xa80, %R0.0x800, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B814C2 = "arith.add"(%R0.0x800, %C1.0, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B815C2 = "arith.div"(%C1.0, %R2.0x700, %D207C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B816C2 = "arith.mul"(%R0.0x800, %R1, %D207C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c320, %D208C2 = "dma.tensor"(%R0.0x800, %B816C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B817C2, %msg49 = "system.send_msg"(%D208C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D209C2, %msg49 = "dma.sys.sys_send"(%B817C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D209C3, %msg49 = "@core_3"(%D199C3, %msg48) {
CHECK:          %B778C3 = "system.wait_msg"(%D199C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D200C3 = "dma.sys.sys_wait"(%B778C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D201C3 = "dma.tensor"(%L30.0x69800004b0, %B778C3) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D202C3 = "dma.tensor"(%L30.0x69800c84b0, %B778C3) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B779C3 = "arith.copy"(%R2, %D202C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B780C3 = "arith.copy"(%R3, %D202C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D203C3 = "dma.tensor"(%G1.0x864000, %B778C3) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D204C3 = "dma.tensor"(%G1.0x863000, %B778C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D205C3 = "dma.tensor"(%G1.0x884000, %B778C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D206C3 = "dma.tensor"(%G1.0x885000, %B778C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B781C3 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D206C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69803204b0, %D207C3 = "dma.tensor"(%R1, %B780C3) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B782C3 = "tsbc.s_bc"(%R0.0x580, %D207C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B783C3 = "arith.sub"(%C0.0, %R3, %D207C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B784C3 = "arith.max"(%R4.0x580, %C-45408.0, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B785C3 = "arith.min"(%R4.0x580, %C45408.0, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B786C3 = "arith.mul"(%R4.0x580, %C1.4423828125, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B787C3 = "arith.cast"(%R4.0x200, %D207C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B788C3 = "arith.mul"(%R1.0x380, %C0.693359375, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B789C3 = "arith.sub"(%R4.0x580, %R4.0x200, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B790C3 = "arith.cast"(%R1.0x380, %D207C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B791C3 = "arith.min"(%R4.0x580, %C15, %D207C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B792C3 = "arith.max"(%R1.0x380, %C-15, %D207C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B793C3 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D207C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B794C3 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D207C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B795C3 = "arith.mul"(%R4.0x580, %R1.0x380, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B796C3 = "arith.add"(%R1.0x380, %C1.0, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B797C3 = "arith.div"(%C1.0, %R4.0x200, %D207C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B798C3 = "arith.mul"(%R1.0x380, %R3, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B799C3 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D207C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B800C3 = "tsbc.s_bc"(%R0.0x580, %D207C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B801C3 = "arith.sub"(%C0.0, %R1, %D207C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B802C3 = "arith.max"(%R2.0xa80, %C-45408.0, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B803C3 = "arith.min"(%R2.0xa80, %C45408.0, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B804C3 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B805C3 = "arith.cast"(%R2.0x700, %D207C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B806C3 = "arith.mul"(%R0.0x800, %C0.693359375, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B807C3 = "arith.sub"(%R2.0xa80, %R2.0x700, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B808C3 = "arith.cast"(%R0.0x800, %D207C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B809C3 = "arith.min"(%R2.0xa80, %C15, %D207C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B810C3 = "arith.max"(%R0.0x800, %C-15, %D207C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B811C3 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D207C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B812C3 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D207C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B813C3 = "arith.mul"(%R2.0xa80, %R0.0x800, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B814C3 = "arith.add"(%R0.0x800, %C1.0, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B815C3 = "arith.div"(%C1.0, %R2.0x700, %D207C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B816C3 = "arith.mul"(%R0.0x800, %R1, %D207C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c4b0, %D208C3 = "dma.tensor"(%R0.0x800, %B816C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B817C3, %msg49 = "system.send_msg"(%D208C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D209C3, %msg49 = "dma.sys.sys_send"(%B817C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D205C4, %msg49 = "@core_4"(%D195C4, %msg48) {
CHECK:          %B777C4 = "system.wait_msg"(%D195C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D196C4 = "dma.sys.sys_wait"(%B777C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D197C4 = "dma.tensor"(%L30.0x6980000640, %B777C4) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D198C4 = "dma.tensor"(%L30.0x69800c8640, %B777C4) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B778C4 = "arith.copy"(%R2, %D198C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B779C4 = "arith.copy"(%R3, %D198C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D199C4 = "dma.tensor"(%G1.0x864000, %B777C4) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D200C4 = "dma.tensor"(%G1.0x863000, %B777C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D201C4 = "dma.tensor"(%G1.0x884000, %B777C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D202C4 = "dma.tensor"(%G1.0x885000, %B777C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B780C4 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D202C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980320640, %D203C4 = "dma.tensor"(%R1, %B779C4) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B781C4 = "tsbc.s_bc"(%R0.0x580, %D203C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B782C4 = "arith.sub"(%C0.0, %R3, %D203C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B783C4 = "arith.max"(%R4.0x580, %C-45408.0, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B784C4 = "arith.min"(%R4.0x580, %C45408.0, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B785C4 = "arith.mul"(%R4.0x580, %C1.4423828125, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B786C4 = "arith.cast"(%R4.0x200, %D203C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B787C4 = "arith.mul"(%R1.0x380, %C0.693359375, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B788C4 = "arith.sub"(%R4.0x580, %R4.0x200, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B789C4 = "arith.cast"(%R1.0x380, %D203C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B790C4 = "arith.min"(%R4.0x580, %C15, %D203C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B791C4 = "arith.max"(%R1.0x380, %C-15, %D203C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B792C4 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D203C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B793C4 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D203C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B794C4 = "arith.mul"(%R4.0x580, %R1.0x380, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B795C4 = "arith.add"(%R1.0x380, %C1.0, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B796C4 = "arith.div"(%C1.0, %R4.0x200, %D203C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B797C4 = "arith.mul"(%R1.0x380, %R3, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B798C4 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D203C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B799C4 = "tsbc.s_bc"(%R0.0x580, %D203C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B800C4 = "arith.sub"(%C0.0, %R1, %D203C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B801C4 = "arith.max"(%R2.0xa80, %C-45408.0, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B802C4 = "arith.min"(%R2.0xa80, %C45408.0, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B803C4 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B804C4 = "arith.cast"(%R2.0x700, %D203C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B805C4 = "arith.mul"(%R0.0x800, %C0.693359375, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B806C4 = "arith.sub"(%R2.0xa80, %R2.0x700, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B807C4 = "arith.cast"(%R0.0x800, %D203C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B808C4 = "arith.min"(%R2.0xa80, %C15, %D203C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B809C4 = "arith.max"(%R0.0x800, %C-15, %D203C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B810C4 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D203C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B811C4 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D203C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B812C4 = "arith.mul"(%R2.0xa80, %R0.0x800, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B813C4 = "arith.add"(%R0.0x800, %C1.0, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B814C4 = "arith.div"(%C1.0, %R2.0x700, %D203C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B815C4 = "arith.mul"(%R0.0x800, %R1, %D203C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c640, %D204C4 = "dma.tensor"(%R0.0x800, %B815C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B816C4, %msg49 = "system.send_msg"(%D204C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D205C4, %msg49 = "dma.sys.sys_send"(%B816C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D205C5, %msg49 = "@core_5"(%D195C5, %msg48) {
CHECK:          %B777C5 = "system.wait_msg"(%D195C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D196C5 = "dma.sys.sys_wait"(%B777C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D197C5 = "dma.tensor"(%L30.0x69800007d0, %B777C5) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D198C5 = "dma.tensor"(%L30.0x69800c87d0, %B777C5) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B778C5 = "arith.copy"(%R2, %D198C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B779C5 = "arith.copy"(%R3, %D198C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D199C5 = "dma.tensor"(%G1.0x864000, %B777C5) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D200C5 = "dma.tensor"(%G1.0x863000, %B777C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D201C5 = "dma.tensor"(%G1.0x884000, %B777C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D202C5 = "dma.tensor"(%G1.0x885000, %B777C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B780C5 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D202C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69803207d0, %D203C5 = "dma.tensor"(%R1, %B779C5) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B781C5 = "tsbc.s_bc"(%R0.0x580, %D203C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B782C5 = "arith.sub"(%C0.0, %R3, %D203C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B783C5 = "arith.max"(%R4.0x580, %C-45408.0, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B784C5 = "arith.min"(%R4.0x580, %C45408.0, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B785C5 = "arith.mul"(%R4.0x580, %C1.4423828125, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B786C5 = "arith.cast"(%R4.0x200, %D203C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B787C5 = "arith.mul"(%R1.0x380, %C0.693359375, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B788C5 = "arith.sub"(%R4.0x580, %R4.0x200, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B789C5 = "arith.cast"(%R1.0x380, %D203C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B790C5 = "arith.min"(%R4.0x580, %C15, %D203C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B791C5 = "arith.max"(%R1.0x380, %C-15, %D203C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B792C5 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D203C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B793C5 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D203C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B794C5 = "arith.mul"(%R4.0x580, %R1.0x380, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B795C5 = "arith.add"(%R1.0x380, %C1.0, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B796C5 = "arith.div"(%C1.0, %R4.0x200, %D203C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B797C5 = "arith.mul"(%R1.0x380, %R3, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B798C5 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D203C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B799C5 = "tsbc.s_bc"(%R0.0x580, %D203C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B800C5 = "arith.sub"(%C0.0, %R1, %D203C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B801C5 = "arith.max"(%R2.0xa80, %C-45408.0, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B802C5 = "arith.min"(%R2.0xa80, %C45408.0, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B803C5 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B804C5 = "arith.cast"(%R2.0x700, %D203C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B805C5 = "arith.mul"(%R0.0x800, %C0.693359375, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B806C5 = "arith.sub"(%R2.0xa80, %R2.0x700, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B807C5 = "arith.cast"(%R0.0x800, %D203C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B808C5 = "arith.min"(%R2.0xa80, %C15, %D203C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B809C5 = "arith.max"(%R0.0x800, %C-15, %D203C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B810C5 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D203C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B811C5 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D203C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B812C5 = "arith.mul"(%R2.0xa80, %R0.0x800, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B813C5 = "arith.add"(%R0.0x800, %C1.0, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B814C5 = "arith.div"(%C1.0, %R2.0x700, %D203C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B815C5 = "arith.mul"(%R0.0x800, %R1, %D203C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c7d0, %D204C5 = "dma.tensor"(%R0.0x800, %B815C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B816C5, %msg49 = "system.send_msg"(%D204C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D205C5, %msg49 = "dma.sys.sys_send"(%B816C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D201C6, %msg49 = "@core_6"(%D191C6, %msg48) {
CHECK:          %B704C6 = "system.wait_msg"(%D191C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D192C6 = "dma.sys.sys_wait"(%B704C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D193C6 = "dma.tensor"(%L30.0x6980000960, %B704C6) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D194C6 = "dma.tensor"(%L30.0x69800c8960, %B704C6) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B705C6 = "arith.copy"(%R2, %D194C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B706C6 = "arith.copy"(%R3, %D194C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D195C6 = "dma.tensor"(%G1.0x864000, %B704C6) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D196C6 = "dma.tensor"(%G1.0x863000, %B704C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D197C6 = "dma.tensor"(%G1.0x884000, %B704C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D198C6 = "dma.tensor"(%G1.0x885000, %B704C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B707C6 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D198C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980320960, %D199C6 = "dma.tensor"(%R1, %B706C6) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B708C6 = "tsbc.s_bc"(%R0.0x580, %D199C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B709C6 = "arith.sub"(%C0.0, %R3, %D199C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B710C6 = "arith.max"(%R4.0x580, %C-45408.0, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B711C6 = "arith.min"(%R4.0x580, %C45408.0, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B712C6 = "arith.mul"(%R4.0x580, %C1.4423828125, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B713C6 = "arith.cast"(%R4.0x200, %D199C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B714C6 = "arith.mul"(%R1.0x380, %C0.693359375, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B715C6 = "arith.sub"(%R4.0x580, %R4.0x200, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B716C6 = "arith.cast"(%R1.0x380, %D199C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B717C6 = "arith.min"(%R4.0x580, %C15, %D199C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B718C6 = "arith.max"(%R1.0x380, %C-15, %D199C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B719C6 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D199C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B720C6 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D199C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B721C6 = "arith.mul"(%R4.0x580, %R1.0x380, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B722C6 = "arith.add"(%R1.0x380, %C1.0, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B723C6 = "arith.div"(%C1.0, %R4.0x200, %D199C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B724C6 = "arith.mul"(%R1.0x380, %R3, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B725C6 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D199C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B726C6 = "tsbc.s_bc"(%R0.0x580, %D199C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B727C6 = "arith.sub"(%C0.0, %R1, %D199C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B728C6 = "arith.max"(%R2.0xa80, %C-45408.0, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B729C6 = "arith.min"(%R2.0xa80, %C45408.0, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B730C6 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B731C6 = "arith.cast"(%R2.0x700, %D199C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B732C6 = "arith.mul"(%R0.0x800, %C0.693359375, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B733C6 = "arith.sub"(%R2.0xa80, %R2.0x700, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B734C6 = "arith.cast"(%R0.0x800, %D199C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B735C6 = "arith.min"(%R2.0xa80, %C15, %D199C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B736C6 = "arith.max"(%R0.0x800, %C-15, %D199C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B737C6 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D199C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B738C6 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D199C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B739C6 = "arith.mul"(%R2.0xa80, %R0.0x800, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B740C6 = "arith.add"(%R0.0x800, %C1.0, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B741C6 = "arith.div"(%C1.0, %R2.0x700, %D199C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B742C6 = "arith.mul"(%R0.0x800, %R1, %D199C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076c960, %D200C6 = "dma.tensor"(%R0.0x800, %B742C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B743C6, %msg49 = "system.send_msg"(%D200C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D201C6, %msg49 = "dma.sys.sys_send"(%B743C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D189C7, %msg49 = "@core_7"(%D179C7, %msg48) {
CHECK:          %B631C7 = "system.wait_msg"(%D179C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D180C7 = "dma.sys.sys_wait"(%B631C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R2, %D181C7 = "dma.tensor"(%L30.0x6980000af0, %B631C7) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %D182C7 = "dma.tensor"(%L30.0x69800c8af0, %B631C7) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B632C7 = "arith.copy"(%R2, %D182C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R1.0x700, %B633C7 = "arith.copy"(%R3, %D182C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R0, %D183C7 = "dma.tensor"(%G1.0x864000, %B631C7) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R4.0x940, %D184C7 = "dma.tensor"(%G1.0x863000, %B631C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R5, %D185C7 = "dma.tensor"(%G1.0x884000, %B631C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4, %D186C7 = "dma.tensor"(%G1.0x885000, %B631C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R3, %B634C7 = "conv.normal"(%R1, %R0, %R4.0x940, %C0.0, %D186C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980320af0, %D187C7 = "dma.tensor"(%R1, %B633C7) : (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none)
CHECK:          %R4.0x900, %B635C7 = "tsbc.s_bc"(%R0.0x580, %D187C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x580, %B636C7 = "arith.sub"(%C0.0, %R3, %D187C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B637C7 = "arith.max"(%R4.0x580, %C-45408.0, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B638C7 = "arith.min"(%R4.0x580, %C45408.0, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B639C7 = "arith.mul"(%R4.0x580, %C1.4423828125, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B640C7 = "arith.cast"(%R4.0x200, %D187C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B641C7 = "arith.mul"(%R1.0x380, %C0.693359375, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B642C7 = "arith.sub"(%R4.0x580, %R4.0x200, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B643C7 = "arith.cast"(%R1.0x380, %D187C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B644C7 = "arith.min"(%R4.0x580, %C15, %D187C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x580, %B645C7 = "arith.max"(%R1.0x380, %C-15, %D187C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x380, %B646C7 = "arith.add_satu"(%R4.0x580, %C15, %C10, %D187C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x580, %B647C7 = "sfu.taylor_4x"(%R4.0x200, %R4.0x900, %D187C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B648C7 = "arith.mul"(%R4.0x580, %R1.0x380, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x200, %B649C7 = "arith.add"(%R1.0x380, %C1.0, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B650C7 = "arith.div"(%C1.0, %R4.0x200, %D187C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x380, %B651C7 = "arith.mul"(%R1.0x380, %R3, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B652C7 = "conv.normal"(%R1.0x380, %R4, %R5, %C0.0, %D187C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xe00, %B653C7 = "tsbc.s_bc"(%R0.0x580, %D187C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0xa80, %B654C7 = "arith.sub"(%C0.0, %R1, %D187C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B655C7 = "arith.max"(%R2.0xa80, %C-45408.0, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B656C7 = "arith.min"(%R2.0xa80, %C45408.0, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B657C7 = "arith.mul"(%R2.0xa80, %C1.4423828125, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B658C7 = "arith.cast"(%R2.0x700, %D187C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B659C7 = "arith.mul"(%R0.0x800, %C0.693359375, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B660C7 = "arith.sub"(%R2.0xa80, %R2.0x700, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B661C7 = "arith.cast"(%R0.0x800, %D187C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B662C7 = "arith.min"(%R2.0xa80, %C15, %D187C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0xa80, %B663C7 = "arith.max"(%R0.0x800, %C-15, %D187C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x800, %B664C7 = "arith.add_satu"(%R2.0xa80, %C15, %C10, %D187C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0xa80, %B665C7 = "sfu.taylor_4x"(%R2.0x700, %R2.0xe00, %D187C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B666C7 = "arith.mul"(%R2.0xa80, %R0.0x800, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x700, %B667C7 = "arith.add"(%R0.0x800, %C1.0, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B668C7 = "arith.div"(%C1.0, %R2.0x700, %D187C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x800, %B669C7 = "arith.mul"(%R0.0x800, %R1, %D187C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x698076caf0, %D188C7 = "dma.tensor"(%R0.0x800, %B669C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B670C7, %msg49 = "system.send_msg"(%D188C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D189C7, %msg49 = "dma.sys.sys_send"(%B670C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D213C0, %msg48 = "@core_0"(%D211C0, %msg49) {
CHECK:          %B821C0 = "system.wait_msg"(%D211C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D212C0 = "dma.sys.sys_wait"(%B821C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B822C0, %msg48 = "system.send_msg"(%D212C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D213C0, %msg48 = "dma.sys.sys_send"(%B822C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D211C1, %msg48 = "@core_1"(%D209C1, %msg49) {
CHECK:          %B818C1 = "system.wait_msg"(%D209C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D210C1 = "dma.sys.sys_wait"(%B818C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B819C1, %msg48 = "system.send_msg"(%D210C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D211C1, %msg48 = "dma.sys.sys_send"(%B819C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D211C2, %msg48 = "@core_2"(%D209C2, %msg49) {
CHECK:          %B818C2 = "system.wait_msg"(%D209C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D210C2 = "dma.sys.sys_wait"(%B818C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B819C2, %msg48 = "system.send_msg"(%D210C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D211C2, %msg48 = "dma.sys.sys_send"(%B819C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D211C3, %msg48 = "@core_3"(%D209C3, %msg49) {
CHECK:          %B818C3 = "system.wait_msg"(%D209C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D210C3 = "dma.sys.sys_wait"(%B818C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B819C3, %msg48 = "system.send_msg"(%D210C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D211C3, %msg48 = "dma.sys.sys_send"(%B819C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D207C4, %msg48 = "@core_4"(%D205C4, %msg49) {
CHECK:          %B817C4 = "system.wait_msg"(%D205C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D206C4 = "dma.sys.sys_wait"(%B817C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B818C4, %msg48 = "system.send_msg"(%D206C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D207C4, %msg48 = "dma.sys.sys_send"(%B818C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D207C5, %msg48 = "@core_5"(%D205C5, %msg49) {
CHECK:          %B817C5 = "system.wait_msg"(%D205C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D206C5 = "dma.sys.sys_wait"(%B817C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B818C5, %msg48 = "system.send_msg"(%D206C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D207C5, %msg48 = "dma.sys.sys_send"(%B818C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D203C6, %msg48 = "@core_6"(%D201C6, %msg49) {
CHECK:          %B744C6 = "system.wait_msg"(%D201C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D202C6 = "dma.sys.sys_wait"(%B744C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B745C6, %msg48 = "system.send_msg"(%D202C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D203C6, %msg48 = "dma.sys.sys_send"(%B745C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D191C7, %msg48 = "@core_7"(%D189C7, %msg49) {
CHECK:          %B671C7 = "system.wait_msg"(%D189C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D190C7 = "dma.sys.sys_wait"(%B671C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B672C7, %msg48 = "system.send_msg"(%D190C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D191C7, %msg48 = "dma.sys.sys_send"(%B672C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D233C0, %msg49 = "@core_0"(%D213C0, %msg48) {
CHECK:          %B823C0 = "system.wait_msg"(%D213C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D214C0 = "dma.sys.sys_wait"(%B823C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D215C0 = "dma.tensor"(%G1.0x88d000, %B823C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D216C0 = "dma.tensor"(%G1.0x88e000, %B823C0) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D217C0 = "dma.tensor"(%L30.0x698076c000, %B823C0) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4, %B824C0 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D217C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D218C0 = "dma.tensor"(%G1.0x8d7000, %B823C0) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D219C0 = "dma.tensor"(%G1.0x92a000, %B823C0) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D220C0 = "dma.tensor"(%G1.0x929000, %B823C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D221C0 = "dma.tensor"(%G1.0x932000, %B823C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D222C0 = "dma.tensor"(%G1.0x933000, %B823C0) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B825C0 = "tsbc.s_bc"(%R0.0x580, %D222C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B826C0 = "arith.sub"(%C0.0, %R4, %D222C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B827C0 = "arith.max"(%R1.0xf80, %C-45408.0, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B828C0 = "arith.min"(%R1.0xf80, %C45408.0, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B829C0 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B830C0 = "arith.cast"(%R1.0xc00, %D222C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B831C0 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B832C0 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B833C0 = "arith.cast"(%R0.0x1a00, %D222C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B834C0 = "arith.min"(%R1.0xf80, %C15, %D222C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B835C0 = "arith.max"(%R0.0x1a00, %C-15, %D222C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B836C0 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D222C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B837C0 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D222C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B838C0 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B839C0 = "arith.add"(%R0.0x1a00, %C1.0, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B840C0 = "arith.div"(%C1.0, %R1.0xc00, %D222C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B841C0 = "arith.mul"(%R0.0x1a00, %R4, %D222C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D223C0 = "dma.tensor"(%L30.0x6980320000, %B824C0) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D224C0 = "dma.tensor"(%G1.0x8d6000, %B824C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B842C0 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D224C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D225C0 = "dma.tensor"(%G1.0x8f8000, %B841C0) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B843C0 = "tsbc.s_bc"(%R0.0x580, %D225C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B844C0 = "arith.sub"(%C0.0, %R3, %D225C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B845C0 = "arith.max"(%R0.0x2100, %C-45408.0, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B846C0 = "arith.min"(%R0.0x2100, %C45408.0, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B847C0 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B848C0 = "arith.cast"(%R0.0x1d80, %D225C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B849C0 = "arith.mul"(%R1.0xc00, %C0.693359375, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B850C0 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B851C0 = "arith.cast"(%R1.0xc00, %D225C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B852C0 = "arith.min"(%R0.0x2100, %C15, %D225C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B853C0 = "arith.max"(%R1.0xc00, %C-15, %D225C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B854C0 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D225C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B855C0 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D225C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B856C0 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B857C0 = "arith.add"(%R1.0xc00, %C1.0, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B858C0 = "arith.div"(%C1.0, %R0.0x1d80, %D225C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B859C0 = "arith.mul"(%R1.0xc00, %R3, %D225C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D226C0 = "dma.tensor"(%G1.0x8f7000, %B842C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D227C0 = "dma.tensor"(%G1.0x918000, %B842C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B860C0 = "arith.copy"(%R0.0x1a00, %D227C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B861C0 = "arith.copy"(%R1.0xc00, %D227C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B862C0 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D227C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D228C0 = "dma.tensor"(%G1.0x919000, %B861C0) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B863C0 = "tsbc.s_bc"(%R0.0x580, %D228C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B864C0 = "arith.sub"(%C0.0, %R3, %D228C0) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B865C0 = "arith.max"(%R1.0x2000, %C-45408.0, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B866C0 = "arith.min"(%R1.0x2000, %C45408.0, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B867C0 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B868C0 = "arith.cast"(%R1.0x1900, %D228C0) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B869C0 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B870C0 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B871C0 = "arith.cast"(%R0.0x1a00, %D228C0) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B872C0 = "arith.min"(%R1.0x2000, %C15, %D228C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B873C0 = "arith.max"(%R0.0x1a00, %C-15, %D228C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B874C0 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D228C0) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B875C0 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D228C0) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B876C0 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B877C0 = "arith.add"(%R0.0x1a00, %C1.0, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B878C0 = "arith.div"(%C1.0, %R1.0x1900, %D228C0) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B879C0 = "arith.mul"(%R0.0x1a00, %R3, %D228C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B880C0 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D228C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B881C0 = "tsbc.s_bc"(%R0.0x580, %D228C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B882C0 = "arith.sub"(%C0.0, %R0.0x2100, %D228C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B883C0 = "arith.max"(%R0.0x2800, %C-45408.0, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B884C0 = "arith.min"(%R0.0x2800, %C45408.0, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B885C0 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B886C0 = "arith.cast"(%R0.0x2480, %D228C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B887C0 = "arith.mul"(%R3.0x700, %C0.693359375, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B888C0 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B889C0 = "arith.cast"(%R3.0x700, %D228C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B890C0 = "arith.min"(%R0.0x2800, %C15, %D228C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B891C0 = "arith.max"(%R3.0x700, %C-15, %D228C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B892C0 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D228C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B893C0 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D228C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B894C0 = "arith.mul"(%R0.0x2800, %R3.0x700, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B895C0 = "arith.add"(%R3.0x700, %C1.0, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B896C0 = "arith.div"(%C1.0, %R0.0x2480, %D228C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B897C0 = "arith.mul"(%R3.0x700, %R0.0x2100, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B898C0 = "arith.copy"(%R3.0x700, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B899C0 = "arith.copy"(%R3.0x700, %D228C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B900C0 = "arith.copy"(%R1.0xc00, %D228C0) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D229C0 = "dma.tensor"(%L30.0x69804b0000, %B862C0) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B901C0 = "arith.copy"(%R1.0xc00, %D229C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B902C0 = "arith.copy"(%R2, %D229C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B903C0 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D229C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980708000, %D230C0 = "dma.tensor"(%R3.0x700, %B902C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B904C0 = "tsbc.s_bc"(%R0.0x580, %D230C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B905C0 = "arith.sub"(%C0.0, %R1.0xc00, %D230C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B906C0 = "arith.max"(%R3.0x640, %C-45408.0, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B907C0 = "arith.min"(%R3.0x640, %C45408.0, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B908C0 = "arith.mul"(%R3.0x640, %C1.4423828125, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B909C0 = "arith.cast"(%R3, %D230C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B910C0 = "arith.mul"(%R2.0x640, %C0.693359375, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B911C0 = "arith.sub"(%R3.0x640, %R3, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B912C0 = "arith.cast"(%R2.0x640, %D230C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B913C0 = "arith.min"(%R3.0x640, %C15, %D230C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B914C0 = "arith.max"(%R2.0x640, %C-15, %D230C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B915C0 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D230C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B916C0 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D230C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B917C0 = "arith.mul"(%R3.0x640, %R2.0x640, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B918C0 = "arith.add"(%R2.0x640, %C1.0, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B919C0 = "arith.div"(%C1.0, %R3, %D230C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B920C0 = "arith.mul"(%R2.0x640, %R1.0xc00, %D230C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B921C0 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D230C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980000000, %D231C0 = "dma.tensor"(%R0.0x1a00, %B903C0) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B922C0 = "tsbc.s_bc"(%R0.0x580, %D231C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B923C0 = "arith.sub"(%C0.0, %R2, %D231C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B924C0 = "arith.max"(%R4.0x640, %C-45408.0, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B925C0 = "arith.min"(%R4.0x640, %C45408.0, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B926C0 = "arith.mul"(%R4.0x640, %C1.4423828125, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B927C0 = "arith.cast"(%R4, %D231C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B928C0 = "arith.mul"(%R1.0xc00, %C0.693359375, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B929C0 = "arith.sub"(%R4.0x640, %R4, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B930C0 = "arith.cast"(%R1.0xc00, %D231C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B931C0 = "arith.min"(%R4.0x640, %C15, %D231C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B932C0 = "arith.max"(%R1.0xc00, %C-15, %D231C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B933C0 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D231C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B934C0 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D231C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B935C0 = "arith.mul"(%R4.0x640, %R1.0xc00, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B936C0 = "arith.add"(%R1.0xc00, %C1.0, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B937C0 = "arith.div"(%C1.0, %R4, %D231C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B938C0 = "arith.mul"(%R1.0xc00, %R2, %D231C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980640000, %D232C0 = "dma.tensor"(%R1.0xc00, %B938C0) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B939C0, %msg49 = "system.send_msg"(%D232C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D233C0, %msg49 = "dma.sys.sys_send"(%B939C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D231C1, %msg49 = "@core_1"(%D211C1, %msg48) {
CHECK:          %B820C1 = "system.wait_msg"(%D211C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D212C1 = "dma.sys.sys_wait"(%B820C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D213C1 = "dma.tensor"(%G1.0x88d000, %B820C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D214C1 = "dma.tensor"(%G1.0x88e000, %B820C1) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D215C1 = "dma.tensor"(%L30.0x698076c140, %B820C1) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B821C1 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D215C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D216C1 = "dma.tensor"(%G1.0x8d7000, %B820C1) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D217C1 = "dma.tensor"(%G1.0x92a000, %B820C1) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D218C1 = "dma.tensor"(%G1.0x929000, %B820C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D219C1 = "dma.tensor"(%G1.0x932000, %B820C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D220C1 = "dma.tensor"(%G1.0x933000, %B820C1) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B822C1 = "tsbc.s_bc"(%R0.0x580, %D220C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B823C1 = "arith.sub"(%C0.0, %R4, %D220C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B824C1 = "arith.max"(%R1.0xf80, %C-45408.0, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B825C1 = "arith.min"(%R1.0xf80, %C45408.0, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B826C1 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B827C1 = "arith.cast"(%R1.0xc00, %D220C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B828C1 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B829C1 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B830C1 = "arith.cast"(%R0.0x1a00, %D220C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B831C1 = "arith.min"(%R1.0xf80, %C15, %D220C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B832C1 = "arith.max"(%R0.0x1a00, %C-15, %D220C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B833C1 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D220C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B834C1 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D220C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B835C1 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B836C1 = "arith.add"(%R0.0x1a00, %C1.0, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B837C1 = "arith.div"(%C1.0, %R1.0xc00, %D220C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B838C1 = "arith.mul"(%R0.0x1a00, %R4, %D220C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D221C1 = "dma.tensor"(%L30.0x6980320190, %B821C1) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D222C1 = "dma.tensor"(%G1.0x8d6000, %B821C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B839C1 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D222C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D223C1 = "dma.tensor"(%G1.0x8f8000, %B838C1) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B840C1 = "tsbc.s_bc"(%R0.0x580, %D223C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B841C1 = "arith.sub"(%C0.0, %R3, %D223C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B842C1 = "arith.max"(%R0.0x2100, %C-45408.0, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B843C1 = "arith.min"(%R0.0x2100, %C45408.0, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B844C1 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B845C1 = "arith.cast"(%R0.0x1d80, %D223C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B846C1 = "arith.mul"(%R1.0xc00, %C0.693359375, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B847C1 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B848C1 = "arith.cast"(%R1.0xc00, %D223C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B849C1 = "arith.min"(%R0.0x2100, %C15, %D223C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B850C1 = "arith.max"(%R1.0xc00, %C-15, %D223C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B851C1 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D223C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B852C1 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D223C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B853C1 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B854C1 = "arith.add"(%R1.0xc00, %C1.0, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B855C1 = "arith.div"(%C1.0, %R0.0x1d80, %D223C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B856C1 = "arith.mul"(%R1.0xc00, %R3, %D223C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D224C1 = "dma.tensor"(%G1.0x8f7000, %B839C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D225C1 = "dma.tensor"(%G1.0x918000, %B839C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B857C1 = "arith.copy"(%R0.0x1a00, %D225C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B858C1 = "arith.copy"(%R1.0xc00, %D225C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B859C1 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D225C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D226C1 = "dma.tensor"(%G1.0x919000, %B858C1) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B860C1 = "tsbc.s_bc"(%R0.0x580, %D226C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B861C1 = "arith.sub"(%C0.0, %R3, %D226C1) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B862C1 = "arith.max"(%R1.0x2000, %C-45408.0, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B863C1 = "arith.min"(%R1.0x2000, %C45408.0, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B864C1 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B865C1 = "arith.cast"(%R1.0x1900, %D226C1) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B866C1 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B867C1 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B868C1 = "arith.cast"(%R0.0x1a00, %D226C1) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B869C1 = "arith.min"(%R1.0x2000, %C15, %D226C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B870C1 = "arith.max"(%R0.0x1a00, %C-15, %D226C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B871C1 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D226C1) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B872C1 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D226C1) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B873C1 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B874C1 = "arith.add"(%R0.0x1a00, %C1.0, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B875C1 = "arith.div"(%C1.0, %R1.0x1900, %D226C1) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B876C1 = "arith.mul"(%R0.0x1a00, %R3, %D226C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B877C1 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D226C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B878C1 = "tsbc.s_bc"(%R0.0x580, %D226C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B879C1 = "arith.sub"(%C0.0, %R0.0x2100, %D226C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B880C1 = "arith.max"(%R0.0x2800, %C-45408.0, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B881C1 = "arith.min"(%R0.0x2800, %C45408.0, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B882C1 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B883C1 = "arith.cast"(%R0.0x2480, %D226C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B884C1 = "arith.mul"(%R3.0x700, %C0.693359375, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B885C1 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B886C1 = "arith.cast"(%R3.0x700, %D226C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B887C1 = "arith.min"(%R0.0x2800, %C15, %D226C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B888C1 = "arith.max"(%R3.0x700, %C-15, %D226C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B889C1 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D226C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B890C1 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D226C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B891C1 = "arith.mul"(%R0.0x2800, %R3.0x700, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B892C1 = "arith.add"(%R3.0x700, %C1.0, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B893C1 = "arith.div"(%C1.0, %R0.0x2480, %D226C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B894C1 = "arith.mul"(%R3.0x700, %R0.0x2100, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B895C1 = "arith.copy"(%R3.0x700, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B896C1 = "arith.copy"(%R3.0x700, %D226C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B897C1 = "arith.copy"(%R1.0xc00, %D226C1) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D227C1 = "dma.tensor"(%L30.0x69804b0640, %B859C1) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B898C1 = "arith.copy"(%R1.0xc00, %D227C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B899C1 = "arith.copy"(%R2, %D227C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B900C1 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D227C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980708190, %D228C1 = "dma.tensor"(%R3.0x700, %B899C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B901C1 = "tsbc.s_bc"(%R0.0x580, %D228C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B902C1 = "arith.sub"(%C0.0, %R1.0xc00, %D228C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B903C1 = "arith.max"(%R3.0x640, %C-45408.0, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B904C1 = "arith.min"(%R3.0x640, %C45408.0, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B905C1 = "arith.mul"(%R3.0x640, %C1.4423828125, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B906C1 = "arith.cast"(%R3, %D228C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B907C1 = "arith.mul"(%R2.0x640, %C0.693359375, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B908C1 = "arith.sub"(%R3.0x640, %R3, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B909C1 = "arith.cast"(%R2.0x640, %D228C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B910C1 = "arith.min"(%R3.0x640, %C15, %D228C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B911C1 = "arith.max"(%R2.0x640, %C-15, %D228C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B912C1 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D228C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B913C1 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D228C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B914C1 = "arith.mul"(%R3.0x640, %R2.0x640, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B915C1 = "arith.add"(%R2.0x640, %C1.0, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B916C1 = "arith.div"(%C1.0, %R3, %D228C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B917C1 = "arith.mul"(%R2.0x640, %R1.0xc00, %D228C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B918C1 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D228C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980000640, %D229C1 = "dma.tensor"(%R0.0x1a00, %B900C1) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B919C1 = "tsbc.s_bc"(%R0.0x580, %D229C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B920C1 = "arith.sub"(%C0.0, %R2, %D229C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B921C1 = "arith.max"(%R4.0x640, %C-45408.0, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B922C1 = "arith.min"(%R4.0x640, %C45408.0, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B923C1 = "arith.mul"(%R4.0x640, %C1.4423828125, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B924C1 = "arith.cast"(%R4, %D229C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B925C1 = "arith.mul"(%R1.0xc00, %C0.693359375, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B926C1 = "arith.sub"(%R4.0x640, %R4, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B927C1 = "arith.cast"(%R1.0xc00, %D229C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B928C1 = "arith.min"(%R4.0x640, %C15, %D229C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B929C1 = "arith.max"(%R1.0xc00, %C-15, %D229C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B930C1 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D229C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B931C1 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D229C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B932C1 = "arith.mul"(%R4.0x640, %R1.0xc00, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B933C1 = "arith.add"(%R1.0xc00, %C1.0, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B934C1 = "arith.div"(%C1.0, %R4, %D229C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B935C1 = "arith.mul"(%R1.0xc00, %R2, %D229C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980640640, %D230C1 = "dma.tensor"(%R1.0xc00, %B935C1) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B936C1, %msg49 = "system.send_msg"(%D230C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D231C1, %msg49 = "dma.sys.sys_send"(%B936C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D231C2, %msg49 = "@core_2"(%D211C2, %msg48) {
CHECK:          %B820C2 = "system.wait_msg"(%D211C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D212C2 = "dma.sys.sys_wait"(%B820C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D213C2 = "dma.tensor"(%G1.0x88d000, %B820C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D214C2 = "dma.tensor"(%G1.0x88e000, %B820C2) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D215C2 = "dma.tensor"(%L30.0x698076c2d0, %B820C2) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B821C2 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D215C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D216C2 = "dma.tensor"(%G1.0x8d7000, %B820C2) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D217C2 = "dma.tensor"(%G1.0x92a000, %B820C2) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D218C2 = "dma.tensor"(%G1.0x929000, %B820C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D219C2 = "dma.tensor"(%G1.0x932000, %B820C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D220C2 = "dma.tensor"(%G1.0x933000, %B820C2) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B822C2 = "tsbc.s_bc"(%R0.0x580, %D220C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B823C2 = "arith.sub"(%C0.0, %R4, %D220C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B824C2 = "arith.max"(%R1.0xf80, %C-45408.0, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B825C2 = "arith.min"(%R1.0xf80, %C45408.0, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B826C2 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B827C2 = "arith.cast"(%R1.0xc00, %D220C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B828C2 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B829C2 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B830C2 = "arith.cast"(%R0.0x1a00, %D220C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B831C2 = "arith.min"(%R1.0xf80, %C15, %D220C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B832C2 = "arith.max"(%R0.0x1a00, %C-15, %D220C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B833C2 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D220C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B834C2 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D220C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B835C2 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B836C2 = "arith.add"(%R0.0x1a00, %C1.0, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B837C2 = "arith.div"(%C1.0, %R1.0xc00, %D220C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B838C2 = "arith.mul"(%R0.0x1a00, %R4, %D220C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D221C2 = "dma.tensor"(%L30.0x6980320320, %B821C2) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D222C2 = "dma.tensor"(%G1.0x8d6000, %B821C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B839C2 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D222C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D223C2 = "dma.tensor"(%G1.0x8f8000, %B838C2) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B840C2 = "tsbc.s_bc"(%R0.0x580, %D223C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B841C2 = "arith.sub"(%C0.0, %R3, %D223C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B842C2 = "arith.max"(%R0.0x2100, %C-45408.0, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B843C2 = "arith.min"(%R0.0x2100, %C45408.0, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B844C2 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B845C2 = "arith.cast"(%R0.0x1d80, %D223C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B846C2 = "arith.mul"(%R1.0xc00, %C0.693359375, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B847C2 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B848C2 = "arith.cast"(%R1.0xc00, %D223C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B849C2 = "arith.min"(%R0.0x2100, %C15, %D223C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B850C2 = "arith.max"(%R1.0xc00, %C-15, %D223C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B851C2 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D223C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B852C2 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D223C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B853C2 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B854C2 = "arith.add"(%R1.0xc00, %C1.0, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B855C2 = "arith.div"(%C1.0, %R0.0x1d80, %D223C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B856C2 = "arith.mul"(%R1.0xc00, %R3, %D223C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D224C2 = "dma.tensor"(%G1.0x8f7000, %B839C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D225C2 = "dma.tensor"(%G1.0x918000, %B839C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B857C2 = "arith.copy"(%R0.0x1a00, %D225C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B858C2 = "arith.copy"(%R1.0xc00, %D225C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B859C2 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D225C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D226C2 = "dma.tensor"(%G1.0x919000, %B858C2) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B860C2 = "tsbc.s_bc"(%R0.0x580, %D226C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B861C2 = "arith.sub"(%C0.0, %R3, %D226C2) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B862C2 = "arith.max"(%R1.0x2000, %C-45408.0, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B863C2 = "arith.min"(%R1.0x2000, %C45408.0, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B864C2 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B865C2 = "arith.cast"(%R1.0x1900, %D226C2) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B866C2 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B867C2 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B868C2 = "arith.cast"(%R0.0x1a00, %D226C2) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B869C2 = "arith.min"(%R1.0x2000, %C15, %D226C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B870C2 = "arith.max"(%R0.0x1a00, %C-15, %D226C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B871C2 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D226C2) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B872C2 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D226C2) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B873C2 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B874C2 = "arith.add"(%R0.0x1a00, %C1.0, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B875C2 = "arith.div"(%C1.0, %R1.0x1900, %D226C2) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B876C2 = "arith.mul"(%R0.0x1a00, %R3, %D226C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B877C2 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D226C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B878C2 = "tsbc.s_bc"(%R0.0x580, %D226C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B879C2 = "arith.sub"(%C0.0, %R0.0x2100, %D226C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B880C2 = "arith.max"(%R0.0x2800, %C-45408.0, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B881C2 = "arith.min"(%R0.0x2800, %C45408.0, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B882C2 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B883C2 = "arith.cast"(%R0.0x2480, %D226C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B884C2 = "arith.mul"(%R3.0x700, %C0.693359375, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B885C2 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B886C2 = "arith.cast"(%R3.0x700, %D226C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B887C2 = "arith.min"(%R0.0x2800, %C15, %D226C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B888C2 = "arith.max"(%R3.0x700, %C-15, %D226C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B889C2 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D226C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B890C2 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D226C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B891C2 = "arith.mul"(%R0.0x2800, %R3.0x700, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B892C2 = "arith.add"(%R3.0x700, %C1.0, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B893C2 = "arith.div"(%C1.0, %R0.0x2480, %D226C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B894C2 = "arith.mul"(%R3.0x700, %R0.0x2100, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B895C2 = "arith.copy"(%R3.0x700, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B896C2 = "arith.copy"(%R3.0x700, %D226C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B897C2 = "arith.copy"(%R1.0xc00, %D226C2) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D227C2 = "dma.tensor"(%L30.0x69804b0c80, %B859C2) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B898C2 = "arith.copy"(%R1.0xc00, %D227C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B899C2 = "arith.copy"(%R2, %D227C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B900C2 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D227C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980708320, %D228C2 = "dma.tensor"(%R3.0x700, %B899C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B901C2 = "tsbc.s_bc"(%R0.0x580, %D228C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B902C2 = "arith.sub"(%C0.0, %R1.0xc00, %D228C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B903C2 = "arith.max"(%R3.0x640, %C-45408.0, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B904C2 = "arith.min"(%R3.0x640, %C45408.0, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B905C2 = "arith.mul"(%R3.0x640, %C1.4423828125, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B906C2 = "arith.cast"(%R3, %D228C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B907C2 = "arith.mul"(%R2.0x640, %C0.693359375, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B908C2 = "arith.sub"(%R3.0x640, %R3, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B909C2 = "arith.cast"(%R2.0x640, %D228C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B910C2 = "arith.min"(%R3.0x640, %C15, %D228C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B911C2 = "arith.max"(%R2.0x640, %C-15, %D228C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B912C2 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D228C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B913C2 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D228C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B914C2 = "arith.mul"(%R3.0x640, %R2.0x640, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B915C2 = "arith.add"(%R2.0x640, %C1.0, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B916C2 = "arith.div"(%C1.0, %R3, %D228C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B917C2 = "arith.mul"(%R2.0x640, %R1.0xc00, %D228C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B918C2 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D228C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980000c80, %D229C2 = "dma.tensor"(%R0.0x1a00, %B900C2) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B919C2 = "tsbc.s_bc"(%R0.0x580, %D229C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B920C2 = "arith.sub"(%C0.0, %R2, %D229C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B921C2 = "arith.max"(%R4.0x640, %C-45408.0, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B922C2 = "arith.min"(%R4.0x640, %C45408.0, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B923C2 = "arith.mul"(%R4.0x640, %C1.4423828125, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B924C2 = "arith.cast"(%R4, %D229C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B925C2 = "arith.mul"(%R1.0xc00, %C0.693359375, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B926C2 = "arith.sub"(%R4.0x640, %R4, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B927C2 = "arith.cast"(%R1.0xc00, %D229C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B928C2 = "arith.min"(%R4.0x640, %C15, %D229C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B929C2 = "arith.max"(%R1.0xc00, %C-15, %D229C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B930C2 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D229C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B931C2 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D229C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B932C2 = "arith.mul"(%R4.0x640, %R1.0xc00, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B933C2 = "arith.add"(%R1.0xc00, %C1.0, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B934C2 = "arith.div"(%C1.0, %R4, %D229C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B935C2 = "arith.mul"(%R1.0xc00, %R2, %D229C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980640c80, %D230C2 = "dma.tensor"(%R1.0xc00, %B935C2) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B936C2, %msg49 = "system.send_msg"(%D230C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D231C2, %msg49 = "dma.sys.sys_send"(%B936C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D231C3, %msg49 = "@core_3"(%D211C3, %msg48) {
CHECK:          %B820C3 = "system.wait_msg"(%D211C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D212C3 = "dma.sys.sys_wait"(%B820C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D213C3 = "dma.tensor"(%G1.0x88d000, %B820C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D214C3 = "dma.tensor"(%G1.0x88e000, %B820C3) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D215C3 = "dma.tensor"(%L30.0x698076c460, %B820C3) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B821C3 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D215C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D216C3 = "dma.tensor"(%G1.0x8d7000, %B820C3) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D217C3 = "dma.tensor"(%G1.0x92a000, %B820C3) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D218C3 = "dma.tensor"(%G1.0x929000, %B820C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D219C3 = "dma.tensor"(%G1.0x932000, %B820C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D220C3 = "dma.tensor"(%G1.0x933000, %B820C3) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B822C3 = "tsbc.s_bc"(%R0.0x580, %D220C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B823C3 = "arith.sub"(%C0.0, %R4, %D220C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B824C3 = "arith.max"(%R1.0xf80, %C-45408.0, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B825C3 = "arith.min"(%R1.0xf80, %C45408.0, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B826C3 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B827C3 = "arith.cast"(%R1.0xc00, %D220C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B828C3 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B829C3 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B830C3 = "arith.cast"(%R0.0x1a00, %D220C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B831C3 = "arith.min"(%R1.0xf80, %C15, %D220C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B832C3 = "arith.max"(%R0.0x1a00, %C-15, %D220C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B833C3 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D220C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B834C3 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D220C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B835C3 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B836C3 = "arith.add"(%R0.0x1a00, %C1.0, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B837C3 = "arith.div"(%C1.0, %R1.0xc00, %D220C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B838C3 = "arith.mul"(%R0.0x1a00, %R4, %D220C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D221C3 = "dma.tensor"(%L30.0x69803204b0, %B821C3) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D222C3 = "dma.tensor"(%G1.0x8d6000, %B821C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B839C3 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D222C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D223C3 = "dma.tensor"(%G1.0x8f8000, %B838C3) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B840C3 = "tsbc.s_bc"(%R0.0x580, %D223C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B841C3 = "arith.sub"(%C0.0, %R3, %D223C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B842C3 = "arith.max"(%R0.0x2100, %C-45408.0, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B843C3 = "arith.min"(%R0.0x2100, %C45408.0, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B844C3 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B845C3 = "arith.cast"(%R0.0x1d80, %D223C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B846C3 = "arith.mul"(%R1.0xc00, %C0.693359375, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B847C3 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B848C3 = "arith.cast"(%R1.0xc00, %D223C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B849C3 = "arith.min"(%R0.0x2100, %C15, %D223C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B850C3 = "arith.max"(%R1.0xc00, %C-15, %D223C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B851C3 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D223C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B852C3 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D223C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B853C3 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B854C3 = "arith.add"(%R1.0xc00, %C1.0, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B855C3 = "arith.div"(%C1.0, %R0.0x1d80, %D223C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B856C3 = "arith.mul"(%R1.0xc00, %R3, %D223C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D224C3 = "dma.tensor"(%G1.0x8f7000, %B839C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D225C3 = "dma.tensor"(%G1.0x918000, %B839C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B857C3 = "arith.copy"(%R0.0x1a00, %D225C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B858C3 = "arith.copy"(%R1.0xc00, %D225C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B859C3 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D225C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D226C3 = "dma.tensor"(%G1.0x919000, %B858C3) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B860C3 = "tsbc.s_bc"(%R0.0x580, %D226C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B861C3 = "arith.sub"(%C0.0, %R3, %D226C3) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B862C3 = "arith.max"(%R1.0x2000, %C-45408.0, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B863C3 = "arith.min"(%R1.0x2000, %C45408.0, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B864C3 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B865C3 = "arith.cast"(%R1.0x1900, %D226C3) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B866C3 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B867C3 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B868C3 = "arith.cast"(%R0.0x1a00, %D226C3) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B869C3 = "arith.min"(%R1.0x2000, %C15, %D226C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B870C3 = "arith.max"(%R0.0x1a00, %C-15, %D226C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B871C3 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D226C3) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B872C3 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D226C3) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B873C3 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B874C3 = "arith.add"(%R0.0x1a00, %C1.0, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B875C3 = "arith.div"(%C1.0, %R1.0x1900, %D226C3) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B876C3 = "arith.mul"(%R0.0x1a00, %R3, %D226C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B877C3 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D226C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B878C3 = "tsbc.s_bc"(%R0.0x580, %D226C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B879C3 = "arith.sub"(%C0.0, %R0.0x2100, %D226C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B880C3 = "arith.max"(%R0.0x2800, %C-45408.0, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B881C3 = "arith.min"(%R0.0x2800, %C45408.0, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B882C3 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B883C3 = "arith.cast"(%R0.0x2480, %D226C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B884C3 = "arith.mul"(%R3.0x700, %C0.693359375, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B885C3 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B886C3 = "arith.cast"(%R3.0x700, %D226C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B887C3 = "arith.min"(%R0.0x2800, %C15, %D226C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B888C3 = "arith.max"(%R3.0x700, %C-15, %D226C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B889C3 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D226C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B890C3 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D226C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B891C3 = "arith.mul"(%R0.0x2800, %R3.0x700, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B892C3 = "arith.add"(%R3.0x700, %C1.0, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B893C3 = "arith.div"(%C1.0, %R0.0x2480, %D226C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B894C3 = "arith.mul"(%R3.0x700, %R0.0x2100, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B895C3 = "arith.copy"(%R3.0x700, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B896C3 = "arith.copy"(%R3.0x700, %D226C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B897C3 = "arith.copy"(%R1.0xc00, %D226C3) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D227C3 = "dma.tensor"(%L30.0x69804b12c0, %B859C3) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B898C3 = "arith.copy"(%R1.0xc00, %D227C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B899C3 = "arith.copy"(%R2, %D227C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B900C3 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D227C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807084b0, %D228C3 = "dma.tensor"(%R3.0x700, %B899C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B901C3 = "tsbc.s_bc"(%R0.0x580, %D228C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B902C3 = "arith.sub"(%C0.0, %R1.0xc00, %D228C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B903C3 = "arith.max"(%R3.0x640, %C-45408.0, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B904C3 = "arith.min"(%R3.0x640, %C45408.0, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B905C3 = "arith.mul"(%R3.0x640, %C1.4423828125, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B906C3 = "arith.cast"(%R3, %D228C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B907C3 = "arith.mul"(%R2.0x640, %C0.693359375, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B908C3 = "arith.sub"(%R3.0x640, %R3, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B909C3 = "arith.cast"(%R2.0x640, %D228C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B910C3 = "arith.min"(%R3.0x640, %C15, %D228C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B911C3 = "arith.max"(%R2.0x640, %C-15, %D228C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B912C3 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D228C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B913C3 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D228C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B914C3 = "arith.mul"(%R3.0x640, %R2.0x640, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B915C3 = "arith.add"(%R2.0x640, %C1.0, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B916C3 = "arith.div"(%C1.0, %R3, %D228C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B917C3 = "arith.mul"(%R2.0x640, %R1.0xc00, %D228C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B918C3 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D228C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69800012c0, %D229C3 = "dma.tensor"(%R0.0x1a00, %B900C3) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B919C3 = "tsbc.s_bc"(%R0.0x580, %D229C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B920C3 = "arith.sub"(%C0.0, %R2, %D229C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B921C3 = "arith.max"(%R4.0x640, %C-45408.0, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B922C3 = "arith.min"(%R4.0x640, %C45408.0, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B923C3 = "arith.mul"(%R4.0x640, %C1.4423828125, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B924C3 = "arith.cast"(%R4, %D229C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B925C3 = "arith.mul"(%R1.0xc00, %C0.693359375, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B926C3 = "arith.sub"(%R4.0x640, %R4, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B927C3 = "arith.cast"(%R1.0xc00, %D229C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B928C3 = "arith.min"(%R4.0x640, %C15, %D229C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B929C3 = "arith.max"(%R1.0xc00, %C-15, %D229C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B930C3 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D229C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B931C3 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D229C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B932C3 = "arith.mul"(%R4.0x640, %R1.0xc00, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B933C3 = "arith.add"(%R1.0xc00, %C1.0, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B934C3 = "arith.div"(%C1.0, %R4, %D229C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B935C3 = "arith.mul"(%R1.0xc00, %R2, %D229C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69806412c0, %D230C3 = "dma.tensor"(%R1.0xc00, %B935C3) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B936C3, %msg49 = "system.send_msg"(%D230C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D231C3, %msg49 = "dma.sys.sys_send"(%B936C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D227C4, %msg49 = "@core_4"(%D207C4, %msg48) {
CHECK:          %B819C4 = "system.wait_msg"(%D207C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D208C4 = "dma.sys.sys_wait"(%B819C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D209C4 = "dma.tensor"(%G1.0x88d000, %B819C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D210C4 = "dma.tensor"(%G1.0x88e000, %B819C4) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D211C4 = "dma.tensor"(%L30.0x698076c5f0, %B819C4) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B820C4 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D211C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D212C4 = "dma.tensor"(%G1.0x8d7000, %B819C4) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D213C4 = "dma.tensor"(%G1.0x92a000, %B819C4) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D214C4 = "dma.tensor"(%G1.0x929000, %B819C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D215C4 = "dma.tensor"(%G1.0x932000, %B819C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D216C4 = "dma.tensor"(%G1.0x933000, %B819C4) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B821C4 = "tsbc.s_bc"(%R0.0x580, %D216C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B822C4 = "arith.sub"(%C0.0, %R4, %D216C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B823C4 = "arith.max"(%R1.0xf80, %C-45408.0, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B824C4 = "arith.min"(%R1.0xf80, %C45408.0, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B825C4 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B826C4 = "arith.cast"(%R1.0xc00, %D216C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B827C4 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B828C4 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B829C4 = "arith.cast"(%R0.0x1a00, %D216C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B830C4 = "arith.min"(%R1.0xf80, %C15, %D216C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B831C4 = "arith.max"(%R0.0x1a00, %C-15, %D216C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B832C4 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D216C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B833C4 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D216C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B834C4 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B835C4 = "arith.add"(%R0.0x1a00, %C1.0, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B836C4 = "arith.div"(%C1.0, %R1.0xc00, %D216C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B837C4 = "arith.mul"(%R0.0x1a00, %R4, %D216C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D217C4 = "dma.tensor"(%L30.0x6980320640, %B820C4) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D218C4 = "dma.tensor"(%G1.0x8d6000, %B820C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B838C4 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D218C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D219C4 = "dma.tensor"(%G1.0x8f8000, %B837C4) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B839C4 = "tsbc.s_bc"(%R0.0x580, %D219C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B840C4 = "arith.sub"(%C0.0, %R3, %D219C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B841C4 = "arith.max"(%R0.0x2100, %C-45408.0, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B842C4 = "arith.min"(%R0.0x2100, %C45408.0, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B843C4 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B844C4 = "arith.cast"(%R0.0x1d80, %D219C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B845C4 = "arith.mul"(%R1.0xc00, %C0.693359375, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B846C4 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B847C4 = "arith.cast"(%R1.0xc00, %D219C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B848C4 = "arith.min"(%R0.0x2100, %C15, %D219C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B849C4 = "arith.max"(%R1.0xc00, %C-15, %D219C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B850C4 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D219C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B851C4 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D219C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B852C4 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B853C4 = "arith.add"(%R1.0xc00, %C1.0, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B854C4 = "arith.div"(%C1.0, %R0.0x1d80, %D219C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B855C4 = "arith.mul"(%R1.0xc00, %R3, %D219C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D220C4 = "dma.tensor"(%G1.0x8f7000, %B838C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D221C4 = "dma.tensor"(%G1.0x918000, %B838C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B856C4 = "arith.copy"(%R0.0x1a00, %D221C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B857C4 = "arith.copy"(%R1.0xc00, %D221C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B858C4 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D221C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D222C4 = "dma.tensor"(%G1.0x919000, %B857C4) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B859C4 = "tsbc.s_bc"(%R0.0x580, %D222C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B860C4 = "arith.sub"(%C0.0, %R3, %D222C4) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B861C4 = "arith.max"(%R1.0x2000, %C-45408.0, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B862C4 = "arith.min"(%R1.0x2000, %C45408.0, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B863C4 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B864C4 = "arith.cast"(%R1.0x1900, %D222C4) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B865C4 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B866C4 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B867C4 = "arith.cast"(%R0.0x1a00, %D222C4) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B868C4 = "arith.min"(%R1.0x2000, %C15, %D222C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B869C4 = "arith.max"(%R0.0x1a00, %C-15, %D222C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B870C4 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D222C4) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B871C4 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D222C4) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B872C4 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B873C4 = "arith.add"(%R0.0x1a00, %C1.0, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B874C4 = "arith.div"(%C1.0, %R1.0x1900, %D222C4) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B875C4 = "arith.mul"(%R0.0x1a00, %R3, %D222C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B876C4 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D222C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B877C4 = "tsbc.s_bc"(%R0.0x580, %D222C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B878C4 = "arith.sub"(%C0.0, %R0.0x2100, %D222C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B879C4 = "arith.max"(%R0.0x2800, %C-45408.0, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B880C4 = "arith.min"(%R0.0x2800, %C45408.0, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B881C4 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B882C4 = "arith.cast"(%R0.0x2480, %D222C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B883C4 = "arith.mul"(%R3.0x700, %C0.693359375, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B884C4 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B885C4 = "arith.cast"(%R3.0x700, %D222C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B886C4 = "arith.min"(%R0.0x2800, %C15, %D222C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B887C4 = "arith.max"(%R3.0x700, %C-15, %D222C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B888C4 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D222C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B889C4 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D222C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B890C4 = "arith.mul"(%R0.0x2800, %R3.0x700, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B891C4 = "arith.add"(%R3.0x700, %C1.0, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B892C4 = "arith.div"(%C1.0, %R0.0x2480, %D222C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B893C4 = "arith.mul"(%R3.0x700, %R0.0x2100, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B894C4 = "arith.copy"(%R3.0x700, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B895C4 = "arith.copy"(%R3.0x700, %D222C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B896C4 = "arith.copy"(%R1.0xc00, %D222C4) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D223C4 = "dma.tensor"(%L30.0x69804b1900, %B858C4) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B897C4 = "arith.copy"(%R1.0xc00, %D223C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B898C4 = "arith.copy"(%R2, %D223C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B899C4 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D223C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980708640, %D224C4 = "dma.tensor"(%R3.0x700, %B898C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B900C4 = "tsbc.s_bc"(%R0.0x580, %D224C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B901C4 = "arith.sub"(%C0.0, %R1.0xc00, %D224C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B902C4 = "arith.max"(%R3.0x640, %C-45408.0, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B903C4 = "arith.min"(%R3.0x640, %C45408.0, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B904C4 = "arith.mul"(%R3.0x640, %C1.4423828125, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B905C4 = "arith.cast"(%R3, %D224C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B906C4 = "arith.mul"(%R2.0x640, %C0.693359375, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B907C4 = "arith.sub"(%R3.0x640, %R3, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B908C4 = "arith.cast"(%R2.0x640, %D224C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B909C4 = "arith.min"(%R3.0x640, %C15, %D224C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B910C4 = "arith.max"(%R2.0x640, %C-15, %D224C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B911C4 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D224C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B912C4 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D224C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B913C4 = "arith.mul"(%R3.0x640, %R2.0x640, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B914C4 = "arith.add"(%R2.0x640, %C1.0, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B915C4 = "arith.div"(%C1.0, %R3, %D224C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B916C4 = "arith.mul"(%R2.0x640, %R1.0xc00, %D224C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B917C4 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D224C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980001900, %D225C4 = "dma.tensor"(%R0.0x1a00, %B899C4) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B918C4 = "tsbc.s_bc"(%R0.0x580, %D225C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B919C4 = "arith.sub"(%C0.0, %R2, %D225C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B920C4 = "arith.max"(%R4.0x640, %C-45408.0, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B921C4 = "arith.min"(%R4.0x640, %C45408.0, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B922C4 = "arith.mul"(%R4.0x640, %C1.4423828125, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B923C4 = "arith.cast"(%R4, %D225C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B924C4 = "arith.mul"(%R1.0xc00, %C0.693359375, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B925C4 = "arith.sub"(%R4.0x640, %R4, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B926C4 = "arith.cast"(%R1.0xc00, %D225C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B927C4 = "arith.min"(%R4.0x640, %C15, %D225C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B928C4 = "arith.max"(%R1.0xc00, %C-15, %D225C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B929C4 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D225C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B930C4 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D225C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B931C4 = "arith.mul"(%R4.0x640, %R1.0xc00, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B932C4 = "arith.add"(%R1.0xc00, %C1.0, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B933C4 = "arith.div"(%C1.0, %R4, %D225C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B934C4 = "arith.mul"(%R1.0xc00, %R2, %D225C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980641900, %D226C4 = "dma.tensor"(%R1.0xc00, %B934C4) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B935C4, %msg49 = "system.send_msg"(%D226C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D227C4, %msg49 = "dma.sys.sys_send"(%B935C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D227C5, %msg49 = "@core_5"(%D207C5, %msg48) {
CHECK:          %B819C5 = "system.wait_msg"(%D207C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D208C5 = "dma.sys.sys_wait"(%B819C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D209C5 = "dma.tensor"(%G1.0x88d000, %B819C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D210C5 = "dma.tensor"(%G1.0x88e000, %B819C5) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D211C5 = "dma.tensor"(%L30.0x698076c780, %B819C5) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B820C5 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D211C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D212C5 = "dma.tensor"(%G1.0x8d7000, %B819C5) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D213C5 = "dma.tensor"(%G1.0x92a000, %B819C5) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D214C5 = "dma.tensor"(%G1.0x929000, %B819C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D215C5 = "dma.tensor"(%G1.0x932000, %B819C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D216C5 = "dma.tensor"(%G1.0x933000, %B819C5) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B821C5 = "tsbc.s_bc"(%R0.0x580, %D216C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B822C5 = "arith.sub"(%C0.0, %R4, %D216C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B823C5 = "arith.max"(%R1.0xf80, %C-45408.0, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B824C5 = "arith.min"(%R1.0xf80, %C45408.0, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B825C5 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B826C5 = "arith.cast"(%R1.0xc00, %D216C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B827C5 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B828C5 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B829C5 = "arith.cast"(%R0.0x1a00, %D216C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B830C5 = "arith.min"(%R1.0xf80, %C15, %D216C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B831C5 = "arith.max"(%R0.0x1a00, %C-15, %D216C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B832C5 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D216C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B833C5 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D216C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B834C5 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B835C5 = "arith.add"(%R0.0x1a00, %C1.0, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B836C5 = "arith.div"(%C1.0, %R1.0xc00, %D216C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B837C5 = "arith.mul"(%R0.0x1a00, %R4, %D216C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D217C5 = "dma.tensor"(%L30.0x69803207d0, %B820C5) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D218C5 = "dma.tensor"(%G1.0x8d6000, %B820C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B838C5 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D218C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D219C5 = "dma.tensor"(%G1.0x8f8000, %B837C5) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B839C5 = "tsbc.s_bc"(%R0.0x580, %D219C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B840C5 = "arith.sub"(%C0.0, %R3, %D219C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B841C5 = "arith.max"(%R0.0x2100, %C-45408.0, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B842C5 = "arith.min"(%R0.0x2100, %C45408.0, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B843C5 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B844C5 = "arith.cast"(%R0.0x1d80, %D219C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B845C5 = "arith.mul"(%R1.0xc00, %C0.693359375, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B846C5 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B847C5 = "arith.cast"(%R1.0xc00, %D219C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B848C5 = "arith.min"(%R0.0x2100, %C15, %D219C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B849C5 = "arith.max"(%R1.0xc00, %C-15, %D219C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B850C5 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D219C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B851C5 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D219C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B852C5 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B853C5 = "arith.add"(%R1.0xc00, %C1.0, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B854C5 = "arith.div"(%C1.0, %R0.0x1d80, %D219C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B855C5 = "arith.mul"(%R1.0xc00, %R3, %D219C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D220C5 = "dma.tensor"(%G1.0x8f7000, %B838C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D221C5 = "dma.tensor"(%G1.0x918000, %B838C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B856C5 = "arith.copy"(%R0.0x1a00, %D221C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B857C5 = "arith.copy"(%R1.0xc00, %D221C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B858C5 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D221C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D222C5 = "dma.tensor"(%G1.0x919000, %B857C5) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B859C5 = "tsbc.s_bc"(%R0.0x580, %D222C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B860C5 = "arith.sub"(%C0.0, %R3, %D222C5) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B861C5 = "arith.max"(%R1.0x2000, %C-45408.0, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B862C5 = "arith.min"(%R1.0x2000, %C45408.0, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B863C5 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B864C5 = "arith.cast"(%R1.0x1900, %D222C5) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B865C5 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B866C5 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B867C5 = "arith.cast"(%R0.0x1a00, %D222C5) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B868C5 = "arith.min"(%R1.0x2000, %C15, %D222C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B869C5 = "arith.max"(%R0.0x1a00, %C-15, %D222C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B870C5 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D222C5) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B871C5 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D222C5) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B872C5 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B873C5 = "arith.add"(%R0.0x1a00, %C1.0, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B874C5 = "arith.div"(%C1.0, %R1.0x1900, %D222C5) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B875C5 = "arith.mul"(%R0.0x1a00, %R3, %D222C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B876C5 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D222C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B877C5 = "tsbc.s_bc"(%R0.0x580, %D222C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B878C5 = "arith.sub"(%C0.0, %R0.0x2100, %D222C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B879C5 = "arith.max"(%R0.0x2800, %C-45408.0, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B880C5 = "arith.min"(%R0.0x2800, %C45408.0, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B881C5 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B882C5 = "arith.cast"(%R0.0x2480, %D222C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B883C5 = "arith.mul"(%R3.0x700, %C0.693359375, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B884C5 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B885C5 = "arith.cast"(%R3.0x700, %D222C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B886C5 = "arith.min"(%R0.0x2800, %C15, %D222C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B887C5 = "arith.max"(%R3.0x700, %C-15, %D222C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B888C5 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D222C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B889C5 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D222C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B890C5 = "arith.mul"(%R0.0x2800, %R3.0x700, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B891C5 = "arith.add"(%R3.0x700, %C1.0, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B892C5 = "arith.div"(%C1.0, %R0.0x2480, %D222C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B893C5 = "arith.mul"(%R3.0x700, %R0.0x2100, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B894C5 = "arith.copy"(%R3.0x700, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B895C5 = "arith.copy"(%R3.0x700, %D222C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B896C5 = "arith.copy"(%R1.0xc00, %D222C5) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D223C5 = "dma.tensor"(%L30.0x69804b1f40, %B858C5) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B897C5 = "arith.copy"(%R1.0xc00, %D223C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B898C5 = "arith.copy"(%R2, %D223C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B899C5 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D223C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x69807087d0, %D224C5 = "dma.tensor"(%R3.0x700, %B898C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B900C5 = "tsbc.s_bc"(%R0.0x580, %D224C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B901C5 = "arith.sub"(%C0.0, %R1.0xc00, %D224C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B902C5 = "arith.max"(%R3.0x640, %C-45408.0, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B903C5 = "arith.min"(%R3.0x640, %C45408.0, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B904C5 = "arith.mul"(%R3.0x640, %C1.4423828125, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B905C5 = "arith.cast"(%R3, %D224C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B906C5 = "arith.mul"(%R2.0x640, %C0.693359375, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B907C5 = "arith.sub"(%R3.0x640, %R3, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B908C5 = "arith.cast"(%R2.0x640, %D224C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B909C5 = "arith.min"(%R3.0x640, %C15, %D224C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B910C5 = "arith.max"(%R2.0x640, %C-15, %D224C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B911C5 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D224C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B912C5 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D224C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B913C5 = "arith.mul"(%R3.0x640, %R2.0x640, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B914C5 = "arith.add"(%R2.0x640, %C1.0, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B915C5 = "arith.div"(%C1.0, %R3, %D224C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B916C5 = "arith.mul"(%R2.0x640, %R1.0xc00, %D224C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B917C5 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D224C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980001f40, %D225C5 = "dma.tensor"(%R0.0x1a00, %B899C5) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B918C5 = "tsbc.s_bc"(%R0.0x580, %D225C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B919C5 = "arith.sub"(%C0.0, %R2, %D225C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B920C5 = "arith.max"(%R4.0x640, %C-45408.0, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B921C5 = "arith.min"(%R4.0x640, %C45408.0, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B922C5 = "arith.mul"(%R4.0x640, %C1.4423828125, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B923C5 = "arith.cast"(%R4, %D225C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B924C5 = "arith.mul"(%R1.0xc00, %C0.693359375, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B925C5 = "arith.sub"(%R4.0x640, %R4, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B926C5 = "arith.cast"(%R1.0xc00, %D225C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B927C5 = "arith.min"(%R4.0x640, %C15, %D225C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B928C5 = "arith.max"(%R1.0xc00, %C-15, %D225C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B929C5 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D225C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B930C5 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D225C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B931C5 = "arith.mul"(%R4.0x640, %R1.0xc00, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B932C5 = "arith.add"(%R1.0xc00, %C1.0, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B933C5 = "arith.div"(%C1.0, %R4, %D225C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B934C5 = "arith.mul"(%R1.0xc00, %R2, %D225C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980641f40, %D226C5 = "dma.tensor"(%R1.0xc00, %B934C5) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B935C5, %msg49 = "system.send_msg"(%D226C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D227C5, %msg49 = "dma.sys.sys_send"(%B935C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D223C6, %msg49 = "@core_6"(%D203C6, %msg48) {
CHECK:          %B746C6 = "system.wait_msg"(%D203C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D204C6 = "dma.sys.sys_wait"(%B746C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D205C6 = "dma.tensor"(%G1.0x88d000, %B746C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D206C6 = "dma.tensor"(%G1.0x88e000, %B746C6) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D207C6 = "dma.tensor"(%L30.0x698076c910, %B746C6) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B747C6 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D207C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D208C6 = "dma.tensor"(%G1.0x8d7000, %B746C6) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D209C6 = "dma.tensor"(%G1.0x92a000, %B746C6) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D210C6 = "dma.tensor"(%G1.0x929000, %B746C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D211C6 = "dma.tensor"(%G1.0x932000, %B746C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D212C6 = "dma.tensor"(%G1.0x933000, %B746C6) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B748C6 = "tsbc.s_bc"(%R0.0x580, %D212C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B749C6 = "arith.sub"(%C0.0, %R4, %D212C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B750C6 = "arith.max"(%R1.0xf80, %C-45408.0, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B751C6 = "arith.min"(%R1.0xf80, %C45408.0, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B752C6 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B753C6 = "arith.cast"(%R1.0xc00, %D212C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B754C6 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B755C6 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B756C6 = "arith.cast"(%R0.0x1a00, %D212C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B757C6 = "arith.min"(%R1.0xf80, %C15, %D212C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B758C6 = "arith.max"(%R0.0x1a00, %C-15, %D212C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B759C6 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D212C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B760C6 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D212C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B761C6 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B762C6 = "arith.add"(%R0.0x1a00, %C1.0, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B763C6 = "arith.div"(%C1.0, %R1.0xc00, %D212C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B764C6 = "arith.mul"(%R0.0x1a00, %R4, %D212C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D213C6 = "dma.tensor"(%L30.0x6980320960, %B747C6) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D214C6 = "dma.tensor"(%G1.0x8d6000, %B747C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B765C6 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D214C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D215C6 = "dma.tensor"(%G1.0x8f8000, %B764C6) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B766C6 = "tsbc.s_bc"(%R0.0x580, %D215C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B767C6 = "arith.sub"(%C0.0, %R3, %D215C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B768C6 = "arith.max"(%R0.0x2100, %C-45408.0, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B769C6 = "arith.min"(%R0.0x2100, %C45408.0, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B770C6 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B771C6 = "arith.cast"(%R0.0x1d80, %D215C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B772C6 = "arith.mul"(%R1.0xc00, %C0.693359375, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B773C6 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B774C6 = "arith.cast"(%R1.0xc00, %D215C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B775C6 = "arith.min"(%R0.0x2100, %C15, %D215C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B776C6 = "arith.max"(%R1.0xc00, %C-15, %D215C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B777C6 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D215C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B778C6 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D215C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B779C6 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B780C6 = "arith.add"(%R1.0xc00, %C1.0, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B781C6 = "arith.div"(%C1.0, %R0.0x1d80, %D215C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B782C6 = "arith.mul"(%R1.0xc00, %R3, %D215C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D216C6 = "dma.tensor"(%G1.0x8f7000, %B765C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D217C6 = "dma.tensor"(%G1.0x918000, %B765C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B783C6 = "arith.copy"(%R0.0x1a00, %D217C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B784C6 = "arith.copy"(%R1.0xc00, %D217C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B785C6 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D217C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D218C6 = "dma.tensor"(%G1.0x919000, %B784C6) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B786C6 = "tsbc.s_bc"(%R0.0x580, %D218C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B787C6 = "arith.sub"(%C0.0, %R3, %D218C6) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B788C6 = "arith.max"(%R1.0x2000, %C-45408.0, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B789C6 = "arith.min"(%R1.0x2000, %C45408.0, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B790C6 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B791C6 = "arith.cast"(%R1.0x1900, %D218C6) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B792C6 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B793C6 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B794C6 = "arith.cast"(%R0.0x1a00, %D218C6) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B795C6 = "arith.min"(%R1.0x2000, %C15, %D218C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B796C6 = "arith.max"(%R0.0x1a00, %C-15, %D218C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B797C6 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D218C6) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B798C6 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D218C6) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B799C6 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B800C6 = "arith.add"(%R0.0x1a00, %C1.0, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B801C6 = "arith.div"(%C1.0, %R1.0x1900, %D218C6) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B802C6 = "arith.mul"(%R0.0x1a00, %R3, %D218C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B803C6 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D218C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B804C6 = "tsbc.s_bc"(%R0.0x580, %D218C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B805C6 = "arith.sub"(%C0.0, %R0.0x2100, %D218C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B806C6 = "arith.max"(%R0.0x2800, %C-45408.0, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B807C6 = "arith.min"(%R0.0x2800, %C45408.0, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B808C6 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B809C6 = "arith.cast"(%R0.0x2480, %D218C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B810C6 = "arith.mul"(%R3.0x700, %C0.693359375, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B811C6 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B812C6 = "arith.cast"(%R3.0x700, %D218C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B813C6 = "arith.min"(%R0.0x2800, %C15, %D218C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B814C6 = "arith.max"(%R3.0x700, %C-15, %D218C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B815C6 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D218C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B816C6 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D218C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B817C6 = "arith.mul"(%R0.0x2800, %R3.0x700, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B818C6 = "arith.add"(%R3.0x700, %C1.0, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B819C6 = "arith.div"(%C1.0, %R0.0x2480, %D218C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B820C6 = "arith.mul"(%R3.0x700, %R0.0x2100, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B821C6 = "arith.copy"(%R3.0x700, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B822C6 = "arith.copy"(%R3.0x700, %D218C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B823C6 = "arith.copy"(%R1.0xc00, %D218C6) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D219C6 = "dma.tensor"(%L30.0x69804b2580, %B785C6) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B824C6 = "arith.copy"(%R1.0xc00, %D219C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B825C6 = "arith.copy"(%R2, %D219C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B826C6 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D219C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980708960, %D220C6 = "dma.tensor"(%R3.0x700, %B825C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B827C6 = "tsbc.s_bc"(%R0.0x580, %D220C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B828C6 = "arith.sub"(%C0.0, %R1.0xc00, %D220C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B829C6 = "arith.max"(%R3.0x640, %C-45408.0, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B830C6 = "arith.min"(%R3.0x640, %C45408.0, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B831C6 = "arith.mul"(%R3.0x640, %C1.4423828125, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B832C6 = "arith.cast"(%R3, %D220C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B833C6 = "arith.mul"(%R2.0x640, %C0.693359375, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B834C6 = "arith.sub"(%R3.0x640, %R3, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B835C6 = "arith.cast"(%R2.0x640, %D220C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B836C6 = "arith.min"(%R3.0x640, %C15, %D220C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B837C6 = "arith.max"(%R2.0x640, %C-15, %D220C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B838C6 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D220C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B839C6 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D220C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B840C6 = "arith.mul"(%R3.0x640, %R2.0x640, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B841C6 = "arith.add"(%R2.0x640, %C1.0, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B842C6 = "arith.div"(%C1.0, %R3, %D220C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B843C6 = "arith.mul"(%R2.0x640, %R1.0xc00, %D220C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B844C6 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D220C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980002580, %D221C6 = "dma.tensor"(%R0.0x1a00, %B826C6) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B845C6 = "tsbc.s_bc"(%R0.0x580, %D221C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B846C6 = "arith.sub"(%C0.0, %R2, %D221C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B847C6 = "arith.max"(%R4.0x640, %C-45408.0, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B848C6 = "arith.min"(%R4.0x640, %C45408.0, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B849C6 = "arith.mul"(%R4.0x640, %C1.4423828125, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B850C6 = "arith.cast"(%R4, %D221C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B851C6 = "arith.mul"(%R1.0xc00, %C0.693359375, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B852C6 = "arith.sub"(%R4.0x640, %R4, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B853C6 = "arith.cast"(%R1.0xc00, %D221C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B854C6 = "arith.min"(%R4.0x640, %C15, %D221C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B855C6 = "arith.max"(%R1.0xc00, %C-15, %D221C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B856C6 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D221C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B857C6 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D221C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B858C6 = "arith.mul"(%R4.0x640, %R1.0xc00, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B859C6 = "arith.add"(%R1.0xc00, %C1.0, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B860C6 = "arith.div"(%C1.0, %R4, %D221C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B861C6 = "arith.mul"(%R1.0xc00, %R2, %D221C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980642580, %D222C6 = "dma.tensor"(%R1.0xc00, %B861C6) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B862C6, %msg49 = "system.send_msg"(%D222C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D223C6, %msg49 = "dma.sys.sys_send"(%B862C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D211C7, %msg49 = "@core_7"(%D191C7, %msg48) {
CHECK:          %B673C7 = "system.wait_msg"(%D191C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D192C7 = "dma.sys.sys_wait"(%B673C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D193C7 = "dma.tensor"(%G1.0x88d000, %B673C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D194C7 = "dma.tensor"(%G1.0x88e000, %B673C7) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D195C7 = "dma.tensor"(%L30.0x698076caa0, %B673C7) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4, %B674C7 = "conv.normal"(%R3, %R0, %R5, %C0.0, %D195C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D196C7 = "dma.tensor"(%G1.0x8d7000, %B673C7) : (memref<1x128x1x512xi16, strides: [65536, 512, 512, 1]>, none) -> (memref<1x128x1x512xi16, strides: [1024, 512, 512, 1]>, none)
CHECK:          %R2.0xe00, %D197C7 = "dma.tensor"(%G1.0x92a000, %B673C7) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R6, %D198C7 = "dma.tensor"(%G1.0x929000, %B673C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R6.0x40, %D199C7 = "dma.tensor"(%G1.0x932000, %B673C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1.0x1880, %D200C7 = "dma.tensor"(%G1.0x933000, %B673C7) : (memref<1x64x1x64xi16, strides: [4096, 64, 64, 1]>, none) -> (memref<1x64x1x64xi16, strides: [64, 64, 64, 1]>, none)
CHECK:          %R1.0x1300, %B675C7 = "tsbc.s_bc"(%R0.0x580, %D200C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xf80, %B676C7 = "arith.sub"(%C0.0, %R4, %D200C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B677C7 = "arith.max"(%R1.0xf80, %C-45408.0, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B678C7 = "arith.min"(%R1.0xf80, %C45408.0, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B679C7 = "arith.mul"(%R1.0xf80, %C1.4423828125, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B680C7 = "arith.cast"(%R1.0xc00, %D200C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B681C7 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B682C7 = "arith.sub"(%R1.0xf80, %R1.0xc00, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B683C7 = "arith.cast"(%R0.0x1a00, %D200C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B684C7 = "arith.min"(%R1.0xf80, %C15, %D200C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xf80, %B685C7 = "arith.max"(%R0.0x1a00, %C-15, %D200C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B686C7 = "arith.add_satu"(%R1.0xf80, %C15, %C10, %D200C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xf80, %B687C7 = "sfu.taylor_4x"(%R1.0xc00, %R1.0x1300, %D200C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B688C7 = "arith.mul"(%R1.0xf80, %R0.0x1a00, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B689C7 = "arith.add"(%R0.0x1a00, %C1.0, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B690C7 = "arith.div"(%C1.0, %R1.0xc00, %D200C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B691C7 = "arith.mul"(%R0.0x1a00, %R4, %D200C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D201C7 = "dma.tensor"(%L30.0x6980320af0, %B674C7) : (memref<1x512x5x40xi16, strides: [819200, 1600, 40, 1]>, none) -> (memref<1x512x5x40xi16, strides: [1792, 224, 40, 1]>, none)
CHECK:          %R5.0x40, %D202C7 = "dma.tensor"(%G1.0x8d6000, %B674C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R3, %B692C7 = "conv.normal"(%R2, %R1, %R5.0x40, %C0.0, %D202C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x5x40xf16, strides: [1792, 224, 40, 1]>, memref<128x512x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D203C7 = "dma.tensor"(%G1.0x8f8000, %B691C7) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R0.0x2480, %B693C7 = "tsbc.s_bc"(%R0.0x580, %D203C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2100, %B694C7 = "arith.sub"(%C0.0, %R3, %D203C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B695C7 = "arith.max"(%R0.0x2100, %C-45408.0, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B696C7 = "arith.min"(%R0.0x2100, %C45408.0, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B697C7 = "arith.mul"(%R0.0x2100, %C1.4423828125, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B698C7 = "arith.cast"(%R0.0x1d80, %D203C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B699C7 = "arith.mul"(%R1.0xc00, %C0.693359375, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B700C7 = "arith.sub"(%R0.0x2100, %R0.0x1d80, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B701C7 = "arith.cast"(%R1.0xc00, %D203C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B702C7 = "arith.min"(%R0.0x2100, %C15, %D203C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2100, %B703C7 = "arith.max"(%R1.0xc00, %C-15, %D203C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xc00, %B704C7 = "arith.add_satu"(%R0.0x2100, %C15, %C10, %D203C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B705C7 = "sfu.taylor_4x"(%R0.0x1d80, %R0.0x2480, %D203C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B706C7 = "arith.mul"(%R0.0x2100, %R1.0xc00, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1d80, %B707C7 = "arith.add"(%R1.0xc00, %C1.0, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B708C7 = "arith.div"(%C1.0, %R0.0x1d80, %D203C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B709C7 = "arith.mul"(%R1.0xc00, %R3, %D203C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0xd00, %D204C7 = "dma.tensor"(%G1.0x8f7000, %B692C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4.0xcc0, %D205C7 = "dma.tensor"(%G1.0x918000, %B692C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B710C7 = "arith.copy"(%R0.0x1a00, %D205C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B711C7 = "arith.copy"(%R1.0xc00, %D205C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R3, %B712C7 = "conv.normal"(%R2, %R0.0x1200, %R4.0xd00, %C0.0, %D205C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x800, %D206C7 = "dma.tensor"(%G1.0x919000, %B711C7) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R1.0x2700, %B713C7 = "tsbc.s_bc"(%R0.0x580, %D206C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0x2000, %B714C7 = "arith.sub"(%C0.0, %R3, %D206C7) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B715C7 = "arith.max"(%R1.0x2000, %C-45408.0, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B716C7 = "arith.min"(%R1.0x2000, %C45408.0, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B717C7 = "arith.mul"(%R1.0x2000, %C1.4423828125, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B718C7 = "arith.cast"(%R1.0x1900, %D206C7) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B719C7 = "arith.mul"(%R0.0x1a00, %C0.693359375, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B720C7 = "arith.sub"(%R1.0x2000, %R1.0x1900, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B721C7 = "arith.cast"(%R0.0x1a00, %D206C7) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B722C7 = "arith.min"(%R1.0x2000, %C15, %D206C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R1.0x2000, %B723C7 = "arith.max"(%R0.0x1a00, %C-15, %D206C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B724C7 = "arith.add_satu"(%R1.0x2000, %C15, %C10, %D206C7) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x2000, %B725C7 = "sfu.taylor_4x"(%R1.0x1900, %R1.0x2700, %D206C7) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B726C7 = "arith.mul"(%R1.0x2000, %R0.0x1a00, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x1900, %B727C7 = "arith.add"(%R0.0x1a00, %C1.0, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B728C7 = "arith.div"(%C1.0, %R1.0x1900, %D206C7) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %B729C7 = "arith.mul"(%R0.0x1a00, %R3, %D206C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x2100, %B730C7 = "conv.normal"(%R0.0x1a00, %R1.0x800, %R4.0xcc0, %C0.0, %D206C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2b80, %B731C7 = "tsbc.s_bc"(%R0.0x580, %D206C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x2800, %B732C7 = "arith.sub"(%C0.0, %R0.0x2100, %D206C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B733C7 = "arith.max"(%R0.0x2800, %C-45408.0, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B734C7 = "arith.min"(%R0.0x2800, %C45408.0, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B735C7 = "arith.mul"(%R0.0x2800, %C1.4423828125, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B736C7 = "arith.cast"(%R0.0x2480, %D206C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B737C7 = "arith.mul"(%R3.0x700, %C0.693359375, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B738C7 = "arith.sub"(%R0.0x2800, %R0.0x2480, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B739C7 = "arith.cast"(%R3.0x700, %D206C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B740C7 = "arith.min"(%R0.0x2800, %C15, %D206C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x2800, %B741C7 = "arith.max"(%R3.0x700, %C-15, %D206C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B742C7 = "arith.add_satu"(%R0.0x2800, %C15, %C10, %D206C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2800, %B743C7 = "sfu.taylor_4x"(%R0.0x2480, %R0.0x2b80, %D206C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B744C7 = "arith.mul"(%R0.0x2800, %R3.0x700, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x2480, %B745C7 = "arith.add"(%R3.0x700, %C1.0, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B746C7 = "arith.div"(%C1.0, %R0.0x2480, %D206C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B747C7 = "arith.mul"(%R3.0x700, %R0.0x2100, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xc00, %B748C7 = "arith.copy"(%R3.0x700, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xc02, %B749C7 = "arith.copy"(%R3.0x700, %D206C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [1600, 800, 160, 2]>, none)
CHECK:          %R1.0xca0, %B750C7 = "arith.copy"(%R1.0xc00, %D206C7) {round_mode = 0}: (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none) -> (memref<1x128x5x80xf16, strides: [1600, 800, 160, 1]>, none)
CHECK:          %R2, %D207C7 = "dma.tensor"(%L30.0x69804b2bc0, %B712C7) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x1a00, %B751C7 = "arith.copy"(%R1.0xc00, %D207C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R0.0x2680, %B752C7 = "arith.copy"(%R2, %D207C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B753C7 = "conv.normal"(%R0.0x1a00, %R2.0xe00, %R6, %C0.0, %D207C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980708af0, %D208C7 = "dma.tensor"(%R3.0x700, %B752C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %R3.0xc80, %B754C7 = "tsbc.s_bc"(%R0.0x580, %D208C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B755C7 = "arith.sub"(%C0.0, %R1.0xc00, %D208C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B756C7 = "arith.max"(%R3.0x640, %C-45408.0, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B757C7 = "arith.min"(%R3.0x640, %C45408.0, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B758C7 = "arith.mul"(%R3.0x640, %C1.4423828125, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B759C7 = "arith.cast"(%R3, %D208C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B760C7 = "arith.mul"(%R2.0x640, %C0.693359375, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B761C7 = "arith.sub"(%R3.0x640, %R3, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B762C7 = "arith.cast"(%R2.0x640, %D208C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B763C7 = "arith.min"(%R3.0x640, %C15, %D208C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B764C7 = "arith.max"(%R2.0x640, %C-15, %D208C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R2.0x640, %B765C7 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D208C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B766C7 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D208C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B767C7 = "arith.mul"(%R3.0x640, %R2.0x640, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B768C7 = "arith.add"(%R2.0x640, %C1.0, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B769C7 = "arith.div"(%C1.0, %R3, %D208C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2.0x640, %B770C7 = "arith.mul"(%R2.0x640, %R1.0xc00, %D208C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R2, %B771C7 = "conv.normal"(%R2.0x640, %R1.0x1880, %R6.0x40, %C0.0, %D208C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<64x64x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980002bc0, %D209C7 = "dma.tensor"(%R0.0x1a00, %B753C7) : (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none)
CHECK:          %R4.0xc80, %B772C7 = "tsbc.s_bc"(%R0.0x580, %D209C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x640, %B773C7 = "arith.sub"(%C0.0, %R2, %D209C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B774C7 = "arith.max"(%R4.0x640, %C-45408.0, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B775C7 = "arith.min"(%R4.0x640, %C45408.0, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B776C7 = "arith.mul"(%R4.0x640, %C1.4423828125, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B777C7 = "arith.cast"(%R4, %D209C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B778C7 = "arith.mul"(%R1.0xc00, %C0.693359375, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B779C7 = "arith.sub"(%R4.0x640, %R4, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B780C7 = "arith.cast"(%R1.0xc00, %D209C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B781C7 = "arith.min"(%R4.0x640, %C15, %D209C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R4.0x640, %B782C7 = "arith.max"(%R1.0xc00, %C-15, %D209C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0xc00, %B783C7 = "arith.add_satu"(%R4.0x640, %C15, %C10, %D209C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4.0x640, %B784C7 = "sfu.taylor_4x"(%R4, %R4.0xc80, %D209C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B785C7 = "arith.mul"(%R4.0x640, %R1.0xc00, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R4, %B786C7 = "arith.add"(%R1.0xc00, %C1.0, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B787C7 = "arith.div"(%C1.0, %R4, %D209C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xc00, %B788C7 = "arith.mul"(%R1.0xc00, %R2, %D209C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %L30.0x6980642bc0, %D210C7 = "dma.tensor"(%R1.0xc00, %B788C7) : (memref<1x64x10x80xi16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xi16, strides: [409600, 6400, 80, 1]>, none)
CHECK:          %B789C7, %msg49 = "system.send_msg"(%D210C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D211C7, %msg49 = "dma.sys.sys_send"(%B789C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D235C0, %msg48 = "@core_0"(%D233C0, %msg49) {
CHECK:          %B940C0 = "system.wait_msg"(%D233C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D234C0 = "dma.sys.sys_wait"(%B940C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B941C0, %msg48 = "system.send_msg"(%D234C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D235C0, %msg48 = "dma.sys.sys_send"(%B941C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D233C1, %msg48 = "@core_1"(%D231C1, %msg49) {
CHECK:          %B937C1 = "system.wait_msg"(%D231C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D232C1 = "dma.sys.sys_wait"(%B937C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B938C1, %msg48 = "system.send_msg"(%D232C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D233C1, %msg48 = "dma.sys.sys_send"(%B938C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D233C2, %msg48 = "@core_2"(%D231C2, %msg49) {
CHECK:          %B937C2 = "system.wait_msg"(%D231C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D232C2 = "dma.sys.sys_wait"(%B937C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B938C2, %msg48 = "system.send_msg"(%D232C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D233C2, %msg48 = "dma.sys.sys_send"(%B938C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D233C3, %msg48 = "@core_3"(%D231C3, %msg49) {
CHECK:          %B937C3 = "system.wait_msg"(%D231C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D232C3 = "dma.sys.sys_wait"(%B937C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B938C3, %msg48 = "system.send_msg"(%D232C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D233C3, %msg48 = "dma.sys.sys_send"(%B938C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D229C4, %msg48 = "@core_4"(%D227C4, %msg49) {
CHECK:          %B936C4 = "system.wait_msg"(%D227C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D228C4 = "dma.sys.sys_wait"(%B936C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B937C4, %msg48 = "system.send_msg"(%D228C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D229C4, %msg48 = "dma.sys.sys_send"(%B937C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D229C5, %msg48 = "@core_5"(%D227C5, %msg49) {
CHECK:          %B936C5 = "system.wait_msg"(%D227C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D228C5 = "dma.sys.sys_wait"(%B936C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B937C5, %msg48 = "system.send_msg"(%D228C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D229C5, %msg48 = "dma.sys.sys_send"(%B937C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D225C6, %msg48 = "@core_6"(%D223C6, %msg49) {
CHECK:          %B863C6 = "system.wait_msg"(%D223C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D224C6 = "dma.sys.sys_wait"(%B863C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B864C6, %msg48 = "system.send_msg"(%D224C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D225C6, %msg48 = "dma.sys.sys_send"(%B864C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D213C7, %msg48 = "@core_7"(%D211C7, %msg49) {
CHECK:          %B790C7 = "system.wait_msg"(%D211C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D212C7 = "dma.sys.sys_wait"(%B790C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B791C7, %msg48 = "system.send_msg"(%D212C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D213C7, %msg48 = "dma.sys.sys_send"(%B791C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D246C0, %msg49 = "@core_0"(%D235C0, %msg48) {
CHECK:          %B942C0 = "system.wait_msg"(%D235C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D236C0 = "dma.sys.sys_wait"(%B942C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D237C0 = "dma.tensor"(%L30.0x6980640000, %B942C0) : (memref<1x64x11x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x11x80xi16, strides: [896, 896, 80, 1]>, none)
CHECK:          %R1, %D238C0 = "dma.tensor"(%G1.0x936000, %B942C0) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D239C0 = "dma.tensor"(%G1.0x935000, %B942C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B943C0 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D239C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x11x80xf16, strides: [896, 896, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B944C0 = "tsbc.s_bc"(%R0.0x580, %D239C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B945C0 = "arith.sub"(%C0.0, %R2, %D239C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B946C0 = "arith.max"(%R3.0x640, %C-45408.0, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B947C0 = "arith.min"(%R3.0x640, %C45408.0, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B948C0 = "arith.mul"(%R3.0x640, %C1.4423828125, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B949C0 = "arith.cast"(%R3, %D239C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B950C0 = "arith.mul"(%R1.0x480, %C0.693359375, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B951C0 = "arith.sub"(%R3.0x640, %R3, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B952C0 = "arith.cast"(%R1.0x480, %D239C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B953C0 = "arith.min"(%R3.0x640, %C15, %D239C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B954C0 = "arith.max"(%R1.0x480, %C-15, %D239C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B955C0 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D239C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B956C0 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D239C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B957C0 = "arith.mul"(%R3.0x640, %R1.0x480, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B958C0 = "arith.add"(%R1.0x480, %C1.0, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B959C0 = "arith.div"(%C1.0, %R3, %D239C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B960C0 = "arith.mul"(%R1.0x480, %R2, %D239C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D240C0 = "dma.tensor"(%L30.0x6980000000, %B943C0) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D241C0 = "dma.tensor"(%G1.0x949000, %B943C0) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D242C0 = "dma.tensor"(%G1.0x948000, %B943C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B961C0 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D242C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B962C0 = "tsbc.s_bc"(%R0.0x580, %D242C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B963C0 = "arith.sub"(%C0.0, %R2, %D242C0) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B964C0 = "arith.max"(%R0.0x640, %C-45408.0, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B965C0 = "arith.min"(%R0.0x640, %C45408.0, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B966C0 = "arith.mul"(%R0.0x640, %C1.4423828125, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B967C0 = "arith.cast"(%R0, %D242C0) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B968C0 = "arith.mul"(%R3, %C0.693359375, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B969C0 = "arith.sub"(%R0.0x640, %R0, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B970C0 = "arith.cast"(%R3, %D242C0) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B971C0 = "arith.min"(%R0.0x640, %C15, %D242C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B972C0 = "arith.max"(%R3, %C-15, %D242C0) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B973C0 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D242C0) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B974C0 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D242C0) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B975C0 = "arith.mul"(%R0.0x640, %R3, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B976C0 = "arith.add"(%R3, %C1.0, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B977C0 = "arith.div"(%C1.0, %R0, %D242C0) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B978C0 = "arith.mul"(%R3, %R2, %D242C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D243C0 = "dma.tensor"(%G1.0x952000, %B961C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D244C0 = "dma.tensor"(%G1.0x951000, %B961C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B979C0 = "arith.copy"(%R1.0x480, %D244C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B980C0 = "arith.copy"(%R3, %D244C0) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B981C0 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D244C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B982C0 = "tsbc.s_bc"(%R0.0x580, %D244C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B983C0 = "arith.sub"(%C0.0, %R2, %D244C0) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B984C0 = "arith.max"(%R4.0xe80, %C-45408.0, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B985C0 = "arith.min"(%R4.0xe80, %C45408.0, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B986C0 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B987C0 = "arith.cast"(%R4.0x200, %D244C0) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B988C0 = "arith.mul"(%R0, %C0.693359375, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B989C0 = "arith.sub"(%R4.0xe80, %R4.0x200, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B990C0 = "arith.cast"(%R0, %D244C0) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B991C0 = "arith.min"(%R4.0xe80, %C15, %D244C0) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B992C0 = "arith.max"(%R0, %C-15, %D244C0) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B993C0 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D244C0) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B994C0 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D244C0) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B995C0 = "arith.mul"(%R4.0xe80, %R0, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B996C0 = "arith.add"(%R0, %C1.0, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B997C0 = "arith.div"(%C1.0, %R4.0x200, %D244C0) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B998C0 = "arith.mul"(%R0, %R2, %D244C0) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980320000, %D245C0 = "dma.tensor"(%R0, %B998C0) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B999C0, %msg49 = "system.send_msg"(%D245C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D246C0, %msg49 = "dma.sys.sys_send"(%B999C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D244C1, %msg49 = "@core_1"(%D233C1, %msg48) {
CHECK:          %B939C1 = "system.wait_msg"(%D233C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D234C1 = "dma.sys.sys_wait"(%B939C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D235C1 = "dma.tensor"(%L30.0x69806405a0, %B939C1) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R1, %D236C1 = "dma.tensor"(%G1.0x936000, %B939C1) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D237C1 = "dma.tensor"(%G1.0x935000, %B939C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B940C1 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D237C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B941C1 = "tsbc.s_bc"(%R0.0x580, %D237C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B942C1 = "arith.sub"(%C0.0, %R2, %D237C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B943C1 = "arith.max"(%R3.0x640, %C-45408.0, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B944C1 = "arith.min"(%R3.0x640, %C45408.0, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B945C1 = "arith.mul"(%R3.0x640, %C1.4423828125, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B946C1 = "arith.cast"(%R3, %D237C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B947C1 = "arith.mul"(%R1.0x480, %C0.693359375, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B948C1 = "arith.sub"(%R3.0x640, %R3, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B949C1 = "arith.cast"(%R1.0x480, %D237C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B950C1 = "arith.min"(%R3.0x640, %C15, %D237C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B951C1 = "arith.max"(%R1.0x480, %C-15, %D237C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B952C1 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D237C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B953C1 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D237C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B954C1 = "arith.mul"(%R3.0x640, %R1.0x480, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B955C1 = "arith.add"(%R1.0x480, %C1.0, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B956C1 = "arith.div"(%C1.0, %R3, %D237C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B957C1 = "arith.mul"(%R1.0x480, %R2, %D237C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D238C1 = "dma.tensor"(%L30.0x6980000640, %B940C1) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D239C1 = "dma.tensor"(%G1.0x949000, %B940C1) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D240C1 = "dma.tensor"(%G1.0x948000, %B940C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B958C1 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D240C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B959C1 = "tsbc.s_bc"(%R0.0x580, %D240C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B960C1 = "arith.sub"(%C0.0, %R2, %D240C1) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B961C1 = "arith.max"(%R0.0x640, %C-45408.0, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B962C1 = "arith.min"(%R0.0x640, %C45408.0, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B963C1 = "arith.mul"(%R0.0x640, %C1.4423828125, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B964C1 = "arith.cast"(%R0, %D240C1) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B965C1 = "arith.mul"(%R3, %C0.693359375, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B966C1 = "arith.sub"(%R0.0x640, %R0, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B967C1 = "arith.cast"(%R3, %D240C1) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B968C1 = "arith.min"(%R0.0x640, %C15, %D240C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B969C1 = "arith.max"(%R3, %C-15, %D240C1) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B970C1 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D240C1) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B971C1 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D240C1) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B972C1 = "arith.mul"(%R0.0x640, %R3, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B973C1 = "arith.add"(%R3, %C1.0, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B974C1 = "arith.div"(%C1.0, %R0, %D240C1) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B975C1 = "arith.mul"(%R3, %R2, %D240C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D241C1 = "dma.tensor"(%G1.0x952000, %B958C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D242C1 = "dma.tensor"(%G1.0x951000, %B958C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B976C1 = "arith.copy"(%R1.0x480, %D242C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B977C1 = "arith.copy"(%R3, %D242C1) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B978C1 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D242C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B979C1 = "tsbc.s_bc"(%R0.0x580, %D242C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B980C1 = "arith.sub"(%C0.0, %R2, %D242C1) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B981C1 = "arith.max"(%R4.0xe80, %C-45408.0, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B982C1 = "arith.min"(%R4.0xe80, %C45408.0, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B983C1 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B984C1 = "arith.cast"(%R4.0x200, %D242C1) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B985C1 = "arith.mul"(%R0, %C0.693359375, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B986C1 = "arith.sub"(%R4.0xe80, %R4.0x200, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B987C1 = "arith.cast"(%R0, %D242C1) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B988C1 = "arith.min"(%R4.0xe80, %C15, %D242C1) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B989C1 = "arith.max"(%R0, %C-15, %D242C1) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B990C1 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D242C1) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B991C1 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D242C1) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B992C1 = "arith.mul"(%R4.0xe80, %R0, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B993C1 = "arith.add"(%R0, %C1.0, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B994C1 = "arith.div"(%C1.0, %R4.0x200, %D242C1) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B995C1 = "arith.mul"(%R0, %R2, %D242C1) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980320640, %D243C1 = "dma.tensor"(%R0, %B995C1) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B996C1, %msg49 = "system.send_msg"(%D243C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D244C1, %msg49 = "dma.sys.sys_send"(%B996C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D244C2, %msg49 = "@core_2"(%D233C2, %msg48) {
CHECK:          %B939C2 = "system.wait_msg"(%D233C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D234C2 = "dma.sys.sys_wait"(%B939C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D235C2 = "dma.tensor"(%L30.0x6980640be0, %B939C2) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R1, %D236C2 = "dma.tensor"(%G1.0x936000, %B939C2) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D237C2 = "dma.tensor"(%G1.0x935000, %B939C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B940C2 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D237C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B941C2 = "tsbc.s_bc"(%R0.0x580, %D237C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B942C2 = "arith.sub"(%C0.0, %R2, %D237C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B943C2 = "arith.max"(%R3.0x640, %C-45408.0, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B944C2 = "arith.min"(%R3.0x640, %C45408.0, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B945C2 = "arith.mul"(%R3.0x640, %C1.4423828125, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B946C2 = "arith.cast"(%R3, %D237C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B947C2 = "arith.mul"(%R1.0x480, %C0.693359375, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B948C2 = "arith.sub"(%R3.0x640, %R3, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B949C2 = "arith.cast"(%R1.0x480, %D237C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B950C2 = "arith.min"(%R3.0x640, %C15, %D237C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B951C2 = "arith.max"(%R1.0x480, %C-15, %D237C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B952C2 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D237C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B953C2 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D237C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B954C2 = "arith.mul"(%R3.0x640, %R1.0x480, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B955C2 = "arith.add"(%R1.0x480, %C1.0, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B956C2 = "arith.div"(%C1.0, %R3, %D237C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B957C2 = "arith.mul"(%R1.0x480, %R2, %D237C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D238C2 = "dma.tensor"(%L30.0x6980000c80, %B940C2) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D239C2 = "dma.tensor"(%G1.0x949000, %B940C2) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D240C2 = "dma.tensor"(%G1.0x948000, %B940C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B958C2 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D240C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B959C2 = "tsbc.s_bc"(%R0.0x580, %D240C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B960C2 = "arith.sub"(%C0.0, %R2, %D240C2) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B961C2 = "arith.max"(%R0.0x640, %C-45408.0, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B962C2 = "arith.min"(%R0.0x640, %C45408.0, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B963C2 = "arith.mul"(%R0.0x640, %C1.4423828125, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B964C2 = "arith.cast"(%R0, %D240C2) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B965C2 = "arith.mul"(%R3, %C0.693359375, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B966C2 = "arith.sub"(%R0.0x640, %R0, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B967C2 = "arith.cast"(%R3, %D240C2) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B968C2 = "arith.min"(%R0.0x640, %C15, %D240C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B969C2 = "arith.max"(%R3, %C-15, %D240C2) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B970C2 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D240C2) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B971C2 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D240C2) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B972C2 = "arith.mul"(%R0.0x640, %R3, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B973C2 = "arith.add"(%R3, %C1.0, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B974C2 = "arith.div"(%C1.0, %R0, %D240C2) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B975C2 = "arith.mul"(%R3, %R2, %D240C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D241C2 = "dma.tensor"(%G1.0x952000, %B958C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D242C2 = "dma.tensor"(%G1.0x951000, %B958C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B976C2 = "arith.copy"(%R1.0x480, %D242C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B977C2 = "arith.copy"(%R3, %D242C2) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B978C2 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D242C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B979C2 = "tsbc.s_bc"(%R0.0x580, %D242C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B980C2 = "arith.sub"(%C0.0, %R2, %D242C2) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B981C2 = "arith.max"(%R4.0xe80, %C-45408.0, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B982C2 = "arith.min"(%R4.0xe80, %C45408.0, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B983C2 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B984C2 = "arith.cast"(%R4.0x200, %D242C2) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B985C2 = "arith.mul"(%R0, %C0.693359375, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B986C2 = "arith.sub"(%R4.0xe80, %R4.0x200, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B987C2 = "arith.cast"(%R0, %D242C2) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B988C2 = "arith.min"(%R4.0xe80, %C15, %D242C2) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B989C2 = "arith.max"(%R0, %C-15, %D242C2) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B990C2 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D242C2) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B991C2 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D242C2) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B992C2 = "arith.mul"(%R4.0xe80, %R0, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B993C2 = "arith.add"(%R0, %C1.0, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B994C2 = "arith.div"(%C1.0, %R4.0x200, %D242C2) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B995C2 = "arith.mul"(%R0, %R2, %D242C2) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980320c80, %D243C2 = "dma.tensor"(%R0, %B995C2) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B996C2, %msg49 = "system.send_msg"(%D243C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D244C2, %msg49 = "dma.sys.sys_send"(%B996C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D244C3, %msg49 = "@core_3"(%D233C3, %msg48) {
CHECK:          %B939C3 = "system.wait_msg"(%D233C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D234C3 = "dma.sys.sys_wait"(%B939C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D235C3 = "dma.tensor"(%L30.0x6980641220, %B939C3) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R1, %D236C3 = "dma.tensor"(%G1.0x936000, %B939C3) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D237C3 = "dma.tensor"(%G1.0x935000, %B939C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B940C3 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D237C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B941C3 = "tsbc.s_bc"(%R0.0x580, %D237C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B942C3 = "arith.sub"(%C0.0, %R2, %D237C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B943C3 = "arith.max"(%R3.0x640, %C-45408.0, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B944C3 = "arith.min"(%R3.0x640, %C45408.0, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B945C3 = "arith.mul"(%R3.0x640, %C1.4423828125, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B946C3 = "arith.cast"(%R3, %D237C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B947C3 = "arith.mul"(%R1.0x480, %C0.693359375, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B948C3 = "arith.sub"(%R3.0x640, %R3, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B949C3 = "arith.cast"(%R1.0x480, %D237C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B950C3 = "arith.min"(%R3.0x640, %C15, %D237C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B951C3 = "arith.max"(%R1.0x480, %C-15, %D237C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B952C3 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D237C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B953C3 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D237C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B954C3 = "arith.mul"(%R3.0x640, %R1.0x480, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B955C3 = "arith.add"(%R1.0x480, %C1.0, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B956C3 = "arith.div"(%C1.0, %R3, %D237C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B957C3 = "arith.mul"(%R1.0x480, %R2, %D237C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D238C3 = "dma.tensor"(%L30.0x69800012c0, %B940C3) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D239C3 = "dma.tensor"(%G1.0x949000, %B940C3) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D240C3 = "dma.tensor"(%G1.0x948000, %B940C3) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B958C3 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D240C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B959C3 = "tsbc.s_bc"(%R0.0x580, %D240C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B960C3 = "arith.sub"(%C0.0, %R2, %D240C3) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B961C3 = "arith.max"(%R0.0x640, %C-45408.0, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B962C3 = "arith.min"(%R0.0x640, %C45408.0, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B963C3 = "arith.mul"(%R0.0x640, %C1.4423828125, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B964C3 = "arith.cast"(%R0, %D240C3) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B965C3 = "arith.mul"(%R3, %C0.693359375, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B966C3 = "arith.sub"(%R0.0x640, %R0, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B967C3 = "arith.cast"(%R3, %D240C3) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B968C3 = "arith.min"(%R0.0x640, %C15, %D240C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B969C3 = "arith.max"(%R3, %C-15, %D240C3) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B970C3 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D240C3) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B971C3 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D240C3) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B972C3 = "arith.mul"(%R0.0x640, %R3, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B973C3 = "arith.add"(%R3, %C1.0, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B974C3 = "arith.div"(%C1.0, %R0, %D240C3) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B975C3 = "arith.mul"(%R3, %R2, %D240C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D241C3 = "dma.tensor"(%G1.0x952000, %B958C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D242C3 = "dma.tensor"(%G1.0x951000, %B958C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B976C3 = "arith.copy"(%R1.0x480, %D242C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B977C3 = "arith.copy"(%R3, %D242C3) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B978C3 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D242C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B979C3 = "tsbc.s_bc"(%R0.0x580, %D242C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B980C3 = "arith.sub"(%C0.0, %R2, %D242C3) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B981C3 = "arith.max"(%R4.0xe80, %C-45408.0, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B982C3 = "arith.min"(%R4.0xe80, %C45408.0, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B983C3 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B984C3 = "arith.cast"(%R4.0x200, %D242C3) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B985C3 = "arith.mul"(%R0, %C0.693359375, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B986C3 = "arith.sub"(%R4.0xe80, %R4.0x200, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B987C3 = "arith.cast"(%R0, %D242C3) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B988C3 = "arith.min"(%R4.0xe80, %C15, %D242C3) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B989C3 = "arith.max"(%R0, %C-15, %D242C3) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B990C3 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D242C3) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B991C3 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D242C3) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B992C3 = "arith.mul"(%R4.0xe80, %R0, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B993C3 = "arith.add"(%R0, %C1.0, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B994C3 = "arith.div"(%C1.0, %R4.0x200, %D242C3) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B995C3 = "arith.mul"(%R0, %R2, %D242C3) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x69803212c0, %D243C3 = "dma.tensor"(%R0, %B995C3) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B996C3, %msg49 = "system.send_msg"(%D243C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D244C3, %msg49 = "dma.sys.sys_send"(%B996C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D240C4, %msg49 = "@core_4"(%D229C4, %msg48) {
CHECK:          %B938C4 = "system.wait_msg"(%D229C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D230C4 = "dma.sys.sys_wait"(%B938C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D231C4 = "dma.tensor"(%L30.0x6980641860, %B938C4) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R1, %D232C4 = "dma.tensor"(%G1.0x936000, %B938C4) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D233C4 = "dma.tensor"(%G1.0x935000, %B938C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B939C4 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D233C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B940C4 = "tsbc.s_bc"(%R0.0x580, %D233C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B941C4 = "arith.sub"(%C0.0, %R2, %D233C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B942C4 = "arith.max"(%R3.0x640, %C-45408.0, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B943C4 = "arith.min"(%R3.0x640, %C45408.0, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B944C4 = "arith.mul"(%R3.0x640, %C1.4423828125, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B945C4 = "arith.cast"(%R3, %D233C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B946C4 = "arith.mul"(%R1.0x480, %C0.693359375, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B947C4 = "arith.sub"(%R3.0x640, %R3, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B948C4 = "arith.cast"(%R1.0x480, %D233C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B949C4 = "arith.min"(%R3.0x640, %C15, %D233C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B950C4 = "arith.max"(%R1.0x480, %C-15, %D233C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B951C4 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D233C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B952C4 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D233C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B953C4 = "arith.mul"(%R3.0x640, %R1.0x480, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B954C4 = "arith.add"(%R1.0x480, %C1.0, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B955C4 = "arith.div"(%C1.0, %R3, %D233C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B956C4 = "arith.mul"(%R1.0x480, %R2, %D233C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D234C4 = "dma.tensor"(%L30.0x6980001900, %B939C4) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D235C4 = "dma.tensor"(%G1.0x949000, %B939C4) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D236C4 = "dma.tensor"(%G1.0x948000, %B939C4) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B957C4 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D236C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B958C4 = "tsbc.s_bc"(%R0.0x580, %D236C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B959C4 = "arith.sub"(%C0.0, %R2, %D236C4) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B960C4 = "arith.max"(%R0.0x640, %C-45408.0, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B961C4 = "arith.min"(%R0.0x640, %C45408.0, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B962C4 = "arith.mul"(%R0.0x640, %C1.4423828125, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B963C4 = "arith.cast"(%R0, %D236C4) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B964C4 = "arith.mul"(%R3, %C0.693359375, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B965C4 = "arith.sub"(%R0.0x640, %R0, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B966C4 = "arith.cast"(%R3, %D236C4) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B967C4 = "arith.min"(%R0.0x640, %C15, %D236C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B968C4 = "arith.max"(%R3, %C-15, %D236C4) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B969C4 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D236C4) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B970C4 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D236C4) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B971C4 = "arith.mul"(%R0.0x640, %R3, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B972C4 = "arith.add"(%R3, %C1.0, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B973C4 = "arith.div"(%C1.0, %R0, %D236C4) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B974C4 = "arith.mul"(%R3, %R2, %D236C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D237C4 = "dma.tensor"(%G1.0x952000, %B957C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D238C4 = "dma.tensor"(%G1.0x951000, %B957C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B975C4 = "arith.copy"(%R1.0x480, %D238C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B976C4 = "arith.copy"(%R3, %D238C4) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B977C4 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D238C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B978C4 = "tsbc.s_bc"(%R0.0x580, %D238C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B979C4 = "arith.sub"(%C0.0, %R2, %D238C4) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B980C4 = "arith.max"(%R4.0xe80, %C-45408.0, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B981C4 = "arith.min"(%R4.0xe80, %C45408.0, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B982C4 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B983C4 = "arith.cast"(%R4.0x200, %D238C4) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B984C4 = "arith.mul"(%R0, %C0.693359375, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B985C4 = "arith.sub"(%R4.0xe80, %R4.0x200, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B986C4 = "arith.cast"(%R0, %D238C4) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B987C4 = "arith.min"(%R4.0xe80, %C15, %D238C4) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B988C4 = "arith.max"(%R0, %C-15, %D238C4) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B989C4 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D238C4) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B990C4 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D238C4) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B991C4 = "arith.mul"(%R4.0xe80, %R0, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B992C4 = "arith.add"(%R0, %C1.0, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B993C4 = "arith.div"(%C1.0, %R4.0x200, %D238C4) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B994C4 = "arith.mul"(%R0, %R2, %D238C4) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980321900, %D239C4 = "dma.tensor"(%R0, %B994C4) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B995C4, %msg49 = "system.send_msg"(%D239C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D240C4, %msg49 = "dma.sys.sys_send"(%B995C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D240C5, %msg49 = "@core_5"(%D229C5, %msg48) {
CHECK:          %B938C5 = "system.wait_msg"(%D229C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D230C5 = "dma.sys.sys_wait"(%B938C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D231C5 = "dma.tensor"(%L30.0x6980641ea0, %B938C5) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R1, %D232C5 = "dma.tensor"(%G1.0x936000, %B938C5) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D233C5 = "dma.tensor"(%G1.0x935000, %B938C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B939C5 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D233C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B940C5 = "tsbc.s_bc"(%R0.0x580, %D233C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B941C5 = "arith.sub"(%C0.0, %R2, %D233C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B942C5 = "arith.max"(%R3.0x640, %C-45408.0, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B943C5 = "arith.min"(%R3.0x640, %C45408.0, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B944C5 = "arith.mul"(%R3.0x640, %C1.4423828125, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B945C5 = "arith.cast"(%R3, %D233C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B946C5 = "arith.mul"(%R1.0x480, %C0.693359375, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B947C5 = "arith.sub"(%R3.0x640, %R3, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B948C5 = "arith.cast"(%R1.0x480, %D233C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B949C5 = "arith.min"(%R3.0x640, %C15, %D233C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B950C5 = "arith.max"(%R1.0x480, %C-15, %D233C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B951C5 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D233C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B952C5 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D233C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B953C5 = "arith.mul"(%R3.0x640, %R1.0x480, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B954C5 = "arith.add"(%R1.0x480, %C1.0, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B955C5 = "arith.div"(%C1.0, %R3, %D233C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B956C5 = "arith.mul"(%R1.0x480, %R2, %D233C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D234C5 = "dma.tensor"(%L30.0x6980001f40, %B939C5) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D235C5 = "dma.tensor"(%G1.0x949000, %B939C5) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D236C5 = "dma.tensor"(%G1.0x948000, %B939C5) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B957C5 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D236C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B958C5 = "tsbc.s_bc"(%R0.0x580, %D236C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B959C5 = "arith.sub"(%C0.0, %R2, %D236C5) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B960C5 = "arith.max"(%R0.0x640, %C-45408.0, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B961C5 = "arith.min"(%R0.0x640, %C45408.0, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B962C5 = "arith.mul"(%R0.0x640, %C1.4423828125, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B963C5 = "arith.cast"(%R0, %D236C5) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B964C5 = "arith.mul"(%R3, %C0.693359375, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B965C5 = "arith.sub"(%R0.0x640, %R0, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B966C5 = "arith.cast"(%R3, %D236C5) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B967C5 = "arith.min"(%R0.0x640, %C15, %D236C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B968C5 = "arith.max"(%R3, %C-15, %D236C5) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B969C5 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D236C5) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B970C5 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D236C5) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B971C5 = "arith.mul"(%R0.0x640, %R3, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B972C5 = "arith.add"(%R3, %C1.0, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B973C5 = "arith.div"(%C1.0, %R0, %D236C5) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B974C5 = "arith.mul"(%R3, %R2, %D236C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D237C5 = "dma.tensor"(%G1.0x952000, %B957C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D238C5 = "dma.tensor"(%G1.0x951000, %B957C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B975C5 = "arith.copy"(%R1.0x480, %D238C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B976C5 = "arith.copy"(%R3, %D238C5) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B977C5 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D238C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B978C5 = "tsbc.s_bc"(%R0.0x580, %D238C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B979C5 = "arith.sub"(%C0.0, %R2, %D238C5) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B980C5 = "arith.max"(%R4.0xe80, %C-45408.0, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B981C5 = "arith.min"(%R4.0xe80, %C45408.0, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B982C5 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B983C5 = "arith.cast"(%R4.0x200, %D238C5) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B984C5 = "arith.mul"(%R0, %C0.693359375, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B985C5 = "arith.sub"(%R4.0xe80, %R4.0x200, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B986C5 = "arith.cast"(%R0, %D238C5) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B987C5 = "arith.min"(%R4.0xe80, %C15, %D238C5) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B988C5 = "arith.max"(%R0, %C-15, %D238C5) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B989C5 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D238C5) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B990C5 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D238C5) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B991C5 = "arith.mul"(%R4.0xe80, %R0, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B992C5 = "arith.add"(%R0, %C1.0, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B993C5 = "arith.div"(%C1.0, %R4.0x200, %D238C5) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B994C5 = "arith.mul"(%R0, %R2, %D238C5) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980321f40, %D239C5 = "dma.tensor"(%R0, %B994C5) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B995C5, %msg49 = "system.send_msg"(%D239C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D240C5, %msg49 = "dma.sys.sys_send"(%B995C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D236C6, %msg49 = "@core_6"(%D225C6, %msg48) {
CHECK:          %B865C6 = "system.wait_msg"(%D225C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D226C6 = "dma.sys.sys_wait"(%B865C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D227C6 = "dma.tensor"(%L30.0x69806424e0, %B865C6) : (memref<1x64x12x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x12x80xi16, strides: [960, 960, 80, 1]>, none)
CHECK:          %R1, %D228C6 = "dma.tensor"(%G1.0x936000, %B865C6) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D229C6 = "dma.tensor"(%G1.0x935000, %B865C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B866C6 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D229C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x12x80xf16, strides: [960, 960, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B867C6 = "tsbc.s_bc"(%R0.0x580, %D229C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B868C6 = "arith.sub"(%C0.0, %R2, %D229C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B869C6 = "arith.max"(%R3.0x640, %C-45408.0, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B870C6 = "arith.min"(%R3.0x640, %C45408.0, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B871C6 = "arith.mul"(%R3.0x640, %C1.4423828125, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B872C6 = "arith.cast"(%R3, %D229C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B873C6 = "arith.mul"(%R1.0x480, %C0.693359375, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B874C6 = "arith.sub"(%R3.0x640, %R3, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B875C6 = "arith.cast"(%R1.0x480, %D229C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B876C6 = "arith.min"(%R3.0x640, %C15, %D229C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B877C6 = "arith.max"(%R1.0x480, %C-15, %D229C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B878C6 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D229C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B879C6 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D229C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B880C6 = "arith.mul"(%R3.0x640, %R1.0x480, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B881C6 = "arith.add"(%R1.0x480, %C1.0, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B882C6 = "arith.div"(%C1.0, %R3, %D229C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B883C6 = "arith.mul"(%R1.0x480, %R2, %D229C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D230C6 = "dma.tensor"(%L30.0x6980002580, %B866C6) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D231C6 = "dma.tensor"(%G1.0x949000, %B866C6) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D232C6 = "dma.tensor"(%G1.0x948000, %B866C6) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B884C6 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D232C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B885C6 = "tsbc.s_bc"(%R0.0x580, %D232C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B886C6 = "arith.sub"(%C0.0, %R2, %D232C6) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B887C6 = "arith.max"(%R0.0x640, %C-45408.0, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B888C6 = "arith.min"(%R0.0x640, %C45408.0, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B889C6 = "arith.mul"(%R0.0x640, %C1.4423828125, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B890C6 = "arith.cast"(%R0, %D232C6) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B891C6 = "arith.mul"(%R3, %C0.693359375, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B892C6 = "arith.sub"(%R0.0x640, %R0, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B893C6 = "arith.cast"(%R3, %D232C6) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B894C6 = "arith.min"(%R0.0x640, %C15, %D232C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B895C6 = "arith.max"(%R3, %C-15, %D232C6) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B896C6 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D232C6) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B897C6 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D232C6) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B898C6 = "arith.mul"(%R0.0x640, %R3, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B899C6 = "arith.add"(%R3, %C1.0, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B900C6 = "arith.div"(%C1.0, %R0, %D232C6) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B901C6 = "arith.mul"(%R3, %R2, %D232C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D233C6 = "dma.tensor"(%G1.0x952000, %B884C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D234C6 = "dma.tensor"(%G1.0x951000, %B884C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B902C6 = "arith.copy"(%R1.0x480, %D234C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B903C6 = "arith.copy"(%R3, %D234C6) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B904C6 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D234C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B905C6 = "tsbc.s_bc"(%R0.0x580, %D234C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B906C6 = "arith.sub"(%C0.0, %R2, %D234C6) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B907C6 = "arith.max"(%R4.0xe80, %C-45408.0, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B908C6 = "arith.min"(%R4.0xe80, %C45408.0, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B909C6 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B910C6 = "arith.cast"(%R4.0x200, %D234C6) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B911C6 = "arith.mul"(%R0, %C0.693359375, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B912C6 = "arith.sub"(%R4.0xe80, %R4.0x200, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B913C6 = "arith.cast"(%R0, %D234C6) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B914C6 = "arith.min"(%R4.0xe80, %C15, %D234C6) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B915C6 = "arith.max"(%R0, %C-15, %D234C6) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B916C6 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D234C6) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B917C6 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D234C6) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B918C6 = "arith.mul"(%R4.0xe80, %R0, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B919C6 = "arith.add"(%R0, %C1.0, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B920C6 = "arith.div"(%C1.0, %R4.0x200, %D234C6) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B921C6 = "arith.mul"(%R0, %R2, %D234C6) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980322580, %D235C6 = "dma.tensor"(%R0, %B921C6) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B922C6, %msg49 = "system.send_msg"(%D235C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D236C6, %msg49 = "dma.sys.sys_send"(%B922C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D224C7, %msg49 = "@core_7"(%D213C7, %msg48) {
CHECK:          %B792C7 = "system.wait_msg"(%D213C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D214C7 = "dma.sys.sys_wait"(%B792C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R3, %D215C7 = "dma.tensor"(%L30.0x6980642b20, %B792C7) : (memref<1x64x11x80xi16, strides: [409600, 6400, 80, 1]>, none) -> (memref<1x64x11x80xi16, strides: [896, 896, 80, 1]>, none)
CHECK:          %R1, %D216C7 = "dma.tensor"(%G1.0x936000, %B792C7) : (memref<1x64x1x576xi16, strides: [36864, 576, 576, 1]>, none) -> (memref<1x64x1x576xi16, strides: [576, 576, 576, 1]>, none)
CHECK:          %R5.0x40, %D217C7 = "dma.tensor"(%G1.0x935000, %B792C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B793C7 = "conv.normal"(%R3, %R1, %R5.0x40, %C0.0, %D217C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x64x11x80xf16, strides: [896, 896, 80, 1]>, memref<64x64x3x3xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0xc80, %B794C7 = "tsbc.s_bc"(%R0.0x580, %D217C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x640, %B795C7 = "arith.sub"(%C0.0, %R2, %D217C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B796C7 = "arith.max"(%R3.0x640, %C-45408.0, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B797C7 = "arith.min"(%R3.0x640, %C45408.0, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B798C7 = "arith.mul"(%R3.0x640, %C1.4423828125, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B799C7 = "arith.cast"(%R3, %D217C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B800C7 = "arith.mul"(%R1.0x480, %C0.693359375, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B801C7 = "arith.sub"(%R3.0x640, %R3, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B802C7 = "arith.cast"(%R1.0x480, %D217C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B803C7 = "arith.min"(%R3.0x640, %C15, %D217C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3.0x640, %B804C7 = "arith.max"(%R1.0x480, %C-15, %D217C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R1.0x480, %B805C7 = "arith.add_satu"(%R3.0x640, %C15, %C10, %D217C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3.0x640, %B806C7 = "sfu.taylor_4x"(%R3, %R3.0xc80, %D217C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B807C7 = "arith.mul"(%R3.0x640, %R1.0x480, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B808C7 = "arith.add"(%R1.0x480, %C1.0, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B809C7 = "arith.div"(%C1.0, %R3, %D217C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0x480, %B810C7 = "arith.mul"(%R1.0x480, %R2, %D217C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %D218C7 = "dma.tensor"(%L30.0x6980002bc0, %B793C7) : (memref<1x256x10x80xi16, strides: [1638400, 6400, 80, 1]>, none) -> (memref<1x256x10x80xi16, strides: [3200, 800, 80, 1]>, none)
CHECK:          %R4, %D219C7 = "dma.tensor"(%G1.0x949000, %B793C7) : (memref<1x64x1x256xi16, strides: [16384, 256, 256, 1]>, none) -> (memref<1x64x1x256xi16, strides: [256, 256, 256, 1]>, none)
CHECK:          %R5, %D220C7 = "dma.tensor"(%G1.0x948000, %B793C7) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R2, %B811C7 = "conv.normal"(%R0, %R4, %R5, %C0.0, %D220C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x10x80xf16, strides: [3200, 800, 80, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0xc80, %B812C7 = "tsbc.s_bc"(%R0.0x580, %D220C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x640, %B813C7 = "arith.sub"(%C0.0, %R2, %D220C7) {round_mode = 0}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B814C7 = "arith.max"(%R0.0x640, %C-45408.0, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B815C7 = "arith.min"(%R0.0x640, %C45408.0, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B816C7 = "arith.mul"(%R0.0x640, %C1.4423828125, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B817C7 = "arith.cast"(%R0, %D220C7) {round_mode = 3}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B818C7 = "arith.mul"(%R3, %C0.693359375, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B819C7 = "arith.sub"(%R0.0x640, %R0, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B820C7 = "arith.cast"(%R3, %D220C7) {round_mode = 1}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B821C7 = "arith.min"(%R0.0x640, %C15, %D220C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R0.0x640, %B822C7 = "arith.max"(%R3, %C-15, %D220C7) {round_mode = 0}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si8, none) -> (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, none)
CHECK:          %R3, %B823C7 = "arith.add_satu"(%R0.0x640, %C15, %C10, %D220C7) {round_mode = 1}: (memref<1x64x10x80xsi8, strides: [832, 832, 80, 1]>, si16, ui8, none) -> (memref<1x64x10x80xsi16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B824C7 = "sfu.taylor_4x"(%R0, %R0.0xc80, %D220C7) : (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B825C7 = "arith.mul"(%R0.0x640, %R3, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R0, %B826C7 = "arith.add"(%R3, %C1.0, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, f16, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B827C7 = "arith.div"(%C1.0, %R0, %D220C7) {iter = 3}: (f16, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R3, %B828C7 = "arith.mul"(%R3, %R2, %D220C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none)
CHECK:          %R1.0xac0, %D221C7 = "dma.tensor"(%G1.0x952000, %B811C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R4.0x1b40, %D222C7 = "dma.tensor"(%G1.0x951000, %B811C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %B829C7 = "arith.copy"(%R1.0x480, %D222C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0.0x640, %B830C7 = "arith.copy"(%R3, %D222C7) {round_mode = 0}: (memref<1x64x10x80xf16, strides: [800, 800, 80, 1]>, none) -> (memref<1x64x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R2, %B831C7 = "conv.normal"(%R0, %R1.0xac0, %R4.0x1b40, %C0.0, %D222C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x1b00, %B832C7 = "tsbc.s_bc"(%R0.0x580, %D222C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0xe80, %B833C7 = "arith.sub"(%C0.0, %R2, %D222C7) {round_mode = 0}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B834C7 = "arith.max"(%R4.0xe80, %C-45408.0, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B835C7 = "arith.min"(%R4.0xe80, %C45408.0, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B836C7 = "arith.mul"(%R4.0xe80, %C1.4423828125, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B837C7 = "arith.cast"(%R4.0x200, %D222C7) {round_mode = 3}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B838C7 = "arith.mul"(%R0, %C0.693359375, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B839C7 = "arith.sub"(%R4.0xe80, %R4.0x200, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B840C7 = "arith.cast"(%R0, %D222C7) {round_mode = 1}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B841C7 = "arith.min"(%R4.0xe80, %C15, %D222C7) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R4.0xe80, %B842C7 = "arith.max"(%R0, %C-15, %D222C7) {round_mode = 0}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si8, none) -> (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, none)
CHECK:          %R0, %B843C7 = "arith.add_satu"(%R4.0xe80, %C15, %C10, %D222C7) {round_mode = 1}: (memref<1x128x10x80xsi8, strides: [1664, 832, 80, 1]>, si16, ui8, none) -> (memref<1x128x10x80xsi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0xe80, %B844C7 = "sfu.taylor_4x"(%R4.0x200, %R4.0x1b00, %D222C7) : (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B845C7 = "arith.mul"(%R4.0xe80, %R0, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R4.0x200, %B846C7 = "arith.add"(%R0, %C1.0, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, f16, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B847C7 = "arith.div"(%C1.0, %R4.0x200, %D222C7) {iter = 3}: (f16, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R0, %B848C7 = "arith.mul"(%R0, %R2, %D222C7) {round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %L30.0x6980322bc0, %D223C7 = "dma.tensor"(%R0, %B848C7) : (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none)
CHECK:          %B849C7, %msg49 = "system.send_msg"(%D223C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D224C7, %msg49 = "dma.sys.sys_send"(%B849C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D248C0, %msg48 = "@core_0"(%D246C0, %msg49) {
CHECK:          %B1000C0 = "system.wait_msg"(%D246C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D247C0 = "dma.sys.sys_wait"(%B1000C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1001C0, %msg48 = "system.send_msg"(%D247C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D248C0, %msg48 = "dma.sys.sys_send"(%B1001C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D246C1, %msg48 = "@core_1"(%D244C1, %msg49) {
CHECK:          %B997C1 = "system.wait_msg"(%D244C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D245C1 = "dma.sys.sys_wait"(%B997C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B998C1, %msg48 = "system.send_msg"(%D245C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D246C1, %msg48 = "dma.sys.sys_send"(%B998C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D246C2, %msg48 = "@core_2"(%D244C2, %msg49) {
CHECK:          %B997C2 = "system.wait_msg"(%D244C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D245C2 = "dma.sys.sys_wait"(%B997C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B998C2, %msg48 = "system.send_msg"(%D245C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D246C2, %msg48 = "dma.sys.sys_send"(%B998C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D246C3, %msg48 = "@core_3"(%D244C3, %msg49) {
CHECK:          %B997C3 = "system.wait_msg"(%D244C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D245C3 = "dma.sys.sys_wait"(%B997C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B998C3, %msg48 = "system.send_msg"(%D245C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D246C3, %msg48 = "dma.sys.sys_send"(%B998C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D242C4, %msg48 = "@core_4"(%D240C4, %msg49) {
CHECK:          %B996C4 = "system.wait_msg"(%D240C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D241C4 = "dma.sys.sys_wait"(%B996C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B997C4, %msg48 = "system.send_msg"(%D241C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D242C4, %msg48 = "dma.sys.sys_send"(%B997C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D242C5, %msg48 = "@core_5"(%D240C5, %msg49) {
CHECK:          %B996C5 = "system.wait_msg"(%D240C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D241C5 = "dma.sys.sys_wait"(%B996C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B997C5, %msg48 = "system.send_msg"(%D241C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D242C5, %msg48 = "dma.sys.sys_send"(%B997C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D238C6, %msg48 = "@core_6"(%D236C6, %msg49) {
CHECK:          %B923C6 = "system.wait_msg"(%D236C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D237C6 = "dma.sys.sys_wait"(%B923C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B924C6, %msg48 = "system.send_msg"(%D237C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D238C6, %msg48 = "dma.sys.sys_send"(%B924C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D226C7, %msg48 = "@core_7"(%D224C7, %msg49) {
CHECK:          %B850C7 = "system.wait_msg"(%D224C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D225C7 = "dma.sys.sys_wait"(%B850C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B851C7, %msg48 = "system.send_msg"(%D225C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D226C7, %msg48 = "dma.sys.sys_send"(%B851C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D260C0, %msg49 = "@core_0"(%D248C0, %msg48) {
CHECK:          %B1002C0 = "system.wait_msg"(%D248C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D249C0 = "dma.sys.sys_wait"(%B1002C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D250C0 = "dma.tensor"(%G1.0x95a000, %B1002C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D251C0 = "dma.tensor"(%G1.0x95b000, %B1002C0) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D252C0 = "dma.tensor"(%L30.0x6980320000, %B1002C0) : (memref<1x128x10x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x10x80xi16, strides: [1600, 800, 80, 1]>, none)
CHECK:          %R3, %B1003C0 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D252C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x10x80xf16, strides: [1600, 800, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D253C0 = "dma.tensor"(%G1.0x9a4000, %B1002C0) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D254C0 = "dma.tensor"(%G1.0x9a3000, %B1002C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D255C0 = "dma.tensor"(%G1.0x9b4000, %B1002C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D256C0 = "dma.tensor"(%G1.0x9b5000, %B1002C0) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B1004C0 = "tsbc.s_bc"(%R0.0x580, %D256C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B1005C0 = "arith.sub"(%C0.0, %R3, %D256C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1006C0 = "arith.max"(%R0.0x1580, %C-45408.0, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1007C0 = "arith.min"(%R0.0x1580, %C45408.0, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1008C0 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1009C0 = "arith.cast"(%R0.0x1200, %D256C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1010C0 = "arith.mul"(%R1, %C0.693359375, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1011C0 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1012C0 = "arith.cast"(%R1, %D256C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1013C0 = "arith.min"(%R0.0x1580, %C15, %D256C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1014C0 = "arith.max"(%R1, %C-15, %D256C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1015C0 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D256C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1016C0 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D256C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1017C0 = "arith.mul"(%R0.0x1580, %R1, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1018C0 = "arith.add"(%R1, %C1.0, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1019C0 = "arith.div"(%C1.0, %R0.0x1200, %D256C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1020C0 = "arith.mul"(%R1, %R3, %D256C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D257C0 = "dma.tensor"(%L30.0x6980708000, %B1003C0) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1021C0 = "arith.copy"(%R1, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1022C0 = "arith.copy"(%R2.0x600, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B1023C0 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D257C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B1024C0 = "tsbc.s_bc"(%R0.0x580, %D257C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B1025C0 = "arith.sub"(%C0.0, %R1, %D257C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1026C0 = "arith.max"(%R3.0x700, %C-45408.0, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1027C0 = "arith.min"(%R3.0x700, %C45408.0, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1028C0 = "arith.mul"(%R3.0x700, %C1.4423828125, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1029C0 = "arith.cast"(%R3.0x380, %D257C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1030C0 = "arith.mul"(%R2.0x600, %C0.693359375, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1031C0 = "arith.sub"(%R3.0x700, %R3.0x380, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1032C0 = "arith.cast"(%R2.0x600, %D257C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1033C0 = "arith.min"(%R3.0x700, %C15, %D257C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B1034C0 = "arith.max"(%R2.0x600, %C-15, %D257C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1035C0 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D257C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1036C0 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D257C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1037C0 = "arith.mul"(%R3.0x700, %R2.0x600, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1038C0 = "arith.add"(%R2.0x600, %C1.0, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1039C0 = "arith.div"(%C1.0, %R3.0x380, %D257C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1040C0 = "arith.mul"(%R2.0x600, %R1, %D257C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1041C0 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D257C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980000000, %D258C0 = "dma.tensor"(%R0.0x1200, %B1023C0) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B1042C0 = "tsbc.s_bc"(%R0.0x580, %D258C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B1043C0 = "arith.sub"(%C0.0, %R3, %D258C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1044C0 = "arith.max"(%R4.0x400, %C-45408.0, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1045C0 = "arith.min"(%R4.0x400, %C45408.0, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1046C0 = "arith.mul"(%R4.0x400, %C1.4423828125, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1047C0 = "arith.cast"(%R4.0x80, %D258C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1048C0 = "arith.mul"(%R2.0x600, %C0.693359375, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1049C0 = "arith.sub"(%R4.0x400, %R4.0x80, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1050C0 = "arith.cast"(%R2.0x600, %D258C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1051C0 = "arith.min"(%R4.0x400, %C15, %D258C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B1052C0 = "arith.max"(%R2.0x600, %C-15, %D258C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1053C0 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D258C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1054C0 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D258C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1055C0 = "arith.mul"(%R4.0x400, %R2.0x600, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1056C0 = "arith.add"(%R2.0x600, %C1.0, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1057C0 = "arith.div"(%C1.0, %R4.0x80, %D258C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1058C0 = "arith.mul"(%R2.0x600, %R3, %D258C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8000, %D259C0 = "dma.tensor"(%R2.0x600, %B1058C0) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B1059C0, %msg49 = "system.send_msg"(%D259C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D260C0, %msg49 = "dma.sys.sys_send"(%B1059C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D258C1, %msg49 = "@core_1"(%D246C1, %msg48) {
CHECK:          %B999C1 = "system.wait_msg"(%D246C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D247C1 = "dma.sys.sys_wait"(%B999C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D248C1 = "dma.tensor"(%G1.0x95a000, %B999C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D249C1 = "dma.tensor"(%G1.0x95b000, %B999C1) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D250C1 = "dma.tensor"(%L30.0x69803205a0, %B999C1) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B1000C1 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D250C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D251C1 = "dma.tensor"(%G1.0x9a4000, %B999C1) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D252C1 = "dma.tensor"(%G1.0x9a3000, %B999C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D253C1 = "dma.tensor"(%G1.0x9b4000, %B999C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D254C1 = "dma.tensor"(%G1.0x9b5000, %B999C1) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B1001C1 = "tsbc.s_bc"(%R0.0x580, %D254C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B1002C1 = "arith.sub"(%C0.0, %R3, %D254C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1003C1 = "arith.max"(%R0.0x1580, %C-45408.0, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1004C1 = "arith.min"(%R0.0x1580, %C45408.0, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1005C1 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1006C1 = "arith.cast"(%R0.0x1200, %D254C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1007C1 = "arith.mul"(%R1, %C0.693359375, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1008C1 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1009C1 = "arith.cast"(%R1, %D254C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1010C1 = "arith.min"(%R0.0x1580, %C15, %D254C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1011C1 = "arith.max"(%R1, %C-15, %D254C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1012C1 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D254C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1013C1 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D254C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1014C1 = "arith.mul"(%R0.0x1580, %R1, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1015C1 = "arith.add"(%R1, %C1.0, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1016C1 = "arith.div"(%C1.0, %R0.0x1200, %D254C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1017C1 = "arith.mul"(%R1, %R3, %D254C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D255C1 = "dma.tensor"(%L30.0x6980708190, %B1000C1) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1018C1 = "arith.copy"(%R1, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1019C1 = "arith.copy"(%R2.0x600, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B1020C1 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D255C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B1021C1 = "tsbc.s_bc"(%R0.0x580, %D255C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B1022C1 = "arith.sub"(%C0.0, %R1, %D255C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1023C1 = "arith.max"(%R3.0x700, %C-45408.0, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1024C1 = "arith.min"(%R3.0x700, %C45408.0, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1025C1 = "arith.mul"(%R3.0x700, %C1.4423828125, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1026C1 = "arith.cast"(%R3.0x380, %D255C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1027C1 = "arith.mul"(%R2.0x600, %C0.693359375, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1028C1 = "arith.sub"(%R3.0x700, %R3.0x380, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1029C1 = "arith.cast"(%R2.0x600, %D255C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1030C1 = "arith.min"(%R3.0x700, %C15, %D255C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B1031C1 = "arith.max"(%R2.0x600, %C-15, %D255C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1032C1 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D255C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1033C1 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D255C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1034C1 = "arith.mul"(%R3.0x700, %R2.0x600, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1035C1 = "arith.add"(%R2.0x600, %C1.0, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1036C1 = "arith.div"(%C1.0, %R3.0x380, %D255C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1037C1 = "arith.mul"(%R2.0x600, %R1, %D255C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1038C1 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D255C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980000190, %D256C1 = "dma.tensor"(%R0.0x1200, %B1020C1) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B1039C1 = "tsbc.s_bc"(%R0.0x580, %D256C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B1040C1 = "arith.sub"(%C0.0, %R3, %D256C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1041C1 = "arith.max"(%R4.0x400, %C-45408.0, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1042C1 = "arith.min"(%R4.0x400, %C45408.0, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1043C1 = "arith.mul"(%R4.0x400, %C1.4423828125, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1044C1 = "arith.cast"(%R4.0x80, %D256C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1045C1 = "arith.mul"(%R2.0x600, %C0.693359375, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1046C1 = "arith.sub"(%R4.0x400, %R4.0x80, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1047C1 = "arith.cast"(%R2.0x600, %D256C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1048C1 = "arith.min"(%R4.0x400, %C15, %D256C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B1049C1 = "arith.max"(%R2.0x600, %C-15, %D256C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1050C1 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D256C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1051C1 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D256C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1052C1 = "arith.mul"(%R4.0x400, %R2.0x600, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1053C1 = "arith.add"(%R2.0x600, %C1.0, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1054C1 = "arith.div"(%C1.0, %R4.0x80, %D256C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1055C1 = "arith.mul"(%R2.0x600, %R3, %D256C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8190, %D257C1 = "dma.tensor"(%R2.0x600, %B1055C1) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B1056C1, %msg49 = "system.send_msg"(%D257C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D258C1, %msg49 = "dma.sys.sys_send"(%B1056C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D258C2, %msg49 = "@core_2"(%D246C2, %msg48) {
CHECK:          %B999C2 = "system.wait_msg"(%D246C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D247C2 = "dma.sys.sys_wait"(%B999C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D248C2 = "dma.tensor"(%G1.0x95a000, %B999C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D249C2 = "dma.tensor"(%G1.0x95b000, %B999C2) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D250C2 = "dma.tensor"(%L30.0x6980320be0, %B999C2) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B1000C2 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D250C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D251C2 = "dma.tensor"(%G1.0x9a4000, %B999C2) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D252C2 = "dma.tensor"(%G1.0x9a3000, %B999C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D253C2 = "dma.tensor"(%G1.0x9b4000, %B999C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D254C2 = "dma.tensor"(%G1.0x9b5000, %B999C2) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B1001C2 = "tsbc.s_bc"(%R0.0x580, %D254C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B1002C2 = "arith.sub"(%C0.0, %R3, %D254C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1003C2 = "arith.max"(%R0.0x1580, %C-45408.0, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1004C2 = "arith.min"(%R0.0x1580, %C45408.0, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1005C2 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1006C2 = "arith.cast"(%R0.0x1200, %D254C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1007C2 = "arith.mul"(%R1, %C0.693359375, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1008C2 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1009C2 = "arith.cast"(%R1, %D254C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1010C2 = "arith.min"(%R0.0x1580, %C15, %D254C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1011C2 = "arith.max"(%R1, %C-15, %D254C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1012C2 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D254C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1013C2 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D254C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1014C2 = "arith.mul"(%R0.0x1580, %R1, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1015C2 = "arith.add"(%R1, %C1.0, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1016C2 = "arith.div"(%C1.0, %R0.0x1200, %D254C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1017C2 = "arith.mul"(%R1, %R3, %D254C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D255C2 = "dma.tensor"(%L30.0x6980708320, %B1000C2) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1018C2 = "arith.copy"(%R1, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1019C2 = "arith.copy"(%R2.0x600, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B1020C2 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D255C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B1021C2 = "tsbc.s_bc"(%R0.0x580, %D255C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B1022C2 = "arith.sub"(%C0.0, %R1, %D255C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1023C2 = "arith.max"(%R3.0x700, %C-45408.0, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1024C2 = "arith.min"(%R3.0x700, %C45408.0, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1025C2 = "arith.mul"(%R3.0x700, %C1.4423828125, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1026C2 = "arith.cast"(%R3.0x380, %D255C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1027C2 = "arith.mul"(%R2.0x600, %C0.693359375, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1028C2 = "arith.sub"(%R3.0x700, %R3.0x380, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1029C2 = "arith.cast"(%R2.0x600, %D255C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1030C2 = "arith.min"(%R3.0x700, %C15, %D255C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B1031C2 = "arith.max"(%R2.0x600, %C-15, %D255C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1032C2 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D255C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1033C2 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D255C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1034C2 = "arith.mul"(%R3.0x700, %R2.0x600, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1035C2 = "arith.add"(%R2.0x600, %C1.0, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1036C2 = "arith.div"(%C1.0, %R3.0x380, %D255C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1037C2 = "arith.mul"(%R2.0x600, %R1, %D255C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1038C2 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D255C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980000320, %D256C2 = "dma.tensor"(%R0.0x1200, %B1020C2) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B1039C2 = "tsbc.s_bc"(%R0.0x580, %D256C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B1040C2 = "arith.sub"(%C0.0, %R3, %D256C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1041C2 = "arith.max"(%R4.0x400, %C-45408.0, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1042C2 = "arith.min"(%R4.0x400, %C45408.0, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1043C2 = "arith.mul"(%R4.0x400, %C1.4423828125, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1044C2 = "arith.cast"(%R4.0x80, %D256C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1045C2 = "arith.mul"(%R2.0x600, %C0.693359375, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1046C2 = "arith.sub"(%R4.0x400, %R4.0x80, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1047C2 = "arith.cast"(%R2.0x600, %D256C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1048C2 = "arith.min"(%R4.0x400, %C15, %D256C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B1049C2 = "arith.max"(%R2.0x600, %C-15, %D256C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1050C2 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D256C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1051C2 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D256C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1052C2 = "arith.mul"(%R4.0x400, %R2.0x600, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1053C2 = "arith.add"(%R2.0x600, %C1.0, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1054C2 = "arith.div"(%C1.0, %R4.0x80, %D256C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1055C2 = "arith.mul"(%R2.0x600, %R3, %D256C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8320, %D257C2 = "dma.tensor"(%R2.0x600, %B1055C2) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B1056C2, %msg49 = "system.send_msg"(%D257C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D258C2, %msg49 = "dma.sys.sys_send"(%B1056C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D258C3, %msg49 = "@core_3"(%D246C3, %msg48) {
CHECK:          %B999C3 = "system.wait_msg"(%D246C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D247C3 = "dma.sys.sys_wait"(%B999C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D248C3 = "dma.tensor"(%G1.0x95a000, %B999C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D249C3 = "dma.tensor"(%G1.0x95b000, %B999C3) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D250C3 = "dma.tensor"(%L30.0x6980321220, %B999C3) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B1000C3 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D250C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D251C3 = "dma.tensor"(%G1.0x9a4000, %B999C3) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D252C3 = "dma.tensor"(%G1.0x9a3000, %B999C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D253C3 = "dma.tensor"(%G1.0x9b4000, %B999C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D254C3 = "dma.tensor"(%G1.0x9b5000, %B999C3) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B1001C3 = "tsbc.s_bc"(%R0.0x580, %D254C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B1002C3 = "arith.sub"(%C0.0, %R3, %D254C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1003C3 = "arith.max"(%R0.0x1580, %C-45408.0, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1004C3 = "arith.min"(%R0.0x1580, %C45408.0, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1005C3 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1006C3 = "arith.cast"(%R0.0x1200, %D254C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1007C3 = "arith.mul"(%R1, %C0.693359375, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1008C3 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1009C3 = "arith.cast"(%R1, %D254C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1010C3 = "arith.min"(%R0.0x1580, %C15, %D254C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1011C3 = "arith.max"(%R1, %C-15, %D254C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1012C3 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D254C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1013C3 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D254C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1014C3 = "arith.mul"(%R0.0x1580, %R1, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1015C3 = "arith.add"(%R1, %C1.0, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1016C3 = "arith.div"(%C1.0, %R0.0x1200, %D254C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1017C3 = "arith.mul"(%R1, %R3, %D254C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D255C3 = "dma.tensor"(%L30.0x69807084b0, %B1000C3) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1018C3 = "arith.copy"(%R1, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1019C3 = "arith.copy"(%R2.0x600, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B1020C3 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D255C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B1021C3 = "tsbc.s_bc"(%R0.0x580, %D255C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B1022C3 = "arith.sub"(%C0.0, %R1, %D255C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1023C3 = "arith.max"(%R3.0x700, %C-45408.0, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1024C3 = "arith.min"(%R3.0x700, %C45408.0, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1025C3 = "arith.mul"(%R3.0x700, %C1.4423828125, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1026C3 = "arith.cast"(%R3.0x380, %D255C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1027C3 = "arith.mul"(%R2.0x600, %C0.693359375, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1028C3 = "arith.sub"(%R3.0x700, %R3.0x380, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1029C3 = "arith.cast"(%R2.0x600, %D255C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1030C3 = "arith.min"(%R3.0x700, %C15, %D255C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B1031C3 = "arith.max"(%R2.0x600, %C-15, %D255C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1032C3 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D255C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1033C3 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D255C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1034C3 = "arith.mul"(%R3.0x700, %R2.0x600, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1035C3 = "arith.add"(%R2.0x600, %C1.0, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1036C3 = "arith.div"(%C1.0, %R3.0x380, %D255C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1037C3 = "arith.mul"(%R2.0x600, %R1, %D255C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1038C3 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D255C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800004b0, %D256C3 = "dma.tensor"(%R0.0x1200, %B1020C3) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B1039C3 = "tsbc.s_bc"(%R0.0x580, %D256C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B1040C3 = "arith.sub"(%C0.0, %R3, %D256C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1041C3 = "arith.max"(%R4.0x400, %C-45408.0, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1042C3 = "arith.min"(%R4.0x400, %C45408.0, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1043C3 = "arith.mul"(%R4.0x400, %C1.4423828125, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1044C3 = "arith.cast"(%R4.0x80, %D256C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1045C3 = "arith.mul"(%R2.0x600, %C0.693359375, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1046C3 = "arith.sub"(%R4.0x400, %R4.0x80, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1047C3 = "arith.cast"(%R2.0x600, %D256C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1048C3 = "arith.min"(%R4.0x400, %C15, %D256C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B1049C3 = "arith.max"(%R2.0x600, %C-15, %D256C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1050C3 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D256C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1051C3 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D256C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1052C3 = "arith.mul"(%R4.0x400, %R2.0x600, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1053C3 = "arith.add"(%R2.0x600, %C1.0, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1054C3 = "arith.div"(%C1.0, %R4.0x80, %D256C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1055C3 = "arith.mul"(%R2.0x600, %R3, %D256C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c84b0, %D257C3 = "dma.tensor"(%R2.0x600, %B1055C3) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B1056C3, %msg49 = "system.send_msg"(%D257C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D258C3, %msg49 = "dma.sys.sys_send"(%B1056C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D254C4, %msg49 = "@core_4"(%D242C4, %msg48) {
CHECK:          %B998C4 = "system.wait_msg"(%D242C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D243C4 = "dma.sys.sys_wait"(%B998C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D244C4 = "dma.tensor"(%G1.0x95a000, %B998C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D245C4 = "dma.tensor"(%G1.0x95b000, %B998C4) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D246C4 = "dma.tensor"(%L30.0x6980321860, %B998C4) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B999C4 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D246C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D247C4 = "dma.tensor"(%G1.0x9a4000, %B998C4) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D248C4 = "dma.tensor"(%G1.0x9a3000, %B998C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D249C4 = "dma.tensor"(%G1.0x9b4000, %B998C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D250C4 = "dma.tensor"(%G1.0x9b5000, %B998C4) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B1000C4 = "tsbc.s_bc"(%R0.0x580, %D250C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B1001C4 = "arith.sub"(%C0.0, %R3, %D250C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1002C4 = "arith.max"(%R0.0x1580, %C-45408.0, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1003C4 = "arith.min"(%R0.0x1580, %C45408.0, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1004C4 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1005C4 = "arith.cast"(%R0.0x1200, %D250C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1006C4 = "arith.mul"(%R1, %C0.693359375, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1007C4 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1008C4 = "arith.cast"(%R1, %D250C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1009C4 = "arith.min"(%R0.0x1580, %C15, %D250C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1010C4 = "arith.max"(%R1, %C-15, %D250C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1011C4 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D250C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1012C4 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D250C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1013C4 = "arith.mul"(%R0.0x1580, %R1, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1014C4 = "arith.add"(%R1, %C1.0, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1015C4 = "arith.div"(%C1.0, %R0.0x1200, %D250C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1016C4 = "arith.mul"(%R1, %R3, %D250C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D251C4 = "dma.tensor"(%L30.0x6980708640, %B999C4) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1017C4 = "arith.copy"(%R1, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1018C4 = "arith.copy"(%R2.0x600, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B1019C4 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D251C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B1020C4 = "tsbc.s_bc"(%R0.0x580, %D251C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B1021C4 = "arith.sub"(%C0.0, %R1, %D251C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1022C4 = "arith.max"(%R3.0x700, %C-45408.0, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1023C4 = "arith.min"(%R3.0x700, %C45408.0, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1024C4 = "arith.mul"(%R3.0x700, %C1.4423828125, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1025C4 = "arith.cast"(%R3.0x380, %D251C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1026C4 = "arith.mul"(%R2.0x600, %C0.693359375, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1027C4 = "arith.sub"(%R3.0x700, %R3.0x380, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1028C4 = "arith.cast"(%R2.0x600, %D251C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1029C4 = "arith.min"(%R3.0x700, %C15, %D251C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B1030C4 = "arith.max"(%R2.0x600, %C-15, %D251C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1031C4 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D251C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1032C4 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D251C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1033C4 = "arith.mul"(%R3.0x700, %R2.0x600, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1034C4 = "arith.add"(%R2.0x600, %C1.0, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1035C4 = "arith.div"(%C1.0, %R3.0x380, %D251C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1036C4 = "arith.mul"(%R2.0x600, %R1, %D251C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1037C4 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D251C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980000640, %D252C4 = "dma.tensor"(%R0.0x1200, %B1019C4) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B1038C4 = "tsbc.s_bc"(%R0.0x580, %D252C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B1039C4 = "arith.sub"(%C0.0, %R3, %D252C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1040C4 = "arith.max"(%R4.0x400, %C-45408.0, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1041C4 = "arith.min"(%R4.0x400, %C45408.0, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1042C4 = "arith.mul"(%R4.0x400, %C1.4423828125, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1043C4 = "arith.cast"(%R4.0x80, %D252C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1044C4 = "arith.mul"(%R2.0x600, %C0.693359375, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1045C4 = "arith.sub"(%R4.0x400, %R4.0x80, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1046C4 = "arith.cast"(%R2.0x600, %D252C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1047C4 = "arith.min"(%R4.0x400, %C15, %D252C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B1048C4 = "arith.max"(%R2.0x600, %C-15, %D252C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1049C4 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D252C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1050C4 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D252C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1051C4 = "arith.mul"(%R4.0x400, %R2.0x600, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1052C4 = "arith.add"(%R2.0x600, %C1.0, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1053C4 = "arith.div"(%C1.0, %R4.0x80, %D252C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1054C4 = "arith.mul"(%R2.0x600, %R3, %D252C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8640, %D253C4 = "dma.tensor"(%R2.0x600, %B1054C4) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B1055C4, %msg49 = "system.send_msg"(%D253C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D254C4, %msg49 = "dma.sys.sys_send"(%B1055C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D254C5, %msg49 = "@core_5"(%D242C5, %msg48) {
CHECK:          %B998C5 = "system.wait_msg"(%D242C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D243C5 = "dma.sys.sys_wait"(%B998C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D244C5 = "dma.tensor"(%G1.0x95a000, %B998C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D245C5 = "dma.tensor"(%G1.0x95b000, %B998C5) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D246C5 = "dma.tensor"(%L30.0x6980321ea0, %B998C5) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B999C5 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D246C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D247C5 = "dma.tensor"(%G1.0x9a4000, %B998C5) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D248C5 = "dma.tensor"(%G1.0x9a3000, %B998C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D249C5 = "dma.tensor"(%G1.0x9b4000, %B998C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D250C5 = "dma.tensor"(%G1.0x9b5000, %B998C5) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B1000C5 = "tsbc.s_bc"(%R0.0x580, %D250C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B1001C5 = "arith.sub"(%C0.0, %R3, %D250C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1002C5 = "arith.max"(%R0.0x1580, %C-45408.0, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1003C5 = "arith.min"(%R0.0x1580, %C45408.0, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1004C5 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1005C5 = "arith.cast"(%R0.0x1200, %D250C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1006C5 = "arith.mul"(%R1, %C0.693359375, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1007C5 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1008C5 = "arith.cast"(%R1, %D250C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1009C5 = "arith.min"(%R0.0x1580, %C15, %D250C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1010C5 = "arith.max"(%R1, %C-15, %D250C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B1011C5 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D250C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1012C5 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D250C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1013C5 = "arith.mul"(%R0.0x1580, %R1, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1014C5 = "arith.add"(%R1, %C1.0, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1015C5 = "arith.div"(%C1.0, %R0.0x1200, %D250C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B1016C5 = "arith.mul"(%R1, %R3, %D250C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D251C5 = "dma.tensor"(%L30.0x69807087d0, %B999C5) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B1017C5 = "arith.copy"(%R1, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B1018C5 = "arith.copy"(%R2.0x600, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B1019C5 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D251C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B1020C5 = "tsbc.s_bc"(%R0.0x580, %D251C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B1021C5 = "arith.sub"(%C0.0, %R1, %D251C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1022C5 = "arith.max"(%R3.0x700, %C-45408.0, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1023C5 = "arith.min"(%R3.0x700, %C45408.0, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1024C5 = "arith.mul"(%R3.0x700, %C1.4423828125, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1025C5 = "arith.cast"(%R3.0x380, %D251C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1026C5 = "arith.mul"(%R2.0x600, %C0.693359375, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1027C5 = "arith.sub"(%R3.0x700, %R3.0x380, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1028C5 = "arith.cast"(%R2.0x600, %D251C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1029C5 = "arith.min"(%R3.0x700, %C15, %D251C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B1030C5 = "arith.max"(%R2.0x600, %C-15, %D251C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1031C5 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D251C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B1032C5 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D251C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1033C5 = "arith.mul"(%R3.0x700, %R2.0x600, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B1034C5 = "arith.add"(%R2.0x600, %C1.0, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1035C5 = "arith.div"(%C1.0, %R3.0x380, %D251C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1036C5 = "arith.mul"(%R2.0x600, %R1, %D251C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1037C5 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D251C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800007d0, %D252C5 = "dma.tensor"(%R0.0x1200, %B1019C5) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B1038C5 = "tsbc.s_bc"(%R0.0x580, %D252C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B1039C5 = "arith.sub"(%C0.0, %R3, %D252C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1040C5 = "arith.max"(%R4.0x400, %C-45408.0, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1041C5 = "arith.min"(%R4.0x400, %C45408.0, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1042C5 = "arith.mul"(%R4.0x400, %C1.4423828125, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1043C5 = "arith.cast"(%R4.0x80, %D252C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1044C5 = "arith.mul"(%R2.0x600, %C0.693359375, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1045C5 = "arith.sub"(%R4.0x400, %R4.0x80, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1046C5 = "arith.cast"(%R2.0x600, %D252C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1047C5 = "arith.min"(%R4.0x400, %C15, %D252C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B1048C5 = "arith.max"(%R2.0x600, %C-15, %D252C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B1049C5 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D252C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B1050C5 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D252C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1051C5 = "arith.mul"(%R4.0x400, %R2.0x600, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B1052C5 = "arith.add"(%R2.0x600, %C1.0, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1053C5 = "arith.div"(%C1.0, %R4.0x80, %D252C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B1054C5 = "arith.mul"(%R2.0x600, %R3, %D252C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c87d0, %D253C5 = "dma.tensor"(%R2.0x600, %B1054C5) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B1055C5, %msg49 = "system.send_msg"(%D253C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D254C5, %msg49 = "dma.sys.sys_send"(%B1055C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D250C6, %msg49 = "@core_6"(%D238C6, %msg48) {
CHECK:          %B925C6 = "system.wait_msg"(%D238C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D239C6 = "dma.sys.sys_wait"(%B925C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D240C6 = "dma.tensor"(%G1.0x95a000, %B925C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D241C6 = "dma.tensor"(%G1.0x95b000, %B925C6) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D242C6 = "dma.tensor"(%L30.0x69803224e0, %B925C6) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B926C6 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D242C6) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D243C6 = "dma.tensor"(%G1.0x9a4000, %B925C6) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D244C6 = "dma.tensor"(%G1.0x9a3000, %B925C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D245C6 = "dma.tensor"(%G1.0x9b4000, %B925C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D246C6 = "dma.tensor"(%G1.0x9b5000, %B925C6) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B927C6 = "tsbc.s_bc"(%R0.0x580, %D246C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B928C6 = "arith.sub"(%C0.0, %R3, %D246C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B929C6 = "arith.max"(%R0.0x1580, %C-45408.0, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B930C6 = "arith.min"(%R0.0x1580, %C45408.0, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B931C6 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B932C6 = "arith.cast"(%R0.0x1200, %D246C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B933C6 = "arith.mul"(%R1, %C0.693359375, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B934C6 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B935C6 = "arith.cast"(%R1, %D246C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B936C6 = "arith.min"(%R0.0x1580, %C15, %D246C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B937C6 = "arith.max"(%R1, %C-15, %D246C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B938C6 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D246C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B939C6 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D246C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B940C6 = "arith.mul"(%R0.0x1580, %R1, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B941C6 = "arith.add"(%R1, %C1.0, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B942C6 = "arith.div"(%C1.0, %R0.0x1200, %D246C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B943C6 = "arith.mul"(%R1, %R3, %D246C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D247C6 = "dma.tensor"(%L30.0x6980708960, %B926C6) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B944C6 = "arith.copy"(%R1, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B945C6 = "arith.copy"(%R2.0x600, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B946C6 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D247C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B947C6 = "tsbc.s_bc"(%R0.0x580, %D247C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B948C6 = "arith.sub"(%C0.0, %R1, %D247C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B949C6 = "arith.max"(%R3.0x700, %C-45408.0, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B950C6 = "arith.min"(%R3.0x700, %C45408.0, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B951C6 = "arith.mul"(%R3.0x700, %C1.4423828125, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B952C6 = "arith.cast"(%R3.0x380, %D247C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B953C6 = "arith.mul"(%R2.0x600, %C0.693359375, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B954C6 = "arith.sub"(%R3.0x700, %R3.0x380, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B955C6 = "arith.cast"(%R2.0x600, %D247C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B956C6 = "arith.min"(%R3.0x700, %C15, %D247C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B957C6 = "arith.max"(%R2.0x600, %C-15, %D247C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B958C6 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D247C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B959C6 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D247C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B960C6 = "arith.mul"(%R3.0x700, %R2.0x600, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B961C6 = "arith.add"(%R2.0x600, %C1.0, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B962C6 = "arith.div"(%C1.0, %R3.0x380, %D247C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B963C6 = "arith.mul"(%R2.0x600, %R1, %D247C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B964C6 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D247C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980000960, %D248C6 = "dma.tensor"(%R0.0x1200, %B946C6) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B965C6 = "tsbc.s_bc"(%R0.0x580, %D248C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B966C6 = "arith.sub"(%C0.0, %R3, %D248C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B967C6 = "arith.max"(%R4.0x400, %C-45408.0, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B968C6 = "arith.min"(%R4.0x400, %C45408.0, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B969C6 = "arith.mul"(%R4.0x400, %C1.4423828125, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B970C6 = "arith.cast"(%R4.0x80, %D248C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B971C6 = "arith.mul"(%R2.0x600, %C0.693359375, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B972C6 = "arith.sub"(%R4.0x400, %R4.0x80, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B973C6 = "arith.cast"(%R2.0x600, %D248C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B974C6 = "arith.min"(%R4.0x400, %C15, %D248C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B975C6 = "arith.max"(%R2.0x600, %C-15, %D248C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B976C6 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D248C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B977C6 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D248C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B978C6 = "arith.mul"(%R4.0x400, %R2.0x600, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B979C6 = "arith.add"(%R2.0x600, %C1.0, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B980C6 = "arith.div"(%C1.0, %R4.0x80, %D248C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B981C6 = "arith.mul"(%R2.0x600, %R3, %D248C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8960, %D249C6 = "dma.tensor"(%R2.0x600, %B981C6) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B982C6, %msg49 = "system.send_msg"(%D249C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D250C6, %msg49 = "dma.sys.sys_send"(%B982C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D238C7, %msg49 = "@core_7"(%D226C7, %msg48) {
CHECK:          %B852C7 = "system.wait_msg"(%D226C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D227C7 = "dma.sys.sys_wait"(%B852C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5, %D228C7 = "dma.tensor"(%G1.0x95a000, %B852C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D229C7 = "dma.tensor"(%G1.0x95b000, %B852C7) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R1, %D230C7 = "dma.tensor"(%L30.0x6980322b20, %B852C7) : (memref<1x128x11x80xi16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x11x80xi16, strides: [1792, 896, 80, 1]>, none)
CHECK:          %R3, %B853C7 = "conv.normal"(%R1, %R0, %R5, %C0.0, %D230C7) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x11x80xf16, strides: [1792, 896, 80, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %D231C7 = "dma.tensor"(%G1.0x9a4000, %B852C7) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R4, %D232C7 = "dma.tensor"(%G1.0x9a3000, %B852C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R4.0x40, %D233C7 = "dma.tensor"(%G1.0x9b4000, %B852C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2.0x400, %D234C7 = "dma.tensor"(%G1.0x9b5000, %B852C7) : (memref<1x128x1x128xi16, strides: [16384, 128, 128, 1]>, none) -> (memref<1x128x1x128xi16, strides: [256, 128, 128, 1]>, none)
CHECK:          %R0.0x1900, %B854C7 = "tsbc.s_bc"(%R0.0x580, %D234C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R0.0x1580, %B855C7 = "arith.sub"(%C0.0, %R3, %D234C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B856C7 = "arith.max"(%R0.0x1580, %C-45408.0, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B857C7 = "arith.min"(%R0.0x1580, %C45408.0, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B858C7 = "arith.mul"(%R0.0x1580, %C1.4423828125, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B859C7 = "arith.cast"(%R0.0x1200, %D234C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B860C7 = "arith.mul"(%R1, %C0.693359375, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B861C7 = "arith.sub"(%R0.0x1580, %R0.0x1200, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B862C7 = "arith.cast"(%R1, %D234C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B863C7 = "arith.min"(%R0.0x1580, %C15, %D234C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R0.0x1580, %B864C7 = "arith.max"(%R1, %C-15, %D234C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1, %B865C7 = "arith.add_satu"(%R0.0x1580, %C15, %C10, %D234C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B866C7 = "sfu.taylor_4x"(%R0.0x1200, %R0.0x1900, %D234C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B867C7 = "arith.mul"(%R0.0x1580, %R1, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B868C7 = "arith.add"(%R1, %C1.0, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B869C7 = "arith.div"(%C1.0, %R0.0x1200, %D234C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %B870C7 = "arith.mul"(%R1, %R3, %D234C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %D235C7 = "dma.tensor"(%L30.0x6980708af0, %B853C7) : (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %B871C7 = "arith.copy"(%R1, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0.0x1580, %B872C7 = "arith.copy"(%R2.0x600, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1, %B873C7 = "conv.normal"(%R0.0x1200, %R2, %R4, %C0.0, %D235C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0xa80, %B874C7 = "tsbc.s_bc"(%R0.0x580, %D235C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x700, %B875C7 = "arith.sub"(%C0.0, %R1, %D235C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B876C7 = "arith.max"(%R3.0x700, %C-45408.0, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B877C7 = "arith.min"(%R3.0x700, %C45408.0, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B878C7 = "arith.mul"(%R3.0x700, %C1.4423828125, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B879C7 = "arith.cast"(%R3.0x380, %D235C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B880C7 = "arith.mul"(%R2.0x600, %C0.693359375, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B881C7 = "arith.sub"(%R3.0x700, %R3.0x380, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B882C7 = "arith.cast"(%R2.0x600, %D235C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B883C7 = "arith.min"(%R3.0x700, %C15, %D235C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3.0x700, %B884C7 = "arith.max"(%R2.0x600, %C-15, %D235C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B885C7 = "arith.add_satu"(%R3.0x700, %C15, %C10, %D235C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x700, %B886C7 = "sfu.taylor_4x"(%R3.0x380, %R3.0xa80, %D235C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B887C7 = "arith.mul"(%R3.0x700, %R2.0x600, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x380, %B888C7 = "arith.add"(%R2.0x600, %C1.0, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B889C7 = "arith.div"(%C1.0, %R3.0x380, %D235C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B890C7 = "arith.mul"(%R2.0x600, %R1, %D235C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B891C7 = "conv.normal"(%R2.0x600, %R2.0x400, %R4.0x40, %C0.0, %D235C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<128x128x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x6980000af0, %D236C7 = "dma.tensor"(%R0.0x1200, %B873C7) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %R4.0x780, %B892C7 = "tsbc.s_bc"(%R0.0x580, %D236C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x400, %B893C7 = "arith.sub"(%C0.0, %R3, %D236C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B894C7 = "arith.max"(%R4.0x400, %C-45408.0, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B895C7 = "arith.min"(%R4.0x400, %C45408.0, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B896C7 = "arith.mul"(%R4.0x400, %C1.4423828125, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B897C7 = "arith.cast"(%R4.0x80, %D236C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B898C7 = "arith.mul"(%R2.0x600, %C0.693359375, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B899C7 = "arith.sub"(%R4.0x400, %R4.0x80, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B900C7 = "arith.cast"(%R2.0x600, %D236C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B901C7 = "arith.min"(%R4.0x400, %C15, %D236C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4.0x400, %B902C7 = "arith.max"(%R2.0x600, %C-15, %D236C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x600, %B903C7 = "arith.add_satu"(%R4.0x400, %C15, %C10, %D236C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x400, %B904C7 = "sfu.taylor_4x"(%R4.0x80, %R4.0x780, %D236C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B905C7 = "arith.mul"(%R4.0x400, %R2.0x600, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R4.0x80, %B906C7 = "arith.add"(%R2.0x600, %C1.0, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B907C7 = "arith.div"(%C1.0, %R4.0x80, %D236C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x600, %B908C7 = "arith.mul"(%R2.0x600, %R3, %D236C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %L30.0x69800c8af0, %D237C7 = "dma.tensor"(%R2.0x600, %B908C7) : (memref<1x128x5x40xi16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xi16, strides: [204800, 1600, 40, 1]>, none)
CHECK:          %B909C7, %msg49 = "system.send_msg"(%D237C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D238C7, %msg49 = "dma.sys.sys_send"(%B909C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D262C0, %msg48 = "@core_0"(%D260C0, %msg49) {
CHECK:          %B1060C0 = "system.wait_msg"(%D260C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D261C0 = "dma.sys.sys_wait"(%B1060C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1061C0, %msg48 = "system.send_msg"(%D261C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D262C0, %msg48 = "dma.sys.sys_send"(%B1061C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D260C1, %msg48 = "@core_1"(%D258C1, %msg49) {
CHECK:          %B1057C1 = "system.wait_msg"(%D258C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D259C1 = "dma.sys.sys_wait"(%B1057C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1058C1, %msg48 = "system.send_msg"(%D259C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D260C1, %msg48 = "dma.sys.sys_send"(%B1058C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D260C2, %msg48 = "@core_2"(%D258C2, %msg49) {
CHECK:          %B1057C2 = "system.wait_msg"(%D258C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D259C2 = "dma.sys.sys_wait"(%B1057C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1058C2, %msg48 = "system.send_msg"(%D259C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D260C2, %msg48 = "dma.sys.sys_send"(%B1058C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D260C3, %msg48 = "@core_3"(%D258C3, %msg49) {
CHECK:          %B1057C3 = "system.wait_msg"(%D258C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D259C3 = "dma.sys.sys_wait"(%B1057C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1058C3, %msg48 = "system.send_msg"(%D259C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D260C3, %msg48 = "dma.sys.sys_send"(%B1058C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D256C4, %msg48 = "@core_4"(%D254C4, %msg49) {
CHECK:          %B1056C4 = "system.wait_msg"(%D254C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D255C4 = "dma.sys.sys_wait"(%B1056C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1057C4, %msg48 = "system.send_msg"(%D255C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D256C4, %msg48 = "dma.sys.sys_send"(%B1057C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D256C5, %msg48 = "@core_5"(%D254C5, %msg49) {
CHECK:          %B1056C5 = "system.wait_msg"(%D254C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D255C5 = "dma.sys.sys_wait"(%B1056C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1057C5, %msg48 = "system.send_msg"(%D255C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D256C5, %msg48 = "dma.sys.sys_send"(%B1057C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D252C6, %msg48 = "@core_6"(%D250C6, %msg49) {
CHECK:          %B983C6 = "system.wait_msg"(%D250C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D251C6 = "dma.sys.sys_wait"(%B983C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B984C6, %msg48 = "system.send_msg"(%D251C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D252C6, %msg48 = "dma.sys.sys_send"(%B984C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D240C7, %msg48 = "@core_7"(%D238C7, %msg49) {
CHECK:          %B910C7 = "system.wait_msg"(%D238C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D239C7 = "dma.sys.sys_wait"(%B910C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B911C7, %msg48 = "system.send_msg"(%D239C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D240C7, %msg48 = "dma.sys.sys_send"(%B911C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D273C0, %msg49 = "@core_0"(%D262C0, %msg48) {
CHECK:          %B1062C0 = "system.wait_msg"(%D262C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D263C0 = "dma.sys.sys_wait"(%B1062C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D264C0 = "dma.tensor"(%G1.0x9bd000, %B1062C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D265C0 = "dma.tensor"(%G1.0x9be000, %B1062C0) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D266C0 = "dma.tensor"(%L30.0x69800c8000, %B1062C0) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4, %B1063C0 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D266C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D267C0 = "dma.tensor"(%G1.0xa07000, %B1062C0) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B1064C0 = "tsbc.s_bc"(%R0.0x580, %D267C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B1065C0 = "arith.sub"(%C0.0, %R4, %D267C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1066C0 = "arith.max"(%R2.0x380, %C-45408.0, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1067C0 = "arith.min"(%R2.0x380, %C45408.0, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1068C0 = "arith.mul"(%R2.0x380, %C1.4423828125, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1069C0 = "arith.cast"(%R2, %D267C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1070C0 = "arith.mul"(%R1.0x400, %C0.693359375, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1071C0 = "arith.sub"(%R2.0x380, %R2, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1072C0 = "arith.cast"(%R1.0x400, %D267C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1073C0 = "arith.min"(%R2.0x380, %C15, %D267C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B1074C0 = "arith.max"(%R1.0x400, %C-15, %D267C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1075C0 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D267C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1076C0 = "sfu.taylor_4x"(%R2, %R2.0x700, %D267C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1077C0 = "arith.mul"(%R2.0x380, %R1.0x400, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1078C0 = "arith.add"(%R1.0x400, %C1.0, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1079C0 = "arith.div"(%C1.0, %R2, %D267C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1080C0 = "arith.mul"(%R1.0x400, %R4, %D267C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D268C0 = "dma.tensor"(%L30.0x6980000000, %B1063C0) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D269C0 = "dma.tensor"(%G1.0xa06000, %B1063C0) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1081C0 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D269C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D270C0 = "dma.tensor"(%G1.0xa17000, %B1080C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1082C0 = "tsbc.s_bc"(%R0.0x580, %D270C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1083C0 = "arith.sub"(%C0.0, %R2, %D270C0) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1084C0 = "arith.max"(%R1.0xb00, %C-45408.0, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1085C0 = "arith.min"(%R1.0xb00, %C45408.0, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1086C0 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1087C0 = "arith.cast"(%R1.0x780, %D270C0) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1088C0 = "arith.mul"(%R3, %C0.693359375, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1089C0 = "arith.sub"(%R1.0xb00, %R1.0x780, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1090C0 = "arith.cast"(%R3, %D270C0) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1091C0 = "arith.min"(%R1.0xb00, %C15, %D270C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1092C0 = "arith.max"(%R3, %C-15, %D270C0) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1093C0 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D270C0) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1094C0 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D270C0) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1095C0 = "arith.mul"(%R1.0xb00, %R3, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1096C0 = "arith.add"(%R3, %C1.0, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1097C0 = "arith.div"(%C1.0, %R1.0x780, %D270C0) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1098C0 = "arith.mul"(%R3, %R2, %D270C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D271C0 = "dma.tensor"(%G1.0xa18000, %B1081C0) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1099C0 = "arith.copy"(%R1.0x400, %D271C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1100C0 = "arith.copy"(%R3, %D271C0) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1101C0 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D271C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1102C0 = "tsbc.s_bc"(%R0.0x580, %D271C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1103C0 = "arith.sub"(%C0.0, %R1.0x400, %D271C0) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1104C0 = "arith.max"(%R4.0x700, %C-45408.0, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1105C0 = "arith.min"(%R4.0x700, %C45408.0, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1106C0 = "arith.mul"(%R4.0x700, %C1.4423828125, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1107C0 = "arith.cast"(%R4, %D271C0) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1108C0 = "arith.mul"(%R2, %C0.693359375, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1109C0 = "arith.sub"(%R4.0x700, %R4, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1110C0 = "arith.cast"(%R2, %D271C0) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1111C0 = "arith.min"(%R4.0x700, %C15, %D271C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1112C0 = "arith.max"(%R2, %C-15, %D271C0) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1113C0 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D271C0) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1114C0 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D271C0) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1115C0 = "arith.mul"(%R4.0x700, %R2, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1116C0 = "arith.add"(%R2, %C1.0, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1117C0 = "arith.div"(%C1.0, %R4, %D271C0) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1118C0 = "arith.mul"(%R2, %R1.0x400, %D271C0) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x6980957000, %D272C0 = "dma.tensor"(%R2, %B1118C0) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1119C0, %msg49 = "system.send_msg"(%D272C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D273C0, %msg49 = "dma.sys.sys_send"(%B1119C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D271C1, %msg49 = "@core_1"(%D260C1, %msg48) {
CHECK:          %B1059C1 = "system.wait_msg"(%D260C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D261C1 = "dma.sys.sys_wait"(%B1059C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D262C1 = "dma.tensor"(%G1.0x9bd000, %B1059C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D263C1 = "dma.tensor"(%G1.0x9be000, %B1059C1) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D264C1 = "dma.tensor"(%L30.0x69800c8140, %B1059C1) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B1060C1 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D264C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D265C1 = "dma.tensor"(%G1.0xa07000, %B1059C1) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B1061C1 = "tsbc.s_bc"(%R0.0x580, %D265C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B1062C1 = "arith.sub"(%C0.0, %R4, %D265C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1063C1 = "arith.max"(%R2.0x380, %C-45408.0, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1064C1 = "arith.min"(%R2.0x380, %C45408.0, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1065C1 = "arith.mul"(%R2.0x380, %C1.4423828125, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1066C1 = "arith.cast"(%R2, %D265C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1067C1 = "arith.mul"(%R1.0x400, %C0.693359375, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1068C1 = "arith.sub"(%R2.0x380, %R2, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1069C1 = "arith.cast"(%R1.0x400, %D265C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1070C1 = "arith.min"(%R2.0x380, %C15, %D265C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B1071C1 = "arith.max"(%R1.0x400, %C-15, %D265C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1072C1 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D265C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1073C1 = "sfu.taylor_4x"(%R2, %R2.0x700, %D265C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1074C1 = "arith.mul"(%R2.0x380, %R1.0x400, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1075C1 = "arith.add"(%R1.0x400, %C1.0, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1076C1 = "arith.div"(%C1.0, %R2, %D265C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1077C1 = "arith.mul"(%R1.0x400, %R4, %D265C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D266C1 = "dma.tensor"(%L30.0x6980000190, %B1060C1) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D267C1 = "dma.tensor"(%G1.0xa06000, %B1060C1) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1078C1 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D267C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D268C1 = "dma.tensor"(%G1.0xa17000, %B1077C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1079C1 = "tsbc.s_bc"(%R0.0x580, %D268C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1080C1 = "arith.sub"(%C0.0, %R2, %D268C1) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1081C1 = "arith.max"(%R1.0xb00, %C-45408.0, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1082C1 = "arith.min"(%R1.0xb00, %C45408.0, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1083C1 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1084C1 = "arith.cast"(%R1.0x780, %D268C1) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1085C1 = "arith.mul"(%R3, %C0.693359375, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1086C1 = "arith.sub"(%R1.0xb00, %R1.0x780, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1087C1 = "arith.cast"(%R3, %D268C1) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1088C1 = "arith.min"(%R1.0xb00, %C15, %D268C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1089C1 = "arith.max"(%R3, %C-15, %D268C1) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1090C1 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D268C1) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1091C1 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D268C1) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1092C1 = "arith.mul"(%R1.0xb00, %R3, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1093C1 = "arith.add"(%R3, %C1.0, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1094C1 = "arith.div"(%C1.0, %R1.0x780, %D268C1) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1095C1 = "arith.mul"(%R3, %R2, %D268C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D269C1 = "dma.tensor"(%G1.0xa18000, %B1078C1) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1096C1 = "arith.copy"(%R1.0x400, %D269C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1097C1 = "arith.copy"(%R3, %D269C1) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1098C1 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D269C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1099C1 = "tsbc.s_bc"(%R0.0x580, %D269C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1100C1 = "arith.sub"(%C0.0, %R1.0x400, %D269C1) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1101C1 = "arith.max"(%R4.0x700, %C-45408.0, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1102C1 = "arith.min"(%R4.0x700, %C45408.0, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1103C1 = "arith.mul"(%R4.0x700, %C1.4423828125, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1104C1 = "arith.cast"(%R4, %D269C1) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1105C1 = "arith.mul"(%R2, %C0.693359375, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1106C1 = "arith.sub"(%R4.0x700, %R4, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1107C1 = "arith.cast"(%R2, %D269C1) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1108C1 = "arith.min"(%R4.0x700, %C15, %D269C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1109C1 = "arith.max"(%R2, %C-15, %D269C1) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1110C1 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D269C1) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1111C1 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D269C1) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1112C1 = "arith.mul"(%R4.0x700, %R2, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1113C1 = "arith.add"(%R2, %C1.0, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1114C1 = "arith.div"(%C1.0, %R4, %D269C1) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1115C1 = "arith.mul"(%R2, %R1.0x400, %D269C1) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x6980957190, %D270C1 = "dma.tensor"(%R2, %B1115C1) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1116C1, %msg49 = "system.send_msg"(%D270C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D271C1, %msg49 = "dma.sys.sys_send"(%B1116C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D271C2, %msg49 = "@core_2"(%D260C2, %msg48) {
CHECK:          %B1059C2 = "system.wait_msg"(%D260C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D261C2 = "dma.sys.sys_wait"(%B1059C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D262C2 = "dma.tensor"(%G1.0x9bd000, %B1059C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D263C2 = "dma.tensor"(%G1.0x9be000, %B1059C2) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D264C2 = "dma.tensor"(%L30.0x69800c82d0, %B1059C2) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B1060C2 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D264C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D265C2 = "dma.tensor"(%G1.0xa07000, %B1059C2) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B1061C2 = "tsbc.s_bc"(%R0.0x580, %D265C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B1062C2 = "arith.sub"(%C0.0, %R4, %D265C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1063C2 = "arith.max"(%R2.0x380, %C-45408.0, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1064C2 = "arith.min"(%R2.0x380, %C45408.0, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1065C2 = "arith.mul"(%R2.0x380, %C1.4423828125, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1066C2 = "arith.cast"(%R2, %D265C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1067C2 = "arith.mul"(%R1.0x400, %C0.693359375, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1068C2 = "arith.sub"(%R2.0x380, %R2, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1069C2 = "arith.cast"(%R1.0x400, %D265C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1070C2 = "arith.min"(%R2.0x380, %C15, %D265C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B1071C2 = "arith.max"(%R1.0x400, %C-15, %D265C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1072C2 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D265C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1073C2 = "sfu.taylor_4x"(%R2, %R2.0x700, %D265C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1074C2 = "arith.mul"(%R2.0x380, %R1.0x400, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1075C2 = "arith.add"(%R1.0x400, %C1.0, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1076C2 = "arith.div"(%C1.0, %R2, %D265C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1077C2 = "arith.mul"(%R1.0x400, %R4, %D265C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D266C2 = "dma.tensor"(%L30.0x6980000320, %B1060C2) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D267C2 = "dma.tensor"(%G1.0xa06000, %B1060C2) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1078C2 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D267C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D268C2 = "dma.tensor"(%G1.0xa17000, %B1077C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1079C2 = "tsbc.s_bc"(%R0.0x580, %D268C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1080C2 = "arith.sub"(%C0.0, %R2, %D268C2) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1081C2 = "arith.max"(%R1.0xb00, %C-45408.0, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1082C2 = "arith.min"(%R1.0xb00, %C45408.0, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1083C2 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1084C2 = "arith.cast"(%R1.0x780, %D268C2) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1085C2 = "arith.mul"(%R3, %C0.693359375, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1086C2 = "arith.sub"(%R1.0xb00, %R1.0x780, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1087C2 = "arith.cast"(%R3, %D268C2) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1088C2 = "arith.min"(%R1.0xb00, %C15, %D268C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1089C2 = "arith.max"(%R3, %C-15, %D268C2) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1090C2 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D268C2) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1091C2 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D268C2) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1092C2 = "arith.mul"(%R1.0xb00, %R3, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1093C2 = "arith.add"(%R3, %C1.0, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1094C2 = "arith.div"(%C1.0, %R1.0x780, %D268C2) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1095C2 = "arith.mul"(%R3, %R2, %D268C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D269C2 = "dma.tensor"(%G1.0xa18000, %B1078C2) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1096C2 = "arith.copy"(%R1.0x400, %D269C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1097C2 = "arith.copy"(%R3, %D269C2) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1098C2 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D269C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1099C2 = "tsbc.s_bc"(%R0.0x580, %D269C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1100C2 = "arith.sub"(%C0.0, %R1.0x400, %D269C2) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1101C2 = "arith.max"(%R4.0x700, %C-45408.0, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1102C2 = "arith.min"(%R4.0x700, %C45408.0, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1103C2 = "arith.mul"(%R4.0x700, %C1.4423828125, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1104C2 = "arith.cast"(%R4, %D269C2) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1105C2 = "arith.mul"(%R2, %C0.693359375, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1106C2 = "arith.sub"(%R4.0x700, %R4, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1107C2 = "arith.cast"(%R2, %D269C2) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1108C2 = "arith.min"(%R4.0x700, %C15, %D269C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1109C2 = "arith.max"(%R2, %C-15, %D269C2) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1110C2 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D269C2) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1111C2 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D269C2) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1112C2 = "arith.mul"(%R4.0x700, %R2, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1113C2 = "arith.add"(%R2, %C1.0, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1114C2 = "arith.div"(%C1.0, %R4, %D269C2) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1115C2 = "arith.mul"(%R2, %R1.0x400, %D269C2) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x6980957320, %D270C2 = "dma.tensor"(%R2, %B1115C2) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1116C2, %msg49 = "system.send_msg"(%D270C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D271C2, %msg49 = "dma.sys.sys_send"(%B1116C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D271C3, %msg49 = "@core_3"(%D260C3, %msg48) {
CHECK:          %B1059C3 = "system.wait_msg"(%D260C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D261C3 = "dma.sys.sys_wait"(%B1059C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D262C3 = "dma.tensor"(%G1.0x9bd000, %B1059C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D263C3 = "dma.tensor"(%G1.0x9be000, %B1059C3) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D264C3 = "dma.tensor"(%L30.0x69800c8460, %B1059C3) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B1060C3 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D264C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D265C3 = "dma.tensor"(%G1.0xa07000, %B1059C3) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B1061C3 = "tsbc.s_bc"(%R0.0x580, %D265C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B1062C3 = "arith.sub"(%C0.0, %R4, %D265C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1063C3 = "arith.max"(%R2.0x380, %C-45408.0, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1064C3 = "arith.min"(%R2.0x380, %C45408.0, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1065C3 = "arith.mul"(%R2.0x380, %C1.4423828125, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1066C3 = "arith.cast"(%R2, %D265C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1067C3 = "arith.mul"(%R1.0x400, %C0.693359375, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1068C3 = "arith.sub"(%R2.0x380, %R2, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1069C3 = "arith.cast"(%R1.0x400, %D265C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1070C3 = "arith.min"(%R2.0x380, %C15, %D265C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B1071C3 = "arith.max"(%R1.0x400, %C-15, %D265C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1072C3 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D265C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1073C3 = "sfu.taylor_4x"(%R2, %R2.0x700, %D265C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1074C3 = "arith.mul"(%R2.0x380, %R1.0x400, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1075C3 = "arith.add"(%R1.0x400, %C1.0, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1076C3 = "arith.div"(%C1.0, %R2, %D265C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1077C3 = "arith.mul"(%R1.0x400, %R4, %D265C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D266C3 = "dma.tensor"(%L30.0x69800004b0, %B1060C3) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D267C3 = "dma.tensor"(%G1.0xa06000, %B1060C3) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1078C3 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D267C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D268C3 = "dma.tensor"(%G1.0xa17000, %B1077C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1079C3 = "tsbc.s_bc"(%R0.0x580, %D268C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1080C3 = "arith.sub"(%C0.0, %R2, %D268C3) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1081C3 = "arith.max"(%R1.0xb00, %C-45408.0, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1082C3 = "arith.min"(%R1.0xb00, %C45408.0, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1083C3 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1084C3 = "arith.cast"(%R1.0x780, %D268C3) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1085C3 = "arith.mul"(%R3, %C0.693359375, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1086C3 = "arith.sub"(%R1.0xb00, %R1.0x780, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1087C3 = "arith.cast"(%R3, %D268C3) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1088C3 = "arith.min"(%R1.0xb00, %C15, %D268C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1089C3 = "arith.max"(%R3, %C-15, %D268C3) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1090C3 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D268C3) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1091C3 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D268C3) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1092C3 = "arith.mul"(%R1.0xb00, %R3, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1093C3 = "arith.add"(%R3, %C1.0, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1094C3 = "arith.div"(%C1.0, %R1.0x780, %D268C3) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1095C3 = "arith.mul"(%R3, %R2, %D268C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D269C3 = "dma.tensor"(%G1.0xa18000, %B1078C3) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1096C3 = "arith.copy"(%R1.0x400, %D269C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1097C3 = "arith.copy"(%R3, %D269C3) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1098C3 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D269C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1099C3 = "tsbc.s_bc"(%R0.0x580, %D269C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1100C3 = "arith.sub"(%C0.0, %R1.0x400, %D269C3) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1101C3 = "arith.max"(%R4.0x700, %C-45408.0, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1102C3 = "arith.min"(%R4.0x700, %C45408.0, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1103C3 = "arith.mul"(%R4.0x700, %C1.4423828125, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1104C3 = "arith.cast"(%R4, %D269C3) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1105C3 = "arith.mul"(%R2, %C0.693359375, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1106C3 = "arith.sub"(%R4.0x700, %R4, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1107C3 = "arith.cast"(%R2, %D269C3) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1108C3 = "arith.min"(%R4.0x700, %C15, %D269C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1109C3 = "arith.max"(%R2, %C-15, %D269C3) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1110C3 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D269C3) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1111C3 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D269C3) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1112C3 = "arith.mul"(%R4.0x700, %R2, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1113C3 = "arith.add"(%R2, %C1.0, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1114C3 = "arith.div"(%C1.0, %R4, %D269C3) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1115C3 = "arith.mul"(%R2, %R1.0x400, %D269C3) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69809574b0, %D270C3 = "dma.tensor"(%R2, %B1115C3) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1116C3, %msg49 = "system.send_msg"(%D270C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D271C3, %msg49 = "dma.sys.sys_send"(%B1116C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D267C4, %msg49 = "@core_4"(%D256C4, %msg48) {
CHECK:          %B1058C4 = "system.wait_msg"(%D256C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D257C4 = "dma.sys.sys_wait"(%B1058C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D258C4 = "dma.tensor"(%G1.0x9bd000, %B1058C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D259C4 = "dma.tensor"(%G1.0x9be000, %B1058C4) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D260C4 = "dma.tensor"(%L30.0x69800c85f0, %B1058C4) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B1059C4 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D260C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D261C4 = "dma.tensor"(%G1.0xa07000, %B1058C4) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B1060C4 = "tsbc.s_bc"(%R0.0x580, %D261C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B1061C4 = "arith.sub"(%C0.0, %R4, %D261C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1062C4 = "arith.max"(%R2.0x380, %C-45408.0, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1063C4 = "arith.min"(%R2.0x380, %C45408.0, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1064C4 = "arith.mul"(%R2.0x380, %C1.4423828125, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1065C4 = "arith.cast"(%R2, %D261C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1066C4 = "arith.mul"(%R1.0x400, %C0.693359375, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1067C4 = "arith.sub"(%R2.0x380, %R2, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1068C4 = "arith.cast"(%R1.0x400, %D261C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1069C4 = "arith.min"(%R2.0x380, %C15, %D261C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B1070C4 = "arith.max"(%R1.0x400, %C-15, %D261C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1071C4 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D261C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1072C4 = "sfu.taylor_4x"(%R2, %R2.0x700, %D261C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1073C4 = "arith.mul"(%R2.0x380, %R1.0x400, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1074C4 = "arith.add"(%R1.0x400, %C1.0, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1075C4 = "arith.div"(%C1.0, %R2, %D261C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1076C4 = "arith.mul"(%R1.0x400, %R4, %D261C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D262C4 = "dma.tensor"(%L30.0x6980000640, %B1059C4) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D263C4 = "dma.tensor"(%G1.0xa06000, %B1059C4) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1077C4 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D263C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D264C4 = "dma.tensor"(%G1.0xa17000, %B1076C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1078C4 = "tsbc.s_bc"(%R0.0x580, %D264C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1079C4 = "arith.sub"(%C0.0, %R2, %D264C4) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1080C4 = "arith.max"(%R1.0xb00, %C-45408.0, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1081C4 = "arith.min"(%R1.0xb00, %C45408.0, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1082C4 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1083C4 = "arith.cast"(%R1.0x780, %D264C4) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1084C4 = "arith.mul"(%R3, %C0.693359375, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1085C4 = "arith.sub"(%R1.0xb00, %R1.0x780, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1086C4 = "arith.cast"(%R3, %D264C4) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1087C4 = "arith.min"(%R1.0xb00, %C15, %D264C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1088C4 = "arith.max"(%R3, %C-15, %D264C4) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1089C4 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D264C4) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1090C4 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D264C4) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1091C4 = "arith.mul"(%R1.0xb00, %R3, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1092C4 = "arith.add"(%R3, %C1.0, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1093C4 = "arith.div"(%C1.0, %R1.0x780, %D264C4) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1094C4 = "arith.mul"(%R3, %R2, %D264C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D265C4 = "dma.tensor"(%G1.0xa18000, %B1077C4) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1095C4 = "arith.copy"(%R1.0x400, %D265C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1096C4 = "arith.copy"(%R3, %D265C4) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1097C4 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D265C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1098C4 = "tsbc.s_bc"(%R0.0x580, %D265C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1099C4 = "arith.sub"(%C0.0, %R1.0x400, %D265C4) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1100C4 = "arith.max"(%R4.0x700, %C-45408.0, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1101C4 = "arith.min"(%R4.0x700, %C45408.0, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1102C4 = "arith.mul"(%R4.0x700, %C1.4423828125, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1103C4 = "arith.cast"(%R4, %D265C4) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1104C4 = "arith.mul"(%R2, %C0.693359375, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1105C4 = "arith.sub"(%R4.0x700, %R4, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1106C4 = "arith.cast"(%R2, %D265C4) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1107C4 = "arith.min"(%R4.0x700, %C15, %D265C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1108C4 = "arith.max"(%R2, %C-15, %D265C4) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1109C4 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D265C4) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1110C4 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D265C4) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1111C4 = "arith.mul"(%R4.0x700, %R2, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1112C4 = "arith.add"(%R2, %C1.0, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1113C4 = "arith.div"(%C1.0, %R4, %D265C4) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1114C4 = "arith.mul"(%R2, %R1.0x400, %D265C4) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x6980957640, %D266C4 = "dma.tensor"(%R2, %B1114C4) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1115C4, %msg49 = "system.send_msg"(%D266C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D267C4, %msg49 = "dma.sys.sys_send"(%B1115C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D267C5, %msg49 = "@core_5"(%D256C5, %msg48) {
CHECK:          %B1058C5 = "system.wait_msg"(%D256C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D257C5 = "dma.sys.sys_wait"(%B1058C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D258C5 = "dma.tensor"(%G1.0x9bd000, %B1058C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D259C5 = "dma.tensor"(%G1.0x9be000, %B1058C5) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D260C5 = "dma.tensor"(%L30.0x69800c8780, %B1058C5) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B1059C5 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D260C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D261C5 = "dma.tensor"(%G1.0xa07000, %B1058C5) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B1060C5 = "tsbc.s_bc"(%R0.0x580, %D261C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B1061C5 = "arith.sub"(%C0.0, %R4, %D261C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1062C5 = "arith.max"(%R2.0x380, %C-45408.0, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1063C5 = "arith.min"(%R2.0x380, %C45408.0, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1064C5 = "arith.mul"(%R2.0x380, %C1.4423828125, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1065C5 = "arith.cast"(%R2, %D261C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1066C5 = "arith.mul"(%R1.0x400, %C0.693359375, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1067C5 = "arith.sub"(%R2.0x380, %R2, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1068C5 = "arith.cast"(%R1.0x400, %D261C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1069C5 = "arith.min"(%R2.0x380, %C15, %D261C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B1070C5 = "arith.max"(%R1.0x400, %C-15, %D261C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B1071C5 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D261C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1072C5 = "sfu.taylor_4x"(%R2, %R2.0x700, %D261C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1073C5 = "arith.mul"(%R2.0x380, %R1.0x400, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1074C5 = "arith.add"(%R1.0x400, %C1.0, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1075C5 = "arith.div"(%C1.0, %R2, %D261C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1076C5 = "arith.mul"(%R1.0x400, %R4, %D261C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D262C5 = "dma.tensor"(%L30.0x69800007d0, %B1059C5) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D263C5 = "dma.tensor"(%G1.0xa06000, %B1059C5) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1077C5 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D263C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D264C5 = "dma.tensor"(%G1.0xa17000, %B1076C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1078C5 = "tsbc.s_bc"(%R0.0x580, %D264C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1079C5 = "arith.sub"(%C0.0, %R2, %D264C5) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1080C5 = "arith.max"(%R1.0xb00, %C-45408.0, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1081C5 = "arith.min"(%R1.0xb00, %C45408.0, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1082C5 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1083C5 = "arith.cast"(%R1.0x780, %D264C5) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1084C5 = "arith.mul"(%R3, %C0.693359375, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1085C5 = "arith.sub"(%R1.0xb00, %R1.0x780, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1086C5 = "arith.cast"(%R3, %D264C5) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1087C5 = "arith.min"(%R1.0xb00, %C15, %D264C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1088C5 = "arith.max"(%R3, %C-15, %D264C5) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1089C5 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D264C5) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1090C5 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D264C5) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1091C5 = "arith.mul"(%R1.0xb00, %R3, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1092C5 = "arith.add"(%R3, %C1.0, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1093C5 = "arith.div"(%C1.0, %R1.0x780, %D264C5) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1094C5 = "arith.mul"(%R3, %R2, %D264C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D265C5 = "dma.tensor"(%G1.0xa18000, %B1077C5) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1095C5 = "arith.copy"(%R1.0x400, %D265C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1096C5 = "arith.copy"(%R3, %D265C5) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1097C5 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D265C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1098C5 = "tsbc.s_bc"(%R0.0x580, %D265C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1099C5 = "arith.sub"(%C0.0, %R1.0x400, %D265C5) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1100C5 = "arith.max"(%R4.0x700, %C-45408.0, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1101C5 = "arith.min"(%R4.0x700, %C45408.0, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1102C5 = "arith.mul"(%R4.0x700, %C1.4423828125, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1103C5 = "arith.cast"(%R4, %D265C5) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1104C5 = "arith.mul"(%R2, %C0.693359375, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1105C5 = "arith.sub"(%R4.0x700, %R4, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1106C5 = "arith.cast"(%R2, %D265C5) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1107C5 = "arith.min"(%R4.0x700, %C15, %D265C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1108C5 = "arith.max"(%R2, %C-15, %D265C5) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1109C5 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D265C5) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1110C5 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D265C5) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1111C5 = "arith.mul"(%R4.0x700, %R2, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1112C5 = "arith.add"(%R2, %C1.0, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1113C5 = "arith.div"(%C1.0, %R4, %D265C5) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1114C5 = "arith.mul"(%R2, %R1.0x400, %D265C5) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x69809577d0, %D266C5 = "dma.tensor"(%R2, %B1114C5) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1115C5, %msg49 = "system.send_msg"(%D266C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D267C5, %msg49 = "dma.sys.sys_send"(%B1115C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D263C6, %msg49 = "@core_6"(%D252C6, %msg48) {
CHECK:          %B985C6 = "system.wait_msg"(%D252C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D253C6 = "dma.sys.sys_wait"(%B985C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D254C6 = "dma.tensor"(%G1.0x9bd000, %B985C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D255C6 = "dma.tensor"(%G1.0x9be000, %B985C6) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D256C6 = "dma.tensor"(%L30.0x69800c8910, %B985C6) : (memref<1x128x7x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x7x40xi16, strides: [576, 288, 40, 1]>, none)
CHECK:          %R4, %B986C6 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D256C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x7x40xf16, strides: [576, 288, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D257C6 = "dma.tensor"(%G1.0xa07000, %B985C6) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B987C6 = "tsbc.s_bc"(%R0.0x580, %D257C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B988C6 = "arith.sub"(%C0.0, %R4, %D257C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B989C6 = "arith.max"(%R2.0x380, %C-45408.0, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B990C6 = "arith.min"(%R2.0x380, %C45408.0, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B991C6 = "arith.mul"(%R2.0x380, %C1.4423828125, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B992C6 = "arith.cast"(%R2, %D257C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B993C6 = "arith.mul"(%R1.0x400, %C0.693359375, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B994C6 = "arith.sub"(%R2.0x380, %R2, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B995C6 = "arith.cast"(%R1.0x400, %D257C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B996C6 = "arith.min"(%R2.0x380, %C15, %D257C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B997C6 = "arith.max"(%R1.0x400, %C-15, %D257C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B998C6 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D257C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B999C6 = "sfu.taylor_4x"(%R2, %R2.0x700, %D257C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1000C6 = "arith.mul"(%R2.0x380, %R1.0x400, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B1001C6 = "arith.add"(%R1.0x400, %C1.0, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1002C6 = "arith.div"(%C1.0, %R2, %D257C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1003C6 = "arith.mul"(%R1.0x400, %R4, %D257C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D258C6 = "dma.tensor"(%L30.0x6980000960, %B986C6) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D259C6 = "dma.tensor"(%G1.0xa06000, %B986C6) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B1004C6 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D259C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D260C6 = "dma.tensor"(%G1.0xa17000, %B1003C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B1005C6 = "tsbc.s_bc"(%R0.0x580, %D260C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B1006C6 = "arith.sub"(%C0.0, %R2, %D260C6) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1007C6 = "arith.max"(%R1.0xb00, %C-45408.0, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1008C6 = "arith.min"(%R1.0xb00, %C45408.0, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1009C6 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1010C6 = "arith.cast"(%R1.0x780, %D260C6) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1011C6 = "arith.mul"(%R3, %C0.693359375, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1012C6 = "arith.sub"(%R1.0xb00, %R1.0x780, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1013C6 = "arith.cast"(%R3, %D260C6) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1014C6 = "arith.min"(%R1.0xb00, %C15, %D260C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1015C6 = "arith.max"(%R3, %C-15, %D260C6) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B1016C6 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D260C6) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B1017C6 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D260C6) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1018C6 = "arith.mul"(%R1.0xb00, %R3, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B1019C6 = "arith.add"(%R3, %C1.0, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1020C6 = "arith.div"(%C1.0, %R1.0x780, %D260C6) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B1021C6 = "arith.mul"(%R3, %R2, %D260C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D261C6 = "dma.tensor"(%G1.0xa18000, %B1004C6) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B1022C6 = "arith.copy"(%R1.0x400, %D261C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B1023C6 = "arith.copy"(%R3, %D261C6) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B1024C6 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D261C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B1025C6 = "tsbc.s_bc"(%R0.0x580, %D261C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B1026C6 = "arith.sub"(%C0.0, %R1.0x400, %D261C6) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1027C6 = "arith.max"(%R4.0x700, %C-45408.0, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1028C6 = "arith.min"(%R4.0x700, %C45408.0, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1029C6 = "arith.mul"(%R4.0x700, %C1.4423828125, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1030C6 = "arith.cast"(%R4, %D261C6) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1031C6 = "arith.mul"(%R2, %C0.693359375, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1032C6 = "arith.sub"(%R4.0x700, %R4, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1033C6 = "arith.cast"(%R2, %D261C6) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1034C6 = "arith.min"(%R4.0x700, %C15, %D261C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B1035C6 = "arith.max"(%R2, %C-15, %D261C6) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B1036C6 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D261C6) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B1037C6 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D261C6) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1038C6 = "arith.mul"(%R4.0x700, %R2, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B1039C6 = "arith.add"(%R2, %C1.0, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1040C6 = "arith.div"(%C1.0, %R4, %D261C6) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B1041C6 = "arith.mul"(%R2, %R1.0x400, %D261C6) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x6980957960, %D262C6 = "dma.tensor"(%R2, %B1041C6) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B1042C6, %msg49 = "system.send_msg"(%D262C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D263C6, %msg49 = "dma.sys.sys_send"(%B1042C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D251C7, %msg49 = "@core_7"(%D240C7, %msg48) {
CHECK:          %B912C7 = "system.wait_msg"(%D240C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D241C7 = "dma.sys.sys_wait"(%B912C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R5.0x40, %D242C7 = "dma.tensor"(%G1.0x9bd000, %B912C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R0, %D243C7 = "dma.tensor"(%G1.0x9be000, %B912C7) : (memref<1x128x1x1152xi16, strides: [147456, 1152, 1152, 1]>, none) -> (memref<1x128x1x1152xi16, strides: [2304, 1152, 1152, 1]>, none)
CHECK:          %R3, %D244C7 = "dma.tensor"(%L30.0x69800c8aa0, %B912C7) : (memref<1x128x6x40xi16, strides: [204800, 1600, 40, 1]>, none) -> (memref<1x128x6x40xi16, strides: [512, 256, 40, 1]>, none)
CHECK:          %R4, %B913C7 = "conv.normal"(%R3, %R0, %R5.0x40, %C0.0, %D244C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x6x40xf16, strides: [512, 256, 40, 1]>, memref<128x128x3x3xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1, %D245C7 = "dma.tensor"(%G1.0xa07000, %B912C7) : (memref<1x128x1x256xi16, strides: [32768, 256, 256, 1]>, none) -> (memref<1x128x1x256xi16, strides: [512, 256, 256, 1]>, none)
CHECK:          %R2.0x700, %B914C7 = "tsbc.s_bc"(%R0.0x580, %D245C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x380, %B915C7 = "arith.sub"(%C0.0, %R4, %D245C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B916C7 = "arith.max"(%R2.0x380, %C-45408.0, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B917C7 = "arith.min"(%R2.0x380, %C45408.0, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B918C7 = "arith.mul"(%R2.0x380, %C1.4423828125, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B919C7 = "arith.cast"(%R2, %D245C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B920C7 = "arith.mul"(%R1.0x400, %C0.693359375, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B921C7 = "arith.sub"(%R2.0x380, %R2, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B922C7 = "arith.cast"(%R1.0x400, %D245C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B923C7 = "arith.min"(%R2.0x380, %C15, %D245C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R2.0x380, %B924C7 = "arith.max"(%R1.0x400, %C-15, %D245C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0x400, %B925C7 = "arith.add_satu"(%R2.0x380, %C15, %C10, %D245C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B926C7 = "sfu.taylor_4x"(%R2, %R2.0x700, %D245C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B927C7 = "arith.mul"(%R2.0x380, %R1.0x400, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R2, %B928C7 = "arith.add"(%R1.0x400, %C1.0, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B929C7 = "arith.div"(%C1.0, %R2, %D245C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B930C7 = "arith.mul"(%R1.0x400, %R4, %D245C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1a00, %D246C7 = "dma.tensor"(%L30.0x6980000af0, %B913C7) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R5, %D247C7 = "dma.tensor"(%G1.0xa06000, %B913C7) : (memref<1x128x1x1xf32, strides: [128, 1, 1, 1]>, none) -> (memref<1x128x1x1xf32, strides: [2, 1, 1, 1]>, none)
CHECK:          %R2, %B931C7 = "conv.normal"(%R0.0x1a00, %R1, %R5, %C0.0, %D247C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<128x256x1x1xf16>, memref<1x128x1x1xui32, strides: [2, 1, 1, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3.0x480, %D248C7 = "dma.tensor"(%G1.0xa17000, %B930C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xe80, %B932C7 = "tsbc.s_bc"(%R0.0x580, %D248C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xb00, %B933C7 = "arith.sub"(%C0.0, %R2, %D248C7) {round_mode = 0}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B934C7 = "arith.max"(%R1.0xb00, %C-45408.0, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B935C7 = "arith.min"(%R1.0xb00, %C45408.0, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B936C7 = "arith.mul"(%R1.0xb00, %C1.4423828125, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B937C7 = "arith.cast"(%R1.0x780, %D248C7) {round_mode = 3}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B938C7 = "arith.mul"(%R3, %C0.693359375, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B939C7 = "arith.sub"(%R1.0xb00, %R1.0x780, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B940C7 = "arith.cast"(%R3, %D248C7) {round_mode = 1}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B941C7 = "arith.min"(%R1.0xb00, %C15, %D248C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R1.0xb00, %B942C7 = "arith.max"(%R3, %C-15, %D248C7) {round_mode = 0}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si8, none) -> (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, none)
CHECK:          %R3, %B943C7 = "arith.add_satu"(%R1.0xb00, %C15, %C10, %D248C7) {round_mode = 1}: (memref<1x128x5x40xsi8, strides: [512, 256, 40, 1]>, si16, ui8, none) -> (memref<1x128x5x40xsi16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0xb00, %B944C7 = "sfu.taylor_4x"(%R1.0x780, %R1.0xe80, %D248C7) : (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B945C7 = "arith.mul"(%R1.0xb00, %R3, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R1.0x780, %B946C7 = "arith.add"(%R3, %C1.0, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, f16, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B947C7 = "arith.div"(%C1.0, %R1.0x780, %D248C7) {iter = 3}: (f16, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R3, %B948C7 = "arith.mul"(%R3, %R2, %D248C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none)
CHECK:          %R0.0x1200, %D249C7 = "dma.tensor"(%G1.0xa18000, %B931C7) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R2, %B949C7 = "arith.copy"(%R1.0x400, %D249C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2.0x380, %B950C7 = "arith.copy"(%R3, %D249C7) {round_mode = 0}: (memref<1x128x5x40xf16, strides: [448, 224, 40, 1]>, none) -> (memref<1x128x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R1.0x400, %B951C7 = "conv.normal"(%R2, %R0.0x1200, %R3.0x480, %C0.0, %D249C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0xe00, %B952C7 = "tsbc.s_bc"(%R0.0x580, %D249C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R4.0x700, %B953C7 = "arith.sub"(%C0.0, %R1.0x400, %D249C7) {round_mode = 0}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B954C7 = "arith.max"(%R4.0x700, %C-45408.0, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B955C7 = "arith.min"(%R4.0x700, %C45408.0, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B956C7 = "arith.mul"(%R4.0x700, %C1.4423828125, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B957C7 = "arith.cast"(%R4, %D249C7) {round_mode = 3}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B958C7 = "arith.mul"(%R2, %C0.693359375, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B959C7 = "arith.sub"(%R4.0x700, %R4, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B960C7 = "arith.cast"(%R2, %D249C7) {round_mode = 1}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B961C7 = "arith.min"(%R4.0x700, %C15, %D249C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R4.0x700, %B962C7 = "arith.max"(%R2, %C-15, %D249C7) {round_mode = 0}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si8, none) -> (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R2, %B963C7 = "arith.add_satu"(%R4.0x700, %C15, %C10, %D249C7) {round_mode = 1}: (memref<1x256x5x40xsi8, strides: [1024, 256, 40, 1]>, si16, ui8, none) -> (memref<1x256x5x40xsi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4.0x700, %B964C7 = "sfu.taylor_4x"(%R4, %R4.0xe00, %D249C7) : (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B965C7 = "arith.mul"(%R4.0x700, %R2, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R4, %B966C7 = "arith.add"(%R2, %C1.0, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, f16, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B967C7 = "arith.div"(%C1.0, %R4, %D249C7) {iter = 3}: (f16, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R2, %B968C7 = "arith.mul"(%R2, %R1.0x400, %D249C7) {round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, none)
CHECK:          %L30.0x6980957af0, %D250C7 = "dma.tensor"(%R2, %B968C7) : (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none)
CHECK:          %B969C7, %msg49 = "system.send_msg"(%D250C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D251C7, %msg49 = "dma.sys.sys_send"(%B969C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D275C0, %msg48 = "@core_0"(%D273C0, %msg49) {
CHECK:          %B1120C0 = "system.wait_msg"(%D273C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D274C0 = "dma.sys.sys_wait"(%B1120C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1121C0, %msg48 = "system.send_msg"(%D274C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D275C0, %msg48 = "dma.sys.sys_send"(%B1121C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D273C1, %msg48 = "@core_1"(%D271C1, %msg49) {
CHECK:          %B1117C1 = "system.wait_msg"(%D271C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D272C1 = "dma.sys.sys_wait"(%B1117C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1118C1, %msg48 = "system.send_msg"(%D272C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D273C1, %msg48 = "dma.sys.sys_send"(%B1118C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D273C2, %msg48 = "@core_2"(%D271C2, %msg49) {
CHECK:          %B1117C2 = "system.wait_msg"(%D271C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D272C2 = "dma.sys.sys_wait"(%B1117C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1118C2, %msg48 = "system.send_msg"(%D272C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D273C2, %msg48 = "dma.sys.sys_send"(%B1118C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D273C3, %msg48 = "@core_3"(%D271C3, %msg49) {
CHECK:          %B1117C3 = "system.wait_msg"(%D271C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D272C3 = "dma.sys.sys_wait"(%B1117C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1118C3, %msg48 = "system.send_msg"(%D272C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D273C3, %msg48 = "dma.sys.sys_send"(%B1118C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D269C4, %msg48 = "@core_4"(%D267C4, %msg49) {
CHECK:          %B1116C4 = "system.wait_msg"(%D267C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D268C4 = "dma.sys.sys_wait"(%B1116C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1117C4, %msg48 = "system.send_msg"(%D268C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D269C4, %msg48 = "dma.sys.sys_send"(%B1117C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D269C5, %msg48 = "@core_5"(%D267C5, %msg49) {
CHECK:          %B1116C5 = "system.wait_msg"(%D267C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D268C5 = "dma.sys.sys_wait"(%B1116C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1117C5, %msg48 = "system.send_msg"(%D268C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D269C5, %msg48 = "dma.sys.sys_send"(%B1117C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D265C6, %msg48 = "@core_6"(%D263C6, %msg49) {
CHECK:          %B1043C6 = "system.wait_msg"(%D263C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D264C6 = "dma.sys.sys_wait"(%B1043C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1044C6, %msg48 = "system.send_msg"(%D264C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D265C6, %msg48 = "dma.sys.sys_send"(%B1044C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D253C7, %msg48 = "@core_7"(%D251C7, %msg49) {
CHECK:          %B970C7 = "system.wait_msg"(%D251C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D252C7 = "dma.sys.sys_wait"(%B970C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B971C7, %msg48 = "system.send_msg"(%D252C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D253C7, %msg48 = "dma.sys.sys_send"(%B971C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D287C0, %msg49 = "@core_0"(%D275C0, %msg48) {
CHECK:          %B1122C0 = "system.wait_msg"(%D275C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D276C0 = "dma.sys.sys_wait"(%B1122C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D277C0 = "dma.tensor"(%G1.0xa38000, %B1122C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D278C0 = "dma.tensor"(%L30.0x6980957000, %B1122C0) : (memref<1x256x6x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x6x40xi16, strides: [1024, 256, 40, 1]>, none)
CHECK:          %R0, %D279C0 = "dma.tensor"(%G1.0xa39000, %B1122C0) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1123C0 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D279C0) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x6x40xf16, strides: [1024, 256, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D280C0 = "dma.tensor"(%G1.0xb5a000, %B1122C0) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D281C0 = "dma.tensor"(%G1.0xb9b000, %B1122C0) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1124C0 = "tsbc.s_bc"(%R0.0x580, %D281C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1125C0 = "arith.sub"(%C0.0, %R4, %D281C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1126C0 = "arith.max"(%R1.0xa00, %C-45408.0, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1127C0 = "arith.min"(%R1.0xa00, %C45408.0, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1128C0 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1129C0 = "arith.cast"(%R1.0x800, %D281C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1130C0 = "arith.mul"(%R2.0x1800, %C0.693359375, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1131C0 = "arith.sub"(%R1.0xa00, %R1.0x800, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1132C0 = "arith.cast"(%R2.0x1800, %D281C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1133C0 = "arith.min"(%R1.0xa00, %C15, %D281C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1134C0 = "arith.max"(%R2.0x1800, %C-15, %D281C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1135C0 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D281C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1136C0 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D281C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1137C0 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1138C0 = "arith.add"(%R2.0x1800, %C1.0, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1139C0 = "arith.div"(%C1.0, %R1.0x800, %D281C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1140C0 = "arith.mul"(%R2.0x1800, %R4, %D281C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D282C0 = "dma.tensor"(%L30.0x69807d0000, %B1123C0) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D283C0 = "dma.tensor"(%G1.0xb59000, %B1123C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1141C0 = "arith.copy"(%R2.0x1800, %D283C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1142C0 = "arith.copy"(%R3, %D283C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D284C0 = "dma.tensor"(%G1.0xb9a000, %B1140C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1143C0 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D284C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1144C0 = "tsbc.s_bc"(%R0.0x580, %D284C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1145C0 = "arith.sub"(%C0.0, %R3, %D284C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1146C0 = "arith.max"(%R3.0x400, %C-45408.0, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1147C0 = "arith.min"(%R3.0x400, %C45408.0, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1148C0 = "arith.mul"(%R3.0x400, %C1.4423828125, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1149C0 = "arith.cast"(%R3.0x200, %D284C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1150C0 = "arith.mul"(%R2.0x1800, %C0.693359375, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1151C0 = "arith.sub"(%R3.0x400, %R3.0x200, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1152C0 = "arith.cast"(%R2.0x1800, %D284C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1153C0 = "arith.min"(%R3.0x400, %C15, %D284C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1154C0 = "arith.max"(%R2.0x1800, %C-15, %D284C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1155C0 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D284C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1156C0 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D284C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1157C0 = "arith.mul"(%R3.0x400, %R2.0x1800, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1158C0 = "arith.add"(%R2.0x1800, %C1.0, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1159C0 = "arith.div"(%C1.0, %R3.0x200, %D284C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1160C0 = "arith.mul"(%R2.0x1800, %R3, %D284C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1161C0 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D284C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000000, %D285C0 = "dma.tensor"(%R1.0x800, %B1142C0) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1162C0 = "tsbc.s_bc"(%R0.0x580, %D285C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1163C0 = "arith.sub"(%C0.0, %R4, %D285C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1164C0 = "arith.max"(%R5.0x280, %C-45408.0, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1165C0 = "arith.min"(%R5.0x280, %C45408.0, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1166C0 = "arith.mul"(%R5.0x280, %C1.4423828125, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1167C0 = "arith.cast"(%R5.0x80, %D285C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1168C0 = "arith.mul"(%R2.0x1800, %C0.693359375, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1169C0 = "arith.sub"(%R5.0x280, %R5.0x80, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1170C0 = "arith.cast"(%R2.0x1800, %D285C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1171C0 = "arith.min"(%R5.0x280, %C15, %D285C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1172C0 = "arith.max"(%R2.0x1800, %C-15, %D285C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1173C0 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D285C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1174C0 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D285C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1175C0 = "arith.mul"(%R5.0x280, %R2.0x1800, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1176C0 = "arith.add"(%R2.0x1800, %C1.0, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1177C0 = "arith.div"(%C1.0, %R5.0x80, %D285C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1178C0 = "arith.mul"(%R2.0x1800, %R4, %D285C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980064000, %D286C0 = "dma.tensor"(%R2.0x1800, %B1178C0) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1179C0, %msg49 = "system.send_msg"(%D286C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D287C0, %msg49 = "dma.sys.sys_send"(%B1179C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D285C1, %msg49 = "@core_1"(%D273C1, %msg48) {
CHECK:          %B1119C1 = "system.wait_msg"(%D273C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D274C1 = "dma.sys.sys_wait"(%B1119C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D275C1 = "dma.tensor"(%G1.0xa38000, %B1119C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D276C1 = "dma.tensor"(%L30.0x6980957190, %B1119C1) : (memref<1x256x7x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x7x40xi16, strides: [1152, 288, 40, 1]>, none)
CHECK:          %R0, %D277C1 = "dma.tensor"(%G1.0xa39000, %B1119C1) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1120C1 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D277C1) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x7x40xf16, strides: [1152, 288, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D278C1 = "dma.tensor"(%G1.0xb5a000, %B1119C1) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D279C1 = "dma.tensor"(%G1.0xb9b000, %B1119C1) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1121C1 = "tsbc.s_bc"(%R0.0x580, %D279C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1122C1 = "arith.sub"(%C0.0, %R4, %D279C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1123C1 = "arith.max"(%R1.0xa00, %C-45408.0, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1124C1 = "arith.min"(%R1.0xa00, %C45408.0, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1125C1 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1126C1 = "arith.cast"(%R1.0x800, %D279C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1127C1 = "arith.mul"(%R2.0x1800, %C0.693359375, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1128C1 = "arith.sub"(%R1.0xa00, %R1.0x800, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1129C1 = "arith.cast"(%R2.0x1800, %D279C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1130C1 = "arith.min"(%R1.0xa00, %C15, %D279C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1131C1 = "arith.max"(%R2.0x1800, %C-15, %D279C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1132C1 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D279C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1133C1 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D279C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1134C1 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1135C1 = "arith.add"(%R2.0x1800, %C1.0, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1136C1 = "arith.div"(%C1.0, %R1.0x800, %D279C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1137C1 = "arith.mul"(%R2.0x1800, %R4, %D279C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D280C1 = "dma.tensor"(%L30.0x69807d0078, %B1120C1) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D281C1 = "dma.tensor"(%G1.0xb59000, %B1120C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1138C1 = "arith.copy"(%R2.0x1800, %D281C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1139C1 = "arith.copy"(%R3, %D281C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D282C1 = "dma.tensor"(%G1.0xb9a000, %B1137C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1140C1 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D282C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1141C1 = "tsbc.s_bc"(%R0.0x580, %D282C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1142C1 = "arith.sub"(%C0.0, %R3, %D282C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1143C1 = "arith.max"(%R3.0x400, %C-45408.0, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1144C1 = "arith.min"(%R3.0x400, %C45408.0, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1145C1 = "arith.mul"(%R3.0x400, %C1.4423828125, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1146C1 = "arith.cast"(%R3.0x200, %D282C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1147C1 = "arith.mul"(%R2.0x1800, %C0.693359375, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1148C1 = "arith.sub"(%R3.0x400, %R3.0x200, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1149C1 = "arith.cast"(%R2.0x1800, %D282C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1150C1 = "arith.min"(%R3.0x400, %C15, %D282C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1151C1 = "arith.max"(%R2.0x1800, %C-15, %D282C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1152C1 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D282C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1153C1 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D282C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1154C1 = "arith.mul"(%R3.0x400, %R2.0x1800, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1155C1 = "arith.add"(%R2.0x1800, %C1.0, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1156C1 = "arith.div"(%C1.0, %R3.0x200, %D282C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1157C1 = "arith.mul"(%R2.0x1800, %R3, %D282C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1158C1 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D282C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000078, %D283C1 = "dma.tensor"(%R1.0x800, %B1139C1) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1159C1 = "tsbc.s_bc"(%R0.0x580, %D283C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1160C1 = "arith.sub"(%C0.0, %R4, %D283C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1161C1 = "arith.max"(%R5.0x280, %C-45408.0, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1162C1 = "arith.min"(%R5.0x280, %C45408.0, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1163C1 = "arith.mul"(%R5.0x280, %C1.4423828125, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1164C1 = "arith.cast"(%R5.0x80, %D283C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1165C1 = "arith.mul"(%R2.0x1800, %C0.693359375, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1166C1 = "arith.sub"(%R5.0x280, %R5.0x80, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1167C1 = "arith.cast"(%R2.0x1800, %D283C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1168C1 = "arith.min"(%R5.0x280, %C15, %D283C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1169C1 = "arith.max"(%R2.0x1800, %C-15, %D283C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1170C1 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D283C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1171C1 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D283C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1172C1 = "arith.mul"(%R5.0x280, %R2.0x1800, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1173C1 = "arith.add"(%R2.0x1800, %C1.0, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1174C1 = "arith.div"(%C1.0, %R5.0x80, %D283C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1175C1 = "arith.mul"(%R2.0x1800, %R4, %D283C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980064078, %D284C1 = "dma.tensor"(%R2.0x1800, %B1175C1) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1176C1, %msg49 = "system.send_msg"(%D284C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D285C1, %msg49 = "dma.sys.sys_send"(%B1176C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D285C2, %msg49 = "@core_2"(%D273C2, %msg48) {
CHECK:          %B1119C2 = "system.wait_msg"(%D273C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D274C2 = "dma.sys.sys_wait"(%B1119C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D275C2 = "dma.tensor"(%G1.0xa38000, %B1119C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D276C2 = "dma.tensor"(%L30.0x6980957370, %B1119C2) : (memref<1x256x7x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x7x40xi16, strides: [1152, 288, 40, 1]>, none)
CHECK:          %R0, %D277C2 = "dma.tensor"(%G1.0xa39000, %B1119C2) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1120C2 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D277C2) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x7x40xf16, strides: [1152, 288, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D278C2 = "dma.tensor"(%G1.0xb5a000, %B1119C2) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D279C2 = "dma.tensor"(%G1.0xb9b000, %B1119C2) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1121C2 = "tsbc.s_bc"(%R0.0x580, %D279C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1122C2 = "arith.sub"(%C0.0, %R4, %D279C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1123C2 = "arith.max"(%R1.0xa00, %C-45408.0, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1124C2 = "arith.min"(%R1.0xa00, %C45408.0, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1125C2 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1126C2 = "arith.cast"(%R1.0x800, %D279C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1127C2 = "arith.mul"(%R2.0x1800, %C0.693359375, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1128C2 = "arith.sub"(%R1.0xa00, %R1.0x800, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1129C2 = "arith.cast"(%R2.0x1800, %D279C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1130C2 = "arith.min"(%R1.0xa00, %C15, %D279C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1131C2 = "arith.max"(%R2.0x1800, %C-15, %D279C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1132C2 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D279C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1133C2 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D279C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1134C2 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1135C2 = "arith.add"(%R2.0x1800, %C1.0, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1136C2 = "arith.div"(%C1.0, %R1.0x800, %D279C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1137C2 = "arith.mul"(%R2.0x1800, %R4, %D279C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D280C2 = "dma.tensor"(%L30.0x69807d00f0, %B1120C2) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D281C2 = "dma.tensor"(%G1.0xb59000, %B1120C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1138C2 = "arith.copy"(%R2.0x1800, %D281C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1139C2 = "arith.copy"(%R3, %D281C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D282C2 = "dma.tensor"(%G1.0xb9a000, %B1137C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1140C2 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D282C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1141C2 = "tsbc.s_bc"(%R0.0x580, %D282C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1142C2 = "arith.sub"(%C0.0, %R3, %D282C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1143C2 = "arith.max"(%R3.0x400, %C-45408.0, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1144C2 = "arith.min"(%R3.0x400, %C45408.0, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1145C2 = "arith.mul"(%R3.0x400, %C1.4423828125, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1146C2 = "arith.cast"(%R3.0x200, %D282C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1147C2 = "arith.mul"(%R2.0x1800, %C0.693359375, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1148C2 = "arith.sub"(%R3.0x400, %R3.0x200, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1149C2 = "arith.cast"(%R2.0x1800, %D282C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1150C2 = "arith.min"(%R3.0x400, %C15, %D282C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1151C2 = "arith.max"(%R2.0x1800, %C-15, %D282C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1152C2 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D282C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1153C2 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D282C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1154C2 = "arith.mul"(%R3.0x400, %R2.0x1800, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1155C2 = "arith.add"(%R2.0x1800, %C1.0, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1156C2 = "arith.div"(%C1.0, %R3.0x200, %D282C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1157C2 = "arith.mul"(%R2.0x1800, %R3, %D282C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1158C2 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D282C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800000f0, %D283C2 = "dma.tensor"(%R1.0x800, %B1139C2) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1159C2 = "tsbc.s_bc"(%R0.0x580, %D283C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1160C2 = "arith.sub"(%C0.0, %R4, %D283C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1161C2 = "arith.max"(%R5.0x280, %C-45408.0, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1162C2 = "arith.min"(%R5.0x280, %C45408.0, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1163C2 = "arith.mul"(%R5.0x280, %C1.4423828125, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1164C2 = "arith.cast"(%R5.0x80, %D283C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1165C2 = "arith.mul"(%R2.0x1800, %C0.693359375, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1166C2 = "arith.sub"(%R5.0x280, %R5.0x80, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1167C2 = "arith.cast"(%R2.0x1800, %D283C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1168C2 = "arith.min"(%R5.0x280, %C15, %D283C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1169C2 = "arith.max"(%R2.0x1800, %C-15, %D283C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1170C2 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D283C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1171C2 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D283C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1172C2 = "arith.mul"(%R5.0x280, %R2.0x1800, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1173C2 = "arith.add"(%R2.0x1800, %C1.0, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1174C2 = "arith.div"(%C1.0, %R5.0x80, %D283C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1175C2 = "arith.mul"(%R2.0x1800, %R4, %D283C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800640f0, %D284C2 = "dma.tensor"(%R2.0x1800, %B1175C2) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1176C2, %msg49 = "system.send_msg"(%D284C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D285C2, %msg49 = "dma.sys.sys_send"(%B1176C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D285C3, %msg49 = "@core_3"(%D273C3, %msg48) {
CHECK:          %B1119C3 = "system.wait_msg"(%D273C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D274C3 = "dma.sys.sys_wait"(%B1119C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D275C3 = "dma.tensor"(%G1.0xa38000, %B1119C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D276C3 = "dma.tensor"(%L30.0x6980957550, %B1119C3) : (memref<1x256x7x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x7x40xi16, strides: [1152, 288, 40, 1]>, none)
CHECK:          %R0, %D277C3 = "dma.tensor"(%G1.0xa39000, %B1119C3) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1120C3 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D277C3) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x7x40xf16, strides: [1152, 288, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D278C3 = "dma.tensor"(%G1.0xb5a000, %B1119C3) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D279C3 = "dma.tensor"(%G1.0xb9b000, %B1119C3) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1121C3 = "tsbc.s_bc"(%R0.0x580, %D279C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1122C3 = "arith.sub"(%C0.0, %R4, %D279C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1123C3 = "arith.max"(%R1.0xa00, %C-45408.0, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1124C3 = "arith.min"(%R1.0xa00, %C45408.0, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1125C3 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1126C3 = "arith.cast"(%R1.0x800, %D279C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1127C3 = "arith.mul"(%R2.0x1800, %C0.693359375, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1128C3 = "arith.sub"(%R1.0xa00, %R1.0x800, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1129C3 = "arith.cast"(%R2.0x1800, %D279C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1130C3 = "arith.min"(%R1.0xa00, %C15, %D279C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1131C3 = "arith.max"(%R2.0x1800, %C-15, %D279C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1132C3 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D279C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1133C3 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D279C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1134C3 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1135C3 = "arith.add"(%R2.0x1800, %C1.0, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1136C3 = "arith.div"(%C1.0, %R1.0x800, %D279C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1137C3 = "arith.mul"(%R2.0x1800, %R4, %D279C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D280C3 = "dma.tensor"(%L30.0x69807d0168, %B1120C3) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D281C3 = "dma.tensor"(%G1.0xb59000, %B1120C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1138C3 = "arith.copy"(%R2.0x1800, %D281C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1139C3 = "arith.copy"(%R3, %D281C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D282C3 = "dma.tensor"(%G1.0xb9a000, %B1137C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1140C3 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D282C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1141C3 = "tsbc.s_bc"(%R0.0x580, %D282C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1142C3 = "arith.sub"(%C0.0, %R3, %D282C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1143C3 = "arith.max"(%R3.0x400, %C-45408.0, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1144C3 = "arith.min"(%R3.0x400, %C45408.0, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1145C3 = "arith.mul"(%R3.0x400, %C1.4423828125, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1146C3 = "arith.cast"(%R3.0x200, %D282C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1147C3 = "arith.mul"(%R2.0x1800, %C0.693359375, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1148C3 = "arith.sub"(%R3.0x400, %R3.0x200, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1149C3 = "arith.cast"(%R2.0x1800, %D282C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1150C3 = "arith.min"(%R3.0x400, %C15, %D282C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1151C3 = "arith.max"(%R2.0x1800, %C-15, %D282C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1152C3 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D282C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1153C3 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D282C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1154C3 = "arith.mul"(%R3.0x400, %R2.0x1800, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1155C3 = "arith.add"(%R2.0x1800, %C1.0, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1156C3 = "arith.div"(%C1.0, %R3.0x200, %D282C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1157C3 = "arith.mul"(%R2.0x1800, %R3, %D282C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1158C3 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D282C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000168, %D283C3 = "dma.tensor"(%R1.0x800, %B1139C3) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1159C3 = "tsbc.s_bc"(%R0.0x580, %D283C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1160C3 = "arith.sub"(%C0.0, %R4, %D283C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1161C3 = "arith.max"(%R5.0x280, %C-45408.0, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1162C3 = "arith.min"(%R5.0x280, %C45408.0, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1163C3 = "arith.mul"(%R5.0x280, %C1.4423828125, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1164C3 = "arith.cast"(%R5.0x80, %D283C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1165C3 = "arith.mul"(%R2.0x1800, %C0.693359375, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1166C3 = "arith.sub"(%R5.0x280, %R5.0x80, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1167C3 = "arith.cast"(%R2.0x1800, %D283C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1168C3 = "arith.min"(%R5.0x280, %C15, %D283C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1169C3 = "arith.max"(%R2.0x1800, %C-15, %D283C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1170C3 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D283C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1171C3 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D283C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1172C3 = "arith.mul"(%R5.0x280, %R2.0x1800, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1173C3 = "arith.add"(%R2.0x1800, %C1.0, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1174C3 = "arith.div"(%C1.0, %R5.0x80, %D283C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1175C3 = "arith.mul"(%R2.0x1800, %R4, %D283C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980064168, %D284C3 = "dma.tensor"(%R2.0x1800, %B1175C3) : (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1176C3, %msg49 = "system.send_msg"(%D284C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D285C3, %msg49 = "dma.sys.sys_send"(%B1176C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D281C4, %msg49 = "@core_4"(%D269C4, %msg48) {
CHECK:          %B1118C4 = "system.wait_msg"(%D269C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D270C4 = "dma.sys.sys_wait"(%B1118C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D271C4 = "dma.tensor"(%G1.0xa38000, %B1118C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D272C4 = "dma.tensor"(%L30.0x6980957730, %B1118C4) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D273C4 = "dma.tensor"(%G1.0xa39000, %B1118C4) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1119C4 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D273C4) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D274C4 = "dma.tensor"(%G1.0xb5a000, %B1118C4) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D275C4 = "dma.tensor"(%G1.0xb9b000, %B1118C4) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1120C4 = "tsbc.s_bc"(%R0.0x580, %D275C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1121C4 = "arith.sub"(%C0.0, %R4, %D275C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1122C4 = "arith.max"(%R1.0xa00, %C-45408.0, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1123C4 = "arith.min"(%R1.0xa00, %C45408.0, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1124C4 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1125C4 = "arith.cast"(%R1.0x800, %D275C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1126C4 = "arith.mul"(%R2.0x1800, %C0.693359375, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1127C4 = "arith.sub"(%R1.0xa00, %R1.0x800, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1128C4 = "arith.cast"(%R2.0x1800, %D275C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1129C4 = "arith.min"(%R1.0xa00, %C15, %D275C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1130C4 = "arith.max"(%R2.0x1800, %C-15, %D275C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1131C4 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D275C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1132C4 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D275C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1133C4 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1134C4 = "arith.add"(%R2.0x1800, %C1.0, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1135C4 = "arith.div"(%C1.0, %R1.0x800, %D275C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1136C4 = "arith.mul"(%R2.0x1800, %R4, %D275C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D276C4 = "dma.tensor"(%L30.0x69807d01e0, %B1119C4) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D277C4 = "dma.tensor"(%G1.0xb59000, %B1119C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1137C4 = "arith.copy"(%R2.0x1800, %D277C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1138C4 = "arith.copy"(%R3, %D277C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D278C4 = "dma.tensor"(%G1.0xb9a000, %B1136C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1139C4 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D278C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1140C4 = "tsbc.s_bc"(%R0.0x580, %D278C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1141C4 = "arith.sub"(%C0.0, %R3, %D278C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1142C4 = "arith.max"(%R3.0x400, %C-45408.0, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1143C4 = "arith.min"(%R3.0x400, %C45408.0, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1144C4 = "arith.mul"(%R3.0x400, %C1.4423828125, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1145C4 = "arith.cast"(%R3.0x200, %D278C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1146C4 = "arith.mul"(%R2.0x1800, %C0.693359375, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1147C4 = "arith.sub"(%R3.0x400, %R3.0x200, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1148C4 = "arith.cast"(%R2.0x1800, %D278C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1149C4 = "arith.min"(%R3.0x400, %C15, %D278C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1150C4 = "arith.max"(%R2.0x1800, %C-15, %D278C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1151C4 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D278C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1152C4 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D278C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1153C4 = "arith.mul"(%R3.0x400, %R2.0x1800, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1154C4 = "arith.add"(%R2.0x1800, %C1.0, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1155C4 = "arith.div"(%C1.0, %R3.0x200, %D278C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1156C4 = "arith.mul"(%R2.0x1800, %R3, %D278C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1157C4 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D278C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800001e0, %D279C4 = "dma.tensor"(%R1.0x800, %B1138C4) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1158C4 = "tsbc.s_bc"(%R0.0x580, %D279C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1159C4 = "arith.sub"(%C0.0, %R4, %D279C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1160C4 = "arith.max"(%R5.0x280, %C-45408.0, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1161C4 = "arith.min"(%R5.0x280, %C45408.0, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1162C4 = "arith.mul"(%R5.0x280, %C1.4423828125, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1163C4 = "arith.cast"(%R5.0x80, %D279C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1164C4 = "arith.mul"(%R2.0x1800, %C0.693359375, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1165C4 = "arith.sub"(%R5.0x280, %R5.0x80, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1166C4 = "arith.cast"(%R2.0x1800, %D279C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1167C4 = "arith.min"(%R5.0x280, %C15, %D279C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1168C4 = "arith.max"(%R2.0x1800, %C-15, %D279C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1169C4 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D279C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1170C4 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D279C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1171C4 = "arith.mul"(%R5.0x280, %R2.0x1800, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1172C4 = "arith.add"(%R2.0x1800, %C1.0, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1173C4 = "arith.div"(%C1.0, %R5.0x80, %D279C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1174C4 = "arith.mul"(%R2.0x1800, %R4, %D279C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800641e0, %D280C4 = "dma.tensor"(%R2.0x1800, %B1174C4) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1175C4, %msg49 = "system.send_msg"(%D280C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D281C4, %msg49 = "dma.sys.sys_send"(%B1175C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D281C5, %msg49 = "@core_5"(%D269C5, %msg48) {
CHECK:          %B1118C5 = "system.wait_msg"(%D269C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D270C5 = "dma.sys.sys_wait"(%B1118C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D271C5 = "dma.tensor"(%G1.0xa38000, %B1118C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D272C5 = "dma.tensor"(%L30.0x6980957870, %B1118C5) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D273C5 = "dma.tensor"(%G1.0xa39000, %B1118C5) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1119C5 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D273C5) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D274C5 = "dma.tensor"(%G1.0xb5a000, %B1118C5) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D275C5 = "dma.tensor"(%G1.0xb9b000, %B1118C5) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1120C5 = "tsbc.s_bc"(%R0.0x580, %D275C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1121C5 = "arith.sub"(%C0.0, %R4, %D275C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1122C5 = "arith.max"(%R1.0xa00, %C-45408.0, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1123C5 = "arith.min"(%R1.0xa00, %C45408.0, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1124C5 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1125C5 = "arith.cast"(%R1.0x800, %D275C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1126C5 = "arith.mul"(%R2.0x1800, %C0.693359375, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1127C5 = "arith.sub"(%R1.0xa00, %R1.0x800, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1128C5 = "arith.cast"(%R2.0x1800, %D275C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1129C5 = "arith.min"(%R1.0xa00, %C15, %D275C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1130C5 = "arith.max"(%R2.0x1800, %C-15, %D275C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1131C5 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D275C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1132C5 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D275C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1133C5 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1134C5 = "arith.add"(%R2.0x1800, %C1.0, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1135C5 = "arith.div"(%C1.0, %R1.0x800, %D275C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1136C5 = "arith.mul"(%R2.0x1800, %R4, %D275C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D276C5 = "dma.tensor"(%L30.0x69807d0230, %B1119C5) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D277C5 = "dma.tensor"(%G1.0xb59000, %B1119C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1137C5 = "arith.copy"(%R2.0x1800, %D277C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1138C5 = "arith.copy"(%R3, %D277C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D278C5 = "dma.tensor"(%G1.0xb9a000, %B1136C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1139C5 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D278C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1140C5 = "tsbc.s_bc"(%R0.0x580, %D278C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1141C5 = "arith.sub"(%C0.0, %R3, %D278C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1142C5 = "arith.max"(%R3.0x400, %C-45408.0, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1143C5 = "arith.min"(%R3.0x400, %C45408.0, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1144C5 = "arith.mul"(%R3.0x400, %C1.4423828125, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1145C5 = "arith.cast"(%R3.0x200, %D278C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1146C5 = "arith.mul"(%R2.0x1800, %C0.693359375, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1147C5 = "arith.sub"(%R3.0x400, %R3.0x200, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1148C5 = "arith.cast"(%R2.0x1800, %D278C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1149C5 = "arith.min"(%R3.0x400, %C15, %D278C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1150C5 = "arith.max"(%R2.0x1800, %C-15, %D278C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1151C5 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D278C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1152C5 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D278C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1153C5 = "arith.mul"(%R3.0x400, %R2.0x1800, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1154C5 = "arith.add"(%R2.0x1800, %C1.0, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1155C5 = "arith.div"(%C1.0, %R3.0x200, %D278C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1156C5 = "arith.mul"(%R2.0x1800, %R3, %D278C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1157C5 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D278C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000230, %D279C5 = "dma.tensor"(%R1.0x800, %B1138C5) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1158C5 = "tsbc.s_bc"(%R0.0x580, %D279C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1159C5 = "arith.sub"(%C0.0, %R4, %D279C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1160C5 = "arith.max"(%R5.0x280, %C-45408.0, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1161C5 = "arith.min"(%R5.0x280, %C45408.0, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1162C5 = "arith.mul"(%R5.0x280, %C1.4423828125, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1163C5 = "arith.cast"(%R5.0x80, %D279C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1164C5 = "arith.mul"(%R2.0x1800, %C0.693359375, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1165C5 = "arith.sub"(%R5.0x280, %R5.0x80, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1166C5 = "arith.cast"(%R2.0x1800, %D279C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1167C5 = "arith.min"(%R5.0x280, %C15, %D279C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1168C5 = "arith.max"(%R2.0x1800, %C-15, %D279C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1169C5 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D279C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1170C5 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D279C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1171C5 = "arith.mul"(%R5.0x280, %R2.0x1800, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1172C5 = "arith.add"(%R2.0x1800, %C1.0, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1173C5 = "arith.div"(%C1.0, %R5.0x80, %D279C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1174C5 = "arith.mul"(%R2.0x1800, %R4, %D279C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980064230, %D280C5 = "dma.tensor"(%R2.0x1800, %B1174C5) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1175C5, %msg49 = "system.send_msg"(%D280C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D281C5, %msg49 = "dma.sys.sys_send"(%B1175C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D277C6, %msg49 = "@core_6"(%D265C6, %msg48) {
CHECK:          %B1045C6 = "system.wait_msg"(%D265C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D266C6 = "dma.sys.sys_wait"(%B1045C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D267C6 = "dma.tensor"(%G1.0xa38000, %B1045C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D268C6 = "dma.tensor"(%L30.0x69809579b0, %B1045C6) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D269C6 = "dma.tensor"(%G1.0xa39000, %B1045C6) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B1046C6 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D269C6) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D270C6 = "dma.tensor"(%G1.0xb5a000, %B1045C6) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D271C6 = "dma.tensor"(%G1.0xb9b000, %B1045C6) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B1047C6 = "tsbc.s_bc"(%R0.0x580, %D271C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B1048C6 = "arith.sub"(%C0.0, %R4, %D271C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1049C6 = "arith.max"(%R1.0xa00, %C-45408.0, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1050C6 = "arith.min"(%R1.0xa00, %C45408.0, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1051C6 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1052C6 = "arith.cast"(%R1.0x800, %D271C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1053C6 = "arith.mul"(%R2.0x1800, %C0.693359375, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1054C6 = "arith.sub"(%R1.0xa00, %R1.0x800, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1055C6 = "arith.cast"(%R2.0x1800, %D271C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1056C6 = "arith.min"(%R1.0xa00, %C15, %D271C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1057C6 = "arith.max"(%R2.0x1800, %C-15, %D271C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1058C6 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D271C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1059C6 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D271C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1060C6 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1061C6 = "arith.add"(%R2.0x1800, %C1.0, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1062C6 = "arith.div"(%C1.0, %R1.0x800, %D271C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1063C6 = "arith.mul"(%R2.0x1800, %R4, %D271C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D272C6 = "dma.tensor"(%L30.0x69807d0280, %B1046C6) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D273C6 = "dma.tensor"(%G1.0xb59000, %B1046C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B1064C6 = "arith.copy"(%R2.0x1800, %D273C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B1065C6 = "arith.copy"(%R3, %D273C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D274C6 = "dma.tensor"(%G1.0xb9a000, %B1063C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B1066C6 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D274C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B1067C6 = "tsbc.s_bc"(%R0.0x580, %D274C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B1068C6 = "arith.sub"(%C0.0, %R3, %D274C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1069C6 = "arith.max"(%R3.0x400, %C-45408.0, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1070C6 = "arith.min"(%R3.0x400, %C45408.0, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1071C6 = "arith.mul"(%R3.0x400, %C1.4423828125, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1072C6 = "arith.cast"(%R3.0x200, %D274C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1073C6 = "arith.mul"(%R2.0x1800, %C0.693359375, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1074C6 = "arith.sub"(%R3.0x400, %R3.0x200, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1075C6 = "arith.cast"(%R2.0x1800, %D274C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1076C6 = "arith.min"(%R3.0x400, %C15, %D274C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1077C6 = "arith.max"(%R2.0x1800, %C-15, %D274C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1078C6 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D274C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1079C6 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D274C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1080C6 = "arith.mul"(%R3.0x400, %R2.0x1800, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1081C6 = "arith.add"(%R2.0x1800, %C1.0, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1082C6 = "arith.div"(%C1.0, %R3.0x200, %D274C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1083C6 = "arith.mul"(%R2.0x1800, %R3, %D274C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1084C6 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D274C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980000280, %D275C6 = "dma.tensor"(%R1.0x800, %B1065C6) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1085C6 = "tsbc.s_bc"(%R0.0x580, %D275C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1086C6 = "arith.sub"(%C0.0, %R4, %D275C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1087C6 = "arith.max"(%R5.0x280, %C-45408.0, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1088C6 = "arith.min"(%R5.0x280, %C45408.0, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1089C6 = "arith.mul"(%R5.0x280, %C1.4423828125, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1090C6 = "arith.cast"(%R5.0x80, %D275C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1091C6 = "arith.mul"(%R2.0x1800, %C0.693359375, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1092C6 = "arith.sub"(%R5.0x280, %R5.0x80, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1093C6 = "arith.cast"(%R2.0x1800, %D275C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1094C6 = "arith.min"(%R5.0x280, %C15, %D275C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1095C6 = "arith.max"(%R2.0x1800, %C-15, %D275C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1096C6 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D275C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1097C6 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D275C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1098C6 = "arith.mul"(%R5.0x280, %R2.0x1800, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1099C6 = "arith.add"(%R2.0x1800, %C1.0, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1100C6 = "arith.div"(%C1.0, %R5.0x80, %D275C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1101C6 = "arith.mul"(%R2.0x1800, %R4, %D275C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x6980064280, %D276C6 = "dma.tensor"(%R2.0x1800, %B1101C6) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1102C6, %msg49 = "system.send_msg"(%D276C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D277C6, %msg49 = "dma.sys.sys_send"(%B1102C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D265C7, %msg49 = "@core_7"(%D253C7, %msg48) {
CHECK:          %B972C7 = "system.wait_msg"(%D253C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D254C7 = "dma.sys.sys_wait"(%B972C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R6, %D255C7 = "dma.tensor"(%G1.0xa38000, %B972C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %D256C7 = "dma.tensor"(%L30.0x6980957af0, %B972C7) : (memref<1x256x5x40xi16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x5x40xi16, strides: [896, 224, 40, 1]>, none)
CHECK:          %R0, %D257C7 = "dma.tensor"(%G1.0xa39000, %B972C7) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R4, %B973C7 = "conv.normal"(%R3, %R0, %R6, %C0.0, %D257C7) {kernel = [3, 3], stride = [2, 2], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x40xf16, strides: [896, 224, 40, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D258C7 = "dma.tensor"(%G1.0xb5a000, %B972C7) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R2.0x1000, %D259C7 = "dma.tensor"(%G1.0xb9b000, %B972C7) : (memref<1x256x1x256xi16, strides: [65536, 256, 256, 1]>, none) -> (memref<1x256x1x256xi16, strides: [1024, 256, 256, 1]>, none)
CHECK:          %R1.0xc00, %B974C7 = "tsbc.s_bc"(%R0.0x580, %D259C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xa00, %B975C7 = "arith.sub"(%C0.0, %R4, %D259C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B976C7 = "arith.max"(%R1.0xa00, %C-45408.0, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B977C7 = "arith.min"(%R1.0xa00, %C45408.0, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B978C7 = "arith.mul"(%R1.0xa00, %C1.4423828125, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B979C7 = "arith.cast"(%R1.0x800, %D259C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B980C7 = "arith.mul"(%R2.0x1800, %C0.693359375, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B981C7 = "arith.sub"(%R1.0xa00, %R1.0x800, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B982C7 = "arith.cast"(%R2.0x1800, %D259C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B983C7 = "arith.min"(%R1.0xa00, %C15, %D259C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B984C7 = "arith.max"(%R2.0x1800, %C-15, %D259C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B985C7 = "arith.add_satu"(%R1.0xa00, %C15, %C10, %D259C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B986C7 = "sfu.taylor_4x"(%R1.0x800, %R1.0xc00, %D259C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B987C7 = "arith.mul"(%R1.0xa00, %R2.0x1800, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B988C7 = "arith.add"(%R2.0x1800, %C1.0, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B989C7 = "arith.div"(%C1.0, %R1.0x800, %D259C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B990C7 = "arith.mul"(%R2.0x1800, %R4, %D259C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %D260C7 = "dma.tensor"(%L30.0x69807d02d0, %B973C7) : (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5, %D261C7 = "dma.tensor"(%G1.0xb59000, %B973C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0x800, %B991C7 = "arith.copy"(%R2.0x1800, %D261C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xa00, %B992C7 = "arith.copy"(%R3, %D261C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R5.0x40, %D262C7 = "dma.tensor"(%G1.0xb9a000, %B990C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R3, %B993C7 = "conv.normal"(%R1.0x800, %R2, %R5, %C0.0, %D262C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x600, %B994C7 = "tsbc.s_bc"(%R0.0x580, %D262C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x400, %B995C7 = "arith.sub"(%C0.0, %R3, %D262C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B996C7 = "arith.max"(%R3.0x400, %C-45408.0, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B997C7 = "arith.min"(%R3.0x400, %C45408.0, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B998C7 = "arith.mul"(%R3.0x400, %C1.4423828125, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B999C7 = "arith.cast"(%R3.0x200, %D262C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1000C7 = "arith.mul"(%R2.0x1800, %C0.693359375, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1001C7 = "arith.sub"(%R3.0x400, %R3.0x200, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1002C7 = "arith.cast"(%R2.0x1800, %D262C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1003C7 = "arith.min"(%R3.0x400, %C15, %D262C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1004C7 = "arith.max"(%R2.0x1800, %C-15, %D262C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1005C7 = "arith.add_satu"(%R3.0x400, %C15, %C10, %D262C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x400, %B1006C7 = "sfu.taylor_4x"(%R3.0x200, %R3.0x600, %D262C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1007C7 = "arith.mul"(%R3.0x400, %R2.0x1800, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1008C7 = "arith.add"(%R2.0x1800, %C1.0, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1009C7 = "arith.div"(%C1.0, %R3.0x200, %D262C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1010C7 = "arith.mul"(%R2.0x1800, %R3, %D262C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1011C7 = "conv.normal"(%R2.0x1800, %R2.0x1000, %R5.0x40, %C0.0, %D262C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800002d0, %D263C7 = "dma.tensor"(%R1.0x800, %B992C7) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %R5.0x480, %B1012C7 = "tsbc.s_bc"(%R0.0x580, %D263C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R5.0x280, %B1013C7 = "arith.sub"(%C0.0, %R4, %D263C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1014C7 = "arith.max"(%R5.0x280, %C-45408.0, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1015C7 = "arith.min"(%R5.0x280, %C45408.0, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1016C7 = "arith.mul"(%R5.0x280, %C1.4423828125, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1017C7 = "arith.cast"(%R5.0x80, %D263C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1018C7 = "arith.mul"(%R2.0x1800, %C0.693359375, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1019C7 = "arith.sub"(%R5.0x280, %R5.0x80, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1020C7 = "arith.cast"(%R2.0x1800, %D263C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1021C7 = "arith.min"(%R5.0x280, %C15, %D263C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1022C7 = "arith.max"(%R2.0x1800, %C-15, %D263C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1023C7 = "arith.add_satu"(%R5.0x280, %C15, %C10, %D263C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x280, %B1024C7 = "sfu.taylor_4x"(%R5.0x80, %R5.0x480, %D263C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1025C7 = "arith.mul"(%R5.0x280, %R2.0x1800, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x80, %B1026C7 = "arith.add"(%R2.0x1800, %C1.0, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1027C7 = "arith.div"(%C1.0, %R5.0x80, %D263C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x1800, %B1028C7 = "arith.mul"(%R2.0x1800, %R4, %D263C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %L30.0x69800642d0, %D264C7 = "dma.tensor"(%R2.0x1800, %B1028C7) : (memref<1x256x2x20xi16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xi16, strides: [102400, 400, 20, 1]>, none)
CHECK:          %B1029C7, %msg49 = "system.send_msg"(%D264C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D265C7, %msg49 = "dma.sys.sys_send"(%B1029C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D289C0, %msg48 = "@core_0"(%D287C0, %msg49) {
CHECK:          %B1180C0 = "system.wait_msg"(%D287C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D288C0 = "dma.sys.sys_wait"(%B1180C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1181C0, %msg48 = "system.send_msg"(%D288C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D289C0, %msg48 = "dma.sys.sys_send"(%B1181C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D287C1, %msg48 = "@core_1"(%D285C1, %msg49) {
CHECK:          %B1177C1 = "system.wait_msg"(%D285C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D286C1 = "dma.sys.sys_wait"(%B1177C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1178C1, %msg48 = "system.send_msg"(%D286C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D287C1, %msg48 = "dma.sys.sys_send"(%B1178C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D287C2, %msg48 = "@core_2"(%D285C2, %msg49) {
CHECK:          %B1177C2 = "system.wait_msg"(%D285C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D286C2 = "dma.sys.sys_wait"(%B1177C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1178C2, %msg48 = "system.send_msg"(%D286C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D287C2, %msg48 = "dma.sys.sys_send"(%B1178C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D287C3, %msg48 = "@core_3"(%D285C3, %msg49) {
CHECK:          %B1177C3 = "system.wait_msg"(%D285C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D286C3 = "dma.sys.sys_wait"(%B1177C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1178C3, %msg48 = "system.send_msg"(%D286C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D287C3, %msg48 = "dma.sys.sys_send"(%B1178C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D283C4, %msg48 = "@core_4"(%D281C4, %msg49) {
CHECK:          %B1176C4 = "system.wait_msg"(%D281C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D282C4 = "dma.sys.sys_wait"(%B1176C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1177C4, %msg48 = "system.send_msg"(%D282C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D283C4, %msg48 = "dma.sys.sys_send"(%B1177C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D283C5, %msg48 = "@core_5"(%D281C5, %msg49) {
CHECK:          %B1176C5 = "system.wait_msg"(%D281C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D282C5 = "dma.sys.sys_wait"(%B1176C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1177C5, %msg48 = "system.send_msg"(%D282C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D283C5, %msg48 = "dma.sys.sys_send"(%B1177C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D279C6, %msg48 = "@core_6"(%D277C6, %msg49) {
CHECK:          %B1103C6 = "system.wait_msg"(%D277C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D278C6 = "dma.sys.sys_wait"(%B1103C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1104C6, %msg48 = "system.send_msg"(%D278C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D279C6, %msg48 = "dma.sys.sys_send"(%B1104C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D267C7, %msg48 = "@core_7"(%D265C7, %msg49) {
CHECK:          %B1030C7 = "system.wait_msg"(%D265C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D266C7 = "dma.sys.sys_wait"(%B1030C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1031C7, %msg48 = "system.send_msg"(%D266C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D267C7, %msg48 = "dma.sys.sys_send"(%B1031C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C0, %msg49 = "@core_0"(%D289C0, %msg48) {
CHECK:          %B1182C0 = "system.wait_msg"(%D289C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D290C0 = "dma.sys.sys_wait"(%B1182C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D291C0 = "dma.tensor"(%G1.0xbbc000, %B1182C0) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D292C0 = "dma.tensor"(%L30.0x6980064000, %B1182C0) : (memref<1x256x4x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x4x20xi16, strides: [384, 96, 20, 1]>, none)
CHECK:          %R6.0x40, %D293C0 = "dma.tensor"(%G1.0xbbb000, %B1182C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1183C0 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D293C0) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [1, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x4x20xf16, strides: [384, 96, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D294C0 = "dma.tensor"(%G1.0xcdd000, %B1182C0) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D295C0 = "dma.tensor"(%L30.0x6980000000, %B1182C0) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1184C0 = "tsbc.s_bc"(%R0.0x580, %D295C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1185C0 = "arith.sub"(%C0.0, %R4, %D295C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1186C0 = "arith.max"(%R2.0x3200, %C-45408.0, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1187C0 = "arith.min"(%R2.0x3200, %C45408.0, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1188C0 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1189C0 = "arith.cast"(%R2.0x3000, %D295C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1190C0 = "arith.mul"(%R1.0x800, %C0.693359375, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1191C0 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1192C0 = "arith.cast"(%R1.0x800, %D295C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1193C0 = "arith.min"(%R2.0x3200, %C15, %D295C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1194C0 = "arith.max"(%R1.0x800, %C-15, %D295C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1195C0 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D295C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1196C0 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D295C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1197C0 = "arith.mul"(%R2.0x3200, %R1.0x800, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1198C0 = "arith.add"(%R1.0x800, %C1.0, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1199C0 = "arith.div"(%C1.0, %R2.0x3000, %D295C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1200C0 = "arith.mul"(%R1.0x800, %R4, %D295C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D296C0 = "dma.tensor"(%G1.0xcdc000, %B1183C0) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1201C0 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D296C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D297C0 = "dma.tensor"(%G1.0xd1d000, %B1200C0) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1202C0 = "tsbc.s_bc"(%R0.0x580, %D297C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1203C0 = "arith.sub"(%C0.0, %R1.0xa00, %D297C0) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1204C0 = "arith.max"(%R3.0x200, %C-45408.0, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1205C0 = "arith.min"(%R3.0x200, %C45408.0, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1206C0 = "arith.mul"(%R3.0x200, %C1.4423828125, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1207C0 = "arith.cast"(%R3, %D297C0) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1208C0 = "arith.mul"(%R4, %C0.693359375, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1209C0 = "arith.sub"(%R3.0x200, %R3, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1210C0 = "arith.cast"(%R4, %D297C0) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1211C0 = "arith.min"(%R3.0x200, %C15, %D297C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1212C0 = "arith.max"(%R4, %C-15, %D297C0) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1213C0 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D297C0) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1214C0 = "sfu.taylor_4x"(%R3, %R3.0x400, %D297C0) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1215C0 = "arith.mul"(%R3.0x200, %R4, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1216C0 = "arith.add"(%R4, %C1.0, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1217C0 = "arith.div"(%C1.0, %R3, %D297C0) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1218C0 = "arith.mul"(%R4, %R1.0xa00, %D297C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D298C0 = "dma.tensor"(%G1.0xd1e000, %B1201C0) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1219C0 = "arith.copy"(%R1.0x800, %D298C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1220C0 = "arith.copy"(%R4, %D298C0) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1221C0 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D298C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1222C0 = "tsbc.s_bc"(%R0.0x580, %D298C0) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1223C0 = "arith.sub"(%C0.0, %R4, %D298C0) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1224C0 = "arith.max"(%R1.0xc00, %C-45408.0, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1225C0 = "arith.min"(%R1.0xc00, %C45408.0, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1226C0 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1227C0 = "arith.cast"(%R1.0x800, %D298C0) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1228C0 = "arith.mul"(%R2.0x3000, %C0.693359375, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1229C0 = "arith.sub"(%R1.0xc00, %R1.0x800, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1230C0 = "arith.cast"(%R2.0x3000, %D298C0) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1231C0 = "arith.min"(%R1.0xc00, %C15, %D298C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1232C0 = "arith.max"(%R2.0x3000, %C-15, %D298C0) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1233C0 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D298C0) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1234C0 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D298C0) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1235C0 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1236C0 = "arith.add"(%R2.0x3000, %C1.0, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1237C0 = "arith.div"(%C1.0, %R1.0x800, %D298C0) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1238C0 = "arith.mul"(%R2.0x3000, %R4, %D298C0) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f000, %D299C0 = "dma.tensor"(%R2.0x3000, %B1238C0) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1239C0, %msg49 = "system.send_msg"(%D299C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C0, %msg49 = "dma.sys.sys_send"(%B1239C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C1, %msg49 = "@core_1"(%D287C1, %msg48) {
CHECK:          %B1179C1 = "system.wait_msg"(%D287C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D288C1 = "dma.sys.sys_wait"(%B1179C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D289C1 = "dma.tensor"(%G1.0xbbc000, %B1179C1) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D290C1 = "dma.tensor"(%L30.0x6980064050, %B1179C1) : (memref<1x256x5x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x5x20xi16, strides: [512, 128, 20, 1]>, none)
CHECK:          %R6.0x40, %D291C1 = "dma.tensor"(%G1.0xbbb000, %B1179C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1180C1 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D291C1) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x20xf16, strides: [512, 128, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D292C1 = "dma.tensor"(%G1.0xcdd000, %B1179C1) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D293C1 = "dma.tensor"(%L30.0x6980000078, %B1179C1) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1181C1 = "tsbc.s_bc"(%R0.0x580, %D293C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1182C1 = "arith.sub"(%C0.0, %R4, %D293C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1183C1 = "arith.max"(%R2.0x3200, %C-45408.0, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1184C1 = "arith.min"(%R2.0x3200, %C45408.0, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1185C1 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1186C1 = "arith.cast"(%R2.0x3000, %D293C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1187C1 = "arith.mul"(%R1.0x800, %C0.693359375, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1188C1 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1189C1 = "arith.cast"(%R1.0x800, %D293C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1190C1 = "arith.min"(%R2.0x3200, %C15, %D293C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1191C1 = "arith.max"(%R1.0x800, %C-15, %D293C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1192C1 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D293C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1193C1 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D293C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1194C1 = "arith.mul"(%R2.0x3200, %R1.0x800, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1195C1 = "arith.add"(%R1.0x800, %C1.0, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1196C1 = "arith.div"(%C1.0, %R2.0x3000, %D293C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1197C1 = "arith.mul"(%R1.0x800, %R4, %D293C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D294C1 = "dma.tensor"(%G1.0xcdc000, %B1180C1) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1198C1 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D294C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D295C1 = "dma.tensor"(%G1.0xd1d000, %B1197C1) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1199C1 = "tsbc.s_bc"(%R0.0x580, %D295C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1200C1 = "arith.sub"(%C0.0, %R1.0xa00, %D295C1) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1201C1 = "arith.max"(%R3.0x200, %C-45408.0, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1202C1 = "arith.min"(%R3.0x200, %C45408.0, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1203C1 = "arith.mul"(%R3.0x200, %C1.4423828125, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1204C1 = "arith.cast"(%R3, %D295C1) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1205C1 = "arith.mul"(%R4, %C0.693359375, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1206C1 = "arith.sub"(%R3.0x200, %R3, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1207C1 = "arith.cast"(%R4, %D295C1) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1208C1 = "arith.min"(%R3.0x200, %C15, %D295C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1209C1 = "arith.max"(%R4, %C-15, %D295C1) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1210C1 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D295C1) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1211C1 = "sfu.taylor_4x"(%R3, %R3.0x400, %D295C1) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1212C1 = "arith.mul"(%R3.0x200, %R4, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1213C1 = "arith.add"(%R4, %C1.0, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1214C1 = "arith.div"(%C1.0, %R3, %D295C1) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1215C1 = "arith.mul"(%R4, %R1.0xa00, %D295C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D296C1 = "dma.tensor"(%G1.0xd1e000, %B1198C1) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1216C1 = "arith.copy"(%R1.0x800, %D296C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1217C1 = "arith.copy"(%R4, %D296C1) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1218C1 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D296C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1219C1 = "tsbc.s_bc"(%R0.0x580, %D296C1) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1220C1 = "arith.sub"(%C0.0, %R4, %D296C1) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1221C1 = "arith.max"(%R1.0xc00, %C-45408.0, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1222C1 = "arith.min"(%R1.0xc00, %C45408.0, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1223C1 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1224C1 = "arith.cast"(%R1.0x800, %D296C1) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1225C1 = "arith.mul"(%R2.0x3000, %C0.693359375, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1226C1 = "arith.sub"(%R1.0xc00, %R1.0x800, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1227C1 = "arith.cast"(%R2.0x3000, %D296C1) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1228C1 = "arith.min"(%R1.0xc00, %C15, %D296C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1229C1 = "arith.max"(%R2.0x3000, %C-15, %D296C1) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1230C1 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D296C1) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1231C1 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D296C1) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1232C1 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1233C1 = "arith.add"(%R2.0x3000, %C1.0, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1234C1 = "arith.div"(%C1.0, %R1.0x800, %D296C1) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1235C1 = "arith.mul"(%R2.0x3000, %R4, %D296C1) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f078, %D297C1 = "dma.tensor"(%R2.0x3000, %B1235C1) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1236C1, %msg49 = "system.send_msg"(%D297C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C1, %msg49 = "dma.sys.sys_send"(%B1236C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C2, %msg49 = "@core_2"(%D287C2, %msg48) {
CHECK:          %B1179C2 = "system.wait_msg"(%D287C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D288C2 = "dma.sys.sys_wait"(%B1179C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D289C2 = "dma.tensor"(%G1.0xbbc000, %B1179C2) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D290C2 = "dma.tensor"(%L30.0x69800640c8, %B1179C2) : (memref<1x256x5x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x5x20xi16, strides: [512, 128, 20, 1]>, none)
CHECK:          %R6.0x40, %D291C2 = "dma.tensor"(%G1.0xbbb000, %B1179C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1180C2 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D291C2) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x20xf16, strides: [512, 128, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D292C2 = "dma.tensor"(%G1.0xcdd000, %B1179C2) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D293C2 = "dma.tensor"(%L30.0x69800000f0, %B1179C2) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1181C2 = "tsbc.s_bc"(%R0.0x580, %D293C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1182C2 = "arith.sub"(%C0.0, %R4, %D293C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1183C2 = "arith.max"(%R2.0x3200, %C-45408.0, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1184C2 = "arith.min"(%R2.0x3200, %C45408.0, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1185C2 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1186C2 = "arith.cast"(%R2.0x3000, %D293C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1187C2 = "arith.mul"(%R1.0x800, %C0.693359375, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1188C2 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1189C2 = "arith.cast"(%R1.0x800, %D293C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1190C2 = "arith.min"(%R2.0x3200, %C15, %D293C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1191C2 = "arith.max"(%R1.0x800, %C-15, %D293C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1192C2 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D293C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1193C2 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D293C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1194C2 = "arith.mul"(%R2.0x3200, %R1.0x800, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1195C2 = "arith.add"(%R1.0x800, %C1.0, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1196C2 = "arith.div"(%C1.0, %R2.0x3000, %D293C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1197C2 = "arith.mul"(%R1.0x800, %R4, %D293C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D294C2 = "dma.tensor"(%G1.0xcdc000, %B1180C2) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1198C2 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D294C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D295C2 = "dma.tensor"(%G1.0xd1d000, %B1197C2) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1199C2 = "tsbc.s_bc"(%R0.0x580, %D295C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1200C2 = "arith.sub"(%C0.0, %R1.0xa00, %D295C2) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1201C2 = "arith.max"(%R3.0x200, %C-45408.0, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1202C2 = "arith.min"(%R3.0x200, %C45408.0, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1203C2 = "arith.mul"(%R3.0x200, %C1.4423828125, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1204C2 = "arith.cast"(%R3, %D295C2) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1205C2 = "arith.mul"(%R4, %C0.693359375, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1206C2 = "arith.sub"(%R3.0x200, %R3, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1207C2 = "arith.cast"(%R4, %D295C2) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1208C2 = "arith.min"(%R3.0x200, %C15, %D295C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1209C2 = "arith.max"(%R4, %C-15, %D295C2) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1210C2 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D295C2) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1211C2 = "sfu.taylor_4x"(%R3, %R3.0x400, %D295C2) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1212C2 = "arith.mul"(%R3.0x200, %R4, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1213C2 = "arith.add"(%R4, %C1.0, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1214C2 = "arith.div"(%C1.0, %R3, %D295C2) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1215C2 = "arith.mul"(%R4, %R1.0xa00, %D295C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D296C2 = "dma.tensor"(%G1.0xd1e000, %B1198C2) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1216C2 = "arith.copy"(%R1.0x800, %D296C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1217C2 = "arith.copy"(%R4, %D296C2) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1218C2 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D296C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1219C2 = "tsbc.s_bc"(%R0.0x580, %D296C2) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1220C2 = "arith.sub"(%C0.0, %R4, %D296C2) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1221C2 = "arith.max"(%R1.0xc00, %C-45408.0, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1222C2 = "arith.min"(%R1.0xc00, %C45408.0, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1223C2 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1224C2 = "arith.cast"(%R1.0x800, %D296C2) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1225C2 = "arith.mul"(%R2.0x3000, %C0.693359375, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1226C2 = "arith.sub"(%R1.0xc00, %R1.0x800, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1227C2 = "arith.cast"(%R2.0x3000, %D296C2) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1228C2 = "arith.min"(%R1.0xc00, %C15, %D296C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1229C2 = "arith.max"(%R2.0x3000, %C-15, %D296C2) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1230C2 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D296C2) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1231C2 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D296C2) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1232C2 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1233C2 = "arith.add"(%R2.0x3000, %C1.0, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1234C2 = "arith.div"(%C1.0, %R1.0x800, %D296C2) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1235C2 = "arith.mul"(%R2.0x3000, %R4, %D296C2) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f0f0, %D297C2 = "dma.tensor"(%R2.0x3000, %B1235C2) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1236C2, %msg49 = "system.send_msg"(%D297C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C2, %msg49 = "dma.sys.sys_send"(%B1236C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C3, %msg49 = "@core_3"(%D287C3, %msg48) {
CHECK:          %B1179C3 = "system.wait_msg"(%D287C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D288C3 = "dma.sys.sys_wait"(%B1179C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D289C3 = "dma.tensor"(%G1.0xbbc000, %B1179C3) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D290C3 = "dma.tensor"(%L30.0x6980064140, %B1179C3) : (memref<1x256x5x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x5x20xi16, strides: [512, 128, 20, 1]>, none)
CHECK:          %R6.0x40, %D291C3 = "dma.tensor"(%G1.0xbbb000, %B1179C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1180C3 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D291C3) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x5x20xf16, strides: [512, 128, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D292C3 = "dma.tensor"(%G1.0xcdd000, %B1179C3) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D293C3 = "dma.tensor"(%L30.0x6980000168, %B1179C3) : (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1181C3 = "tsbc.s_bc"(%R0.0x580, %D293C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1182C3 = "arith.sub"(%C0.0, %R4, %D293C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1183C3 = "arith.max"(%R2.0x3200, %C-45408.0, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1184C3 = "arith.min"(%R2.0x3200, %C45408.0, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1185C3 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1186C3 = "arith.cast"(%R2.0x3000, %D293C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1187C3 = "arith.mul"(%R1.0x800, %C0.693359375, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1188C3 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1189C3 = "arith.cast"(%R1.0x800, %D293C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1190C3 = "arith.min"(%R2.0x3200, %C15, %D293C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1191C3 = "arith.max"(%R1.0x800, %C-15, %D293C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1192C3 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D293C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1193C3 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D293C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1194C3 = "arith.mul"(%R2.0x3200, %R1.0x800, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1195C3 = "arith.add"(%R1.0x800, %C1.0, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1196C3 = "arith.div"(%C1.0, %R2.0x3000, %D293C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1197C3 = "arith.mul"(%R1.0x800, %R4, %D293C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D294C3 = "dma.tensor"(%G1.0xcdc000, %B1180C3) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1198C3 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D294C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D295C3 = "dma.tensor"(%G1.0xd1d000, %B1197C3) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1199C3 = "tsbc.s_bc"(%R0.0x580, %D295C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1200C3 = "arith.sub"(%C0.0, %R1.0xa00, %D295C3) {round_mode = 0}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1201C3 = "arith.max"(%R3.0x200, %C-45408.0, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1202C3 = "arith.min"(%R3.0x200, %C45408.0, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1203C3 = "arith.mul"(%R3.0x200, %C1.4423828125, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1204C3 = "arith.cast"(%R3, %D295C3) {round_mode = 3}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1205C3 = "arith.mul"(%R4, %C0.693359375, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1206C3 = "arith.sub"(%R3.0x200, %R3, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1207C3 = "arith.cast"(%R4, %D295C3) {round_mode = 1}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1208C3 = "arith.min"(%R3.0x200, %C15, %D295C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1209C3 = "arith.max"(%R4, %C-15, %D295C3) {round_mode = 0}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1210C3 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D295C3) {round_mode = 1}: (memref<1x256x3x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x3x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1211C3 = "sfu.taylor_4x"(%R3, %R3.0x400, %D295C3) : (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1212C3 = "arith.mul"(%R3.0x200, %R4, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1213C3 = "arith.add"(%R4, %C1.0, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1214C3 = "arith.div"(%C1.0, %R3, %D295C3) {iter = 3}: (f16, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1215C3 = "arith.mul"(%R4, %R1.0xa00, %D295C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D296C3 = "dma.tensor"(%G1.0xd1e000, %B1198C3) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1216C3 = "arith.copy"(%R1.0x800, %D296C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1217C3 = "arith.copy"(%R4, %D296C3) {round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1218C3 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D296C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1219C3 = "tsbc.s_bc"(%R0.0x580, %D296C3) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1220C3 = "arith.sub"(%C0.0, %R4, %D296C3) {round_mode = 0}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1221C3 = "arith.max"(%R1.0xc00, %C-45408.0, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1222C3 = "arith.min"(%R1.0xc00, %C45408.0, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1223C3 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1224C3 = "arith.cast"(%R1.0x800, %D296C3) {round_mode = 3}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1225C3 = "arith.mul"(%R2.0x3000, %C0.693359375, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1226C3 = "arith.sub"(%R1.0xc00, %R1.0x800, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1227C3 = "arith.cast"(%R2.0x3000, %D296C3) {round_mode = 1}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1228C3 = "arith.min"(%R1.0xc00, %C15, %D296C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1229C3 = "arith.max"(%R2.0x3000, %C-15, %D296C3) {round_mode = 0}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1230C3 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D296C3) {round_mode = 1}: (memref<1x512x3x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x3x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1231C3 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D296C3) : (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1232C3 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1233C3 = "arith.add"(%R2.0x3000, %C1.0, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1234C3 = "arith.div"(%C1.0, %R1.0x800, %D296C3) {iter = 3}: (f16, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1235C3 = "arith.mul"(%R2.0x3000, %R4, %D296C3) {round_mode = 0}: (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f168, %D297C3 = "dma.tensor"(%R2.0x3000, %B1235C3) : (memref<1x512x3x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x3x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1236C3, %msg49 = "system.send_msg"(%D297C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C3, %msg49 = "dma.sys.sys_send"(%B1236C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D294C4, %msg49 = "@core_4"(%D283C4, %msg48) {
CHECK:          %B1178C4 = "system.wait_msg"(%D283C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D284C4 = "dma.sys.sys_wait"(%B1178C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D285C4 = "dma.tensor"(%G1.0xbbc000, %B1178C4) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D286C4 = "dma.tensor"(%L30.0x69800641b8, %B1178C4) : (memref<1x256x4x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x4x20xi16, strides: [384, 96, 20, 1]>, none)
CHECK:          %R6.0x40, %D287C4 = "dma.tensor"(%G1.0xbbb000, %B1178C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1179C4 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D287C4) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x4x20xf16, strides: [384, 96, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D288C4 = "dma.tensor"(%G1.0xcdd000, %B1178C4) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D289C4 = "dma.tensor"(%L30.0x69800001e0, %B1178C4) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1180C4 = "tsbc.s_bc"(%R0.0x580, %D289C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1181C4 = "arith.sub"(%C0.0, %R4, %D289C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1182C4 = "arith.max"(%R2.0x3200, %C-45408.0, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1183C4 = "arith.min"(%R2.0x3200, %C45408.0, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1184C4 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1185C4 = "arith.cast"(%R2.0x3000, %D289C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1186C4 = "arith.mul"(%R1.0x800, %C0.693359375, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1187C4 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1188C4 = "arith.cast"(%R1.0x800, %D289C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1189C4 = "arith.min"(%R2.0x3200, %C15, %D289C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1190C4 = "arith.max"(%R1.0x800, %C-15, %D289C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1191C4 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D289C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1192C4 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D289C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1193C4 = "arith.mul"(%R2.0x3200, %R1.0x800, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1194C4 = "arith.add"(%R1.0x800, %C1.0, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1195C4 = "arith.div"(%C1.0, %R2.0x3000, %D289C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1196C4 = "arith.mul"(%R1.0x800, %R4, %D289C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D290C4 = "dma.tensor"(%G1.0xcdc000, %B1179C4) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1197C4 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D290C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D291C4 = "dma.tensor"(%G1.0xd1d000, %B1196C4) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1198C4 = "tsbc.s_bc"(%R0.0x580, %D291C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1199C4 = "arith.sub"(%C0.0, %R1.0xa00, %D291C4) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1200C4 = "arith.max"(%R3.0x200, %C-45408.0, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1201C4 = "arith.min"(%R3.0x200, %C45408.0, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1202C4 = "arith.mul"(%R3.0x200, %C1.4423828125, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1203C4 = "arith.cast"(%R3, %D291C4) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1204C4 = "arith.mul"(%R4, %C0.693359375, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1205C4 = "arith.sub"(%R3.0x200, %R3, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1206C4 = "arith.cast"(%R4, %D291C4) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1207C4 = "arith.min"(%R3.0x200, %C15, %D291C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1208C4 = "arith.max"(%R4, %C-15, %D291C4) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1209C4 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D291C4) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1210C4 = "sfu.taylor_4x"(%R3, %R3.0x400, %D291C4) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1211C4 = "arith.mul"(%R3.0x200, %R4, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1212C4 = "arith.add"(%R4, %C1.0, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1213C4 = "arith.div"(%C1.0, %R3, %D291C4) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1214C4 = "arith.mul"(%R4, %R1.0xa00, %D291C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D292C4 = "dma.tensor"(%G1.0xd1e000, %B1197C4) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1215C4 = "arith.copy"(%R1.0x800, %D292C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1216C4 = "arith.copy"(%R4, %D292C4) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1217C4 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D292C4) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1218C4 = "tsbc.s_bc"(%R0.0x580, %D292C4) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1219C4 = "arith.sub"(%C0.0, %R4, %D292C4) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1220C4 = "arith.max"(%R1.0xc00, %C-45408.0, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1221C4 = "arith.min"(%R1.0xc00, %C45408.0, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1222C4 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1223C4 = "arith.cast"(%R1.0x800, %D292C4) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1224C4 = "arith.mul"(%R2.0x3000, %C0.693359375, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1225C4 = "arith.sub"(%R1.0xc00, %R1.0x800, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1226C4 = "arith.cast"(%R2.0x3000, %D292C4) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1227C4 = "arith.min"(%R1.0xc00, %C15, %D292C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1228C4 = "arith.max"(%R2.0x3000, %C-15, %D292C4) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1229C4 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D292C4) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1230C4 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D292C4) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1231C4 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1232C4 = "arith.add"(%R2.0x3000, %C1.0, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1233C4 = "arith.div"(%C1.0, %R1.0x800, %D292C4) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1234C4 = "arith.mul"(%R2.0x3000, %R4, %D292C4) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f1e0, %D293C4 = "dma.tensor"(%R2.0x3000, %B1234C4) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1235C4, %msg49 = "system.send_msg"(%D293C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D294C4, %msg49 = "dma.sys.sys_send"(%B1235C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D294C5, %msg49 = "@core_5"(%D283C5, %msg48) {
CHECK:          %B1178C5 = "system.wait_msg"(%D283C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D284C5 = "dma.sys.sys_wait"(%B1178C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D285C5 = "dma.tensor"(%G1.0xbbc000, %B1178C5) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D286C5 = "dma.tensor"(%L30.0x6980064208, %B1178C5) : (memref<1x256x4x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x4x20xi16, strides: [384, 96, 20, 1]>, none)
CHECK:          %R6.0x40, %D287C5 = "dma.tensor"(%G1.0xbbb000, %B1178C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1179C5 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D287C5) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x4x20xf16, strides: [384, 96, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D288C5 = "dma.tensor"(%G1.0xcdd000, %B1178C5) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D289C5 = "dma.tensor"(%L30.0x6980000230, %B1178C5) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1180C5 = "tsbc.s_bc"(%R0.0x580, %D289C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1181C5 = "arith.sub"(%C0.0, %R4, %D289C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1182C5 = "arith.max"(%R2.0x3200, %C-45408.0, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1183C5 = "arith.min"(%R2.0x3200, %C45408.0, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1184C5 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1185C5 = "arith.cast"(%R2.0x3000, %D289C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1186C5 = "arith.mul"(%R1.0x800, %C0.693359375, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1187C5 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1188C5 = "arith.cast"(%R1.0x800, %D289C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1189C5 = "arith.min"(%R2.0x3200, %C15, %D289C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1190C5 = "arith.max"(%R1.0x800, %C-15, %D289C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1191C5 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D289C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1192C5 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D289C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1193C5 = "arith.mul"(%R2.0x3200, %R1.0x800, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1194C5 = "arith.add"(%R1.0x800, %C1.0, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1195C5 = "arith.div"(%C1.0, %R2.0x3000, %D289C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1196C5 = "arith.mul"(%R1.0x800, %R4, %D289C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D290C5 = "dma.tensor"(%G1.0xcdc000, %B1179C5) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1197C5 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D290C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D291C5 = "dma.tensor"(%G1.0xd1d000, %B1196C5) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1198C5 = "tsbc.s_bc"(%R0.0x580, %D291C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1199C5 = "arith.sub"(%C0.0, %R1.0xa00, %D291C5) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1200C5 = "arith.max"(%R3.0x200, %C-45408.0, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1201C5 = "arith.min"(%R3.0x200, %C45408.0, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1202C5 = "arith.mul"(%R3.0x200, %C1.4423828125, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1203C5 = "arith.cast"(%R3, %D291C5) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1204C5 = "arith.mul"(%R4, %C0.693359375, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1205C5 = "arith.sub"(%R3.0x200, %R3, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1206C5 = "arith.cast"(%R4, %D291C5) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1207C5 = "arith.min"(%R3.0x200, %C15, %D291C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1208C5 = "arith.max"(%R4, %C-15, %D291C5) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1209C5 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D291C5) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1210C5 = "sfu.taylor_4x"(%R3, %R3.0x400, %D291C5) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1211C5 = "arith.mul"(%R3.0x200, %R4, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1212C5 = "arith.add"(%R4, %C1.0, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1213C5 = "arith.div"(%C1.0, %R3, %D291C5) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1214C5 = "arith.mul"(%R4, %R1.0xa00, %D291C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D292C5 = "dma.tensor"(%G1.0xd1e000, %B1197C5) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1215C5 = "arith.copy"(%R1.0x800, %D292C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1216C5 = "arith.copy"(%R4, %D292C5) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1217C5 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D292C5) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1218C5 = "tsbc.s_bc"(%R0.0x580, %D292C5) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1219C5 = "arith.sub"(%C0.0, %R4, %D292C5) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1220C5 = "arith.max"(%R1.0xc00, %C-45408.0, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1221C5 = "arith.min"(%R1.0xc00, %C45408.0, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1222C5 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1223C5 = "arith.cast"(%R1.0x800, %D292C5) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1224C5 = "arith.mul"(%R2.0x3000, %C0.693359375, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1225C5 = "arith.sub"(%R1.0xc00, %R1.0x800, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1226C5 = "arith.cast"(%R2.0x3000, %D292C5) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1227C5 = "arith.min"(%R1.0xc00, %C15, %D292C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1228C5 = "arith.max"(%R2.0x3000, %C-15, %D292C5) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1229C5 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D292C5) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1230C5 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D292C5) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1231C5 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1232C5 = "arith.add"(%R2.0x3000, %C1.0, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1233C5 = "arith.div"(%C1.0, %R1.0x800, %D292C5) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1234C5 = "arith.mul"(%R2.0x3000, %R4, %D292C5) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f230, %D293C5 = "dma.tensor"(%R2.0x3000, %B1234C5) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1235C5, %msg49 = "system.send_msg"(%D293C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D294C5, %msg49 = "dma.sys.sys_send"(%B1235C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D290C6, %msg49 = "@core_6"(%D279C6, %msg48) {
CHECK:          %B1105C6 = "system.wait_msg"(%D279C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D280C6 = "dma.sys.sys_wait"(%B1105C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D281C6 = "dma.tensor"(%G1.0xbbc000, %B1105C6) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D282C6 = "dma.tensor"(%L30.0x6980064258, %B1105C6) : (memref<1x256x4x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x4x20xi16, strides: [384, 96, 20, 1]>, none)
CHECK:          %R6.0x40, %D283C6 = "dma.tensor"(%G1.0xbbb000, %B1105C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1106C6 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D283C6) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x4x20xf16, strides: [384, 96, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D284C6 = "dma.tensor"(%G1.0xcdd000, %B1105C6) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D285C6 = "dma.tensor"(%L30.0x6980000280, %B1105C6) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1107C6 = "tsbc.s_bc"(%R0.0x580, %D285C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1108C6 = "arith.sub"(%C0.0, %R4, %D285C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1109C6 = "arith.max"(%R2.0x3200, %C-45408.0, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1110C6 = "arith.min"(%R2.0x3200, %C45408.0, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1111C6 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1112C6 = "arith.cast"(%R2.0x3000, %D285C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1113C6 = "arith.mul"(%R1.0x800, %C0.693359375, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1114C6 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1115C6 = "arith.cast"(%R1.0x800, %D285C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1116C6 = "arith.min"(%R2.0x3200, %C15, %D285C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1117C6 = "arith.max"(%R1.0x800, %C-15, %D285C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1118C6 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D285C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1119C6 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D285C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1120C6 = "arith.mul"(%R2.0x3200, %R1.0x800, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1121C6 = "arith.add"(%R1.0x800, %C1.0, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1122C6 = "arith.div"(%C1.0, %R2.0x3000, %D285C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1123C6 = "arith.mul"(%R1.0x800, %R4, %D285C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D286C6 = "dma.tensor"(%G1.0xcdc000, %B1106C6) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1124C6 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D286C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D287C6 = "dma.tensor"(%G1.0xd1d000, %B1123C6) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1125C6 = "tsbc.s_bc"(%R0.0x580, %D287C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1126C6 = "arith.sub"(%C0.0, %R1.0xa00, %D287C6) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1127C6 = "arith.max"(%R3.0x200, %C-45408.0, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1128C6 = "arith.min"(%R3.0x200, %C45408.0, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1129C6 = "arith.mul"(%R3.0x200, %C1.4423828125, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1130C6 = "arith.cast"(%R3, %D287C6) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1131C6 = "arith.mul"(%R4, %C0.693359375, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1132C6 = "arith.sub"(%R3.0x200, %R3, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1133C6 = "arith.cast"(%R4, %D287C6) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1134C6 = "arith.min"(%R3.0x200, %C15, %D287C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1135C6 = "arith.max"(%R4, %C-15, %D287C6) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1136C6 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D287C6) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1137C6 = "sfu.taylor_4x"(%R3, %R3.0x400, %D287C6) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1138C6 = "arith.mul"(%R3.0x200, %R4, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1139C6 = "arith.add"(%R4, %C1.0, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1140C6 = "arith.div"(%C1.0, %R3, %D287C6) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1141C6 = "arith.mul"(%R4, %R1.0xa00, %D287C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D288C6 = "dma.tensor"(%G1.0xd1e000, %B1124C6) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1142C6 = "arith.copy"(%R1.0x800, %D288C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1143C6 = "arith.copy"(%R4, %D288C6) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1144C6 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D288C6) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1145C6 = "tsbc.s_bc"(%R0.0x580, %D288C6) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1146C6 = "arith.sub"(%C0.0, %R4, %D288C6) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1147C6 = "arith.max"(%R1.0xc00, %C-45408.0, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1148C6 = "arith.min"(%R1.0xc00, %C45408.0, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1149C6 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1150C6 = "arith.cast"(%R1.0x800, %D288C6) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1151C6 = "arith.mul"(%R2.0x3000, %C0.693359375, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1152C6 = "arith.sub"(%R1.0xc00, %R1.0x800, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1153C6 = "arith.cast"(%R2.0x3000, %D288C6) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1154C6 = "arith.min"(%R1.0xc00, %C15, %D288C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1155C6 = "arith.max"(%R2.0x3000, %C-15, %D288C6) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1156C6 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D288C6) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1157C6 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D288C6) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1158C6 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1159C6 = "arith.add"(%R2.0x3000, %C1.0, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1160C6 = "arith.div"(%C1.0, %R1.0x800, %D288C6) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1161C6 = "arith.mul"(%R2.0x3000, %R4, %D288C6) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f280, %D289C6 = "dma.tensor"(%R2.0x3000, %B1161C6) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1162C6, %msg49 = "system.send_msg"(%D289C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D290C6, %msg49 = "dma.sys.sys_send"(%B1162C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D278C7, %msg49 = "@core_7"(%D267C7, %msg48) {
CHECK:          %B1032C7 = "system.wait_msg"(%D267C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D268C7 = "dma.sys.sys_wait"(%B1032C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D269C7 = "dma.tensor"(%G1.0xbbc000, %B1032C7) : (memref<1x256x1x2304xi16, strides: [589824, 2304, 2304, 1]>, none) -> (memref<1x256x1x2304xi16, strides: [9216, 2304, 2304, 1]>, none)
CHECK:          %R5, %D270C7 = "dma.tensor"(%L30.0x69800642a8, %B1032C7) : (memref<1x256x3x20xi16, strides: [102400, 400, 20, 1]>, none) -> (memref<1x256x3x20xi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6.0x40, %D271C7 = "dma.tensor"(%G1.0xbbb000, %B1032C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R4, %B1033C7 = "conv.normal"(%R5, %R0, %R6.0x40, %C0.0, %D271C7) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 1, 1, 1], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x3x20xf16, strides: [256, 64, 20, 1]>, memref<256x256x3x3xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x2000, %D272C7 = "dma.tensor"(%G1.0xcdd000, %B1032C7) : (memref<1x256x1x512xi16, strides: [131072, 512, 512, 1]>, none) -> (memref<1x256x1x512xi16, strides: [2048, 512, 512, 1]>, none)
CHECK:          %R3, %D273C7 = "dma.tensor"(%L30.0x69800002d0, %B1032C7) : (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3400, %B1034C7 = "tsbc.s_bc"(%R0.0x580, %D273C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R2.0x3200, %B1035C7 = "arith.sub"(%C0.0, %R4, %D273C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1036C7 = "arith.max"(%R2.0x3200, %C-45408.0, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1037C7 = "arith.min"(%R2.0x3200, %C45408.0, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1038C7 = "arith.mul"(%R2.0x3200, %C1.4423828125, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1039C7 = "arith.cast"(%R2.0x3000, %D273C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1040C7 = "arith.mul"(%R1.0x800, %C0.693359375, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1041C7 = "arith.sub"(%R2.0x3200, %R2.0x3000, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1042C7 = "arith.cast"(%R1.0x800, %D273C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1043C7 = "arith.min"(%R2.0x3200, %C15, %D273C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1044C7 = "arith.max"(%R1.0x800, %C-15, %D273C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1045C7 = "arith.add_satu"(%R2.0x3200, %C15, %C10, %D273C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3200, %B1046C7 = "sfu.taylor_4x"(%R2.0x3000, %R2.0x3400, %D273C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1047C7 = "arith.mul"(%R2.0x3200, %R1.0x800, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1048C7 = "arith.add"(%R1.0x800, %C1.0, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1049C7 = "arith.div"(%C1.0, %R2.0x3000, %D273C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1050C7 = "arith.mul"(%R1.0x800, %R4, %D273C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R6, %D274C7 = "dma.tensor"(%G1.0xcdc000, %B1033C7) : (memref<1x256x1x1xf32, strides: [256, 1, 1, 1]>, none) -> (memref<1x256x1x1xf32, strides: [4, 1, 1, 1]>, none)
CHECK:          %R1.0xa00, %B1051C7 = "conv.normal"(%R3, %R2.0x2000, %R6, %C0.0, %D274C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<256x512x1x1xf16>, memref<1x256x1x1xui32, strides: [4, 1, 1, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R5.0x400, %D275C7 = "dma.tensor"(%G1.0xd1d000, %B1050C7) : (memref<1x512x1x1xf32, strides: [512, 1, 1, 1]>, none) -> (memref<1x512x1x1xf32, strides: [8, 1, 1, 1]>, none)
CHECK:          %R3.0x400, %B1052C7 = "tsbc.s_bc"(%R0.0x580, %D275C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R3.0x200, %B1053C7 = "arith.sub"(%C0.0, %R1.0xa00, %D275C7) {round_mode = 0}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1054C7 = "arith.max"(%R3.0x200, %C-45408.0, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1055C7 = "arith.min"(%R3.0x200, %C45408.0, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1056C7 = "arith.mul"(%R3.0x200, %C1.4423828125, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1057C7 = "arith.cast"(%R3, %D275C7) {round_mode = 3}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1058C7 = "arith.mul"(%R4, %C0.693359375, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1059C7 = "arith.sub"(%R3.0x200, %R3, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1060C7 = "arith.cast"(%R4, %D275C7) {round_mode = 1}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1061C7 = "arith.min"(%R3.0x200, %C15, %D275C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1062C7 = "arith.max"(%R4, %C-15, %D275C7) {round_mode = 0}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si8, none) -> (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1063C7 = "arith.add_satu"(%R3.0x200, %C15, %C10, %D275C7) {round_mode = 1}: (memref<1x256x2x20xsi8, strides: [256, 64, 20, 1]>, si16, ui8, none) -> (memref<1x256x2x20xsi16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1064C7 = "sfu.taylor_4x"(%R3, %R3.0x400, %D275C7) : (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1065C7 = "arith.mul"(%R3.0x200, %R4, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R3, %B1066C7 = "arith.add"(%R4, %C1.0, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, f16, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1067C7 = "arith.div"(%C1.0, %R3, %D275C7) {iter = 3}: (f16, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R4, %B1068C7 = "arith.mul"(%R4, %R1.0xa00, %D275C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none)
CHECK:          %R2, %D276C7 = "dma.tensor"(%G1.0xd1e000, %B1051C7) : (memref<1x512x1x512xi16, strides: [262144, 512, 512, 1]>, none) -> (memref<1x512x1x512xi16, strides: [4096, 512, 512, 1]>, none)
CHECK:          %R3, %B1069C7 = "arith.copy"(%R1.0x800, %D276C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R3.0x200, %B1070C7 = "arith.copy"(%R4, %D276C7) {round_mode = 0}: (memref<1x256x2x20xf16, strides: [256, 64, 20, 1]>, none) -> (memref<1x256x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R4, %B1071C7 = "conv.normal"(%R3, %R2, %R5.0x400, %C0.0, %D276C7) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<512x512x1x1xf16>, memref<1x512x1x1xui32, strides: [8, 1, 1, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x1000, %B1072C7 = "tsbc.s_bc"(%R0.0x580, %D276C7) : (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none) -> (memref<1x64x1x7xf16, strides: [32, 32, 7, 1]>, none)
CHECK:          %R1.0xc00, %B1073C7 = "arith.sub"(%C0.0, %R4, %D276C7) {round_mode = 0}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1074C7 = "arith.max"(%R1.0xc00, %C-45408.0, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1075C7 = "arith.min"(%R1.0xc00, %C45408.0, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1076C7 = "arith.mul"(%R1.0xc00, %C1.4423828125, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1077C7 = "arith.cast"(%R1.0x800, %D276C7) {round_mode = 3}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1078C7 = "arith.mul"(%R2.0x3000, %C0.693359375, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1079C7 = "arith.sub"(%R1.0xc00, %R1.0x800, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1080C7 = "arith.cast"(%R2.0x3000, %D276C7) {round_mode = 1}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1081C7 = "arith.min"(%R1.0xc00, %C15, %D276C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1082C7 = "arith.max"(%R2.0x3000, %C-15, %D276C7) {round_mode = 0}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si8, none) -> (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1083C7 = "arith.add_satu"(%R1.0xc00, %C15, %C10, %D276C7) {round_mode = 1}: (memref<1x512x2x20xsi8, strides: [512, 64, 20, 1]>, si16, ui8, none) -> (memref<1x512x2x20xsi16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0xc00, %B1084C7 = "sfu.taylor_4x"(%R1.0x800, %R1.0x1000, %D276C7) : (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x64x1x7xf16, strides: [0, 0, 7, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1085C7 = "arith.mul"(%R1.0xc00, %R2.0x3000, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R1.0x800, %B1086C7 = "arith.add"(%R2.0x3000, %C1.0, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, f16, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1087C7 = "arith.div"(%C1.0, %R1.0x800, %D276C7) {iter = 3}: (f16, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %R2.0x3000, %B1088C7 = "arith.mul"(%R2.0x3000, %R4, %D276C7) {round_mode = 0}: (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xf16, strides: [512, 64, 20, 1]>, none)
CHECK:          %L30.0x6980a1f2d0, %D277C7 = "dma.tensor"(%R2.0x3000, %B1088C7) : (memref<1x512x2x20xi16, strides: [512, 64, 20, 1]>, none) -> (memref<1x512x2x20xi16, strides: [204800, 400, 20, 1]>, none)
CHECK:          %B1089C7, %msg49 = "system.send_msg"(%D277C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D278C7, %msg49 = "dma.sys.sys_send"(%B1089C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D302C0, %msg48 = "@core_0"(%D300C0, %msg49) {
CHECK:          %B1240C0 = "system.wait_msg"(%D300C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C0 = "dma.sys.sys_wait"(%B1240C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1241C0, %msg48 = "system.send_msg"(%D301C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D302C0, %msg48 = "dma.sys.sys_send"(%B1241C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C1, %msg48 = "@core_1"(%D298C1, %msg49) {
CHECK:          %B1237C1 = "system.wait_msg"(%D298C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C1 = "dma.sys.sys_wait"(%B1237C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1238C1, %msg48 = "system.send_msg"(%D299C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C1, %msg48 = "dma.sys.sys_send"(%B1238C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C2, %msg48 = "@core_2"(%D298C2, %msg49) {
CHECK:          %B1237C2 = "system.wait_msg"(%D298C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C2 = "dma.sys.sys_wait"(%B1237C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1238C2, %msg48 = "system.send_msg"(%D299C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C2, %msg48 = "dma.sys.sys_send"(%B1238C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C3, %msg48 = "@core_3"(%D298C3, %msg49) {
CHECK:          %B1237C3 = "system.wait_msg"(%D298C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C3 = "dma.sys.sys_wait"(%B1237C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1238C3, %msg48 = "system.send_msg"(%D299C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C3, %msg48 = "dma.sys.sys_send"(%B1238C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D296C4, %msg48 = "@core_4"(%D294C4, %msg49) {
CHECK:          %B1236C4 = "system.wait_msg"(%D294C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D295C4 = "dma.sys.sys_wait"(%B1236C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1237C4, %msg48 = "system.send_msg"(%D295C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D296C4, %msg48 = "dma.sys.sys_send"(%B1237C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D296C5, %msg48 = "@core_5"(%D294C5, %msg49) {
CHECK:          %B1236C5 = "system.wait_msg"(%D294C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D295C5 = "dma.sys.sys_wait"(%B1236C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1237C5, %msg48 = "system.send_msg"(%D295C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D296C5, %msg48 = "dma.sys.sys_send"(%B1237C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D292C6, %msg48 = "@core_6"(%D290C6, %msg49) {
CHECK:          %B1163C6 = "system.wait_msg"(%D290C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D291C6 = "dma.sys.sys_wait"(%B1163C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1164C6, %msg48 = "system.send_msg"(%D291C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D292C6, %msg48 = "dma.sys.sys_send"(%B1164C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D280C7, %msg48 = "@core_7"(%D278C7, %msg49) {
CHECK:          %B1090C7 = "system.wait_msg"(%D278C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D279C7 = "dma.sys.sys_wait"(%B1090C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1091C7, %msg48 = "system.send_msg"(%D279C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D280C7, %msg48 = "dma.sys.sys_send"(%B1091C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C0, %msg49 = "@core_0"(%D302C0, %msg48) {
CHECK:          %B1242C0 = "system.wait_msg"(%D302C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D303C0 = "dma.sys.sys_wait"(%B1242C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D304C0 = "dma.tensor"(%G1.0xd9f000, %B1242C0) : (memref<1x64x4x32xf16, strides: [32640, 128, 32, 1]>, none) -> (memref<1x64x4x32xf16, strides: [128, 128, 32, 1]>, none)
CHECK:          %R0.0x100, %D305C0 = "dma.tensor"(%G1.0xd9e000, %B1242C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D306C0 = "dma.tensor"(%L30.0x6980320000, %B1242C0) : (memref<1x128x80x80xf16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, none)
CHECK:          %R5, %B1243C0 = "conv.normal"(%R1, %R0, %R0.0x100, %C0.0, %D306C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x80x80xf16, strides: [6400, 6400, 80, 1]>, none)
CHECK:          %L30.0x698063a000, %D307C0 = "dma.tensor"(%R5, %B1243C0) : (memref<1x64x80x80xf16, strides: [6400, 6400, 80, 1]>, none) -> (memref<1x64x80x80xf16, strides: [1632000, 6400, 80, 1]>, none)
CHECK:          %B1244C0, %msg49 = "system.send_msg"(%D307C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C0, %msg49 = "dma.sys.sys_send"(%B1244C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D306C1, %msg49 = "@core_1"(%D300C1, %msg48) {
CHECK:          %B1239C1 = "system.wait_msg"(%D300C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C1 = "dma.sys.sys_wait"(%B1239C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D302C1 = "dma.tensor"(%G1.0xda3000, %B1239C1) : (memref<1x64x4x32xf16, strides: [32640, 128, 32, 1]>, none) -> (memref<1x64x4x32xf16, strides: [128, 128, 32, 1]>, none)
CHECK:          %R0.0x100, %D303C1 = "dma.tensor"(%G1.0xd9e100, %B1239C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D304C1 = "dma.tensor"(%L30.0x6980320000, %B1239C1) : (memref<1x128x80x80xf16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, none)
CHECK:          %R5, %B1240C1 = "conv.normal"(%R1, %R0, %R0.0x100, %C0.0, %D304C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x80x80xf16, strides: [6400, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980702000, %D305C1 = "dma.tensor"(%R5, %B1240C1) : (memref<1x64x80x80xf16, strides: [6400, 6400, 80, 1]>, none) -> (memref<1x64x80x80xf16, strides: [1632000, 6400, 80, 1]>, none)
CHECK:          %B1241C1, %msg49 = "system.send_msg"(%D305C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D306C1, %msg49 = "dma.sys.sys_send"(%B1241C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D306C2, %msg49 = "@core_2"(%D300C2, %msg48) {
CHECK:          %B1239C2 = "system.wait_msg"(%D300C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C2 = "dma.sys.sys_wait"(%B1239C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D302C2 = "dma.tensor"(%G1.0xda7000, %B1239C2) : (memref<1x64x4x32xf16, strides: [32640, 128, 32, 1]>, none) -> (memref<1x64x4x32xf16, strides: [128, 128, 32, 1]>, none)
CHECK:          %R0.0x100, %D303C2 = "dma.tensor"(%G1.0xd9e200, %B1239C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D304C2 = "dma.tensor"(%L30.0x6980320000, %B1239C2) : (memref<1x128x80x80xf16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, none)
CHECK:          %R5, %B1240C2 = "conv.normal"(%R1, %R0, %R0.0x100, %C0.0, %D304C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, memref<64x128x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x80x80xf16, strides: [6400, 6400, 80, 1]>, none)
CHECK:          %L30.0x69807ca000, %D305C2 = "dma.tensor"(%R5, %B1240C2) : (memref<1x64x80x80xf16, strides: [6400, 6400, 80, 1]>, none) -> (memref<1x64x80x80xf16, strides: [1632000, 6400, 80, 1]>, none)
CHECK:          %B1241C2, %msg49 = "system.send_msg"(%D305C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D306C2, %msg49 = "dma.sys.sys_send"(%B1241C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D306C3, %msg49 = "@core_3"(%D300C3, %msg48) {
CHECK:          %B1239C3 = "system.wait_msg"(%D300C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C3 = "dma.sys.sys_wait"(%B1239C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D302C3 = "dma.tensor"(%G1.0xdab000, %B1239C3) : (memref<1x63x4x32xf16, strides: [32640, 128, 32, 1]>, none) -> (memref<1x63x4x32xf16, strides: [128, 128, 32, 1]>, none)
CHECK:          %R0.0x100, %D303C3 = "dma.tensor"(%G1.0xd9e300, %B1239C3) : (memref<1x63x1x1xf32, strides: [63, 1, 1, 1]>, none) -> (memref<1x63x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D304C3 = "dma.tensor"(%L30.0x6980320000, %B1239C3) : (memref<1x128x80x80xf16, strides: [819200, 6400, 80, 1]>, none) -> (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, none)
CHECK:          %R5, %B1240C3 = "conv.normal"(%R1, %R0, %R0.0x100, %C0.0, %D304C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x128x80x80xf16, strides: [12800, 6400, 80, 1]>, memref<63x128x1x1xf16>, memref<1x63x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x63x80x80xf16, strides: [6400, 6400, 80, 1]>, none)
CHECK:          %L30.0x6980892000, %D305C3 = "dma.tensor"(%R5, %B1240C3) : (memref<1x63x80x80xf16, strides: [6400, 6400, 80, 1]>, none) -> (memref<1x63x80x80xf16, strides: [1632000, 6400, 80, 1]>, none)
CHECK:          %B1241C3, %msg49 = "system.send_msg"(%D305C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D306C3, %msg49 = "dma.sys.sys_send"(%B1241C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C4, %msg49 = "@core_4"(%D296C4, %msg48) {
CHECK:          %B1238C4 = "system.wait_msg"(%D296C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D297C4 = "dma.sys.sys_wait"(%B1238C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1239C4, %msg49 = "system.send_msg"(%D297C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C4, %msg49 = "dma.sys.sys_send"(%B1239C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C5, %msg49 = "@core_5"(%D296C5, %msg48) {
CHECK:          %B1238C5 = "system.wait_msg"(%D296C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D297C5 = "dma.sys.sys_wait"(%B1238C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1239C5, %msg49 = "system.send_msg"(%D297C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C5, %msg49 = "dma.sys.sys_send"(%B1239C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D294C6, %msg49 = "@core_6"(%D292C6, %msg48) {
CHECK:          %B1165C6 = "system.wait_msg"(%D292C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D293C6 = "dma.sys.sys_wait"(%B1165C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1166C6, %msg49 = "system.send_msg"(%D293C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D294C6, %msg49 = "dma.sys.sys_send"(%B1166C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D282C7, %msg49 = "@core_7"(%D280C7, %msg48) {
CHECK:          %B1092C7 = "system.wait_msg"(%D280C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D281C7 = "dma.sys.sys_wait"(%B1092C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1093C7, %msg49 = "system.send_msg"(%D281C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D282C7, %msg49 = "dma.sys.sys_send"(%B1093C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D312C0, %msg48 = "@core_0"(%D308C0, %msg49) {
CHECK:          %B1245C0 = "system.wait_msg"(%D308C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C0 = "dma.sys.sys_wait"(%B1245C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D310C0 = "dma.tensor"(%L30.0x698063a000, %B1245C0) : (memref<255x64x100x1xf16, strides: [6400, 100, 1, 1]>, none) -> (memref<255x64x100x1xf16, strides: [100, 100, 1, 1]>, none)
CHECK:          %R8, %B1246C0 = "arith.copy"(%R0, %D310C0) {round_mode = 0}: (memref<3x64x100x85xf16, strides: [8500, 100, 1, 100]>, none) -> (memref<3x64x100x85xf16, strides: [8500, 8500, 85, 1]>, none)
CHECK:          %L30.0x6980000000, %D311C0 = "dma.tensor"(%R8, %B1246C0) : (memref<3x64x100x85xf16, strides: [8500, 8500, 85, 1]>, none) -> (memref<3x64x100x85xf16, strides: [544000, 8500, 85, 1]>, none)
CHECK:          %B1247C0, %msg48 = "system.send_msg"(%D311C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D312C0, %msg48 = "dma.sys.sys_send"(%B1247C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C1, %msg48 = "@core_1"(%D306C1, %msg49) {
CHECK:          %B1242C1 = "system.wait_msg"(%D306C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D307C1 = "dma.sys.sys_wait"(%B1242C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1243C1, %msg48 = "system.send_msg"(%D307C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C1, %msg48 = "dma.sys.sys_send"(%B1243C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C2, %msg48 = "@core_2"(%D306C2, %msg49) {
CHECK:          %B1242C2 = "system.wait_msg"(%D306C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D307C2 = "dma.sys.sys_wait"(%B1242C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1243C2, %msg48 = "system.send_msg"(%D307C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C2, %msg48 = "dma.sys.sys_send"(%B1243C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C3, %msg48 = "@core_3"(%D306C3, %msg49) {
CHECK:          %B1242C3 = "system.wait_msg"(%D306C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D307C3 = "dma.sys.sys_wait"(%B1242C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1243C3, %msg48 = "system.send_msg"(%D307C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C3, %msg48 = "dma.sys.sys_send"(%B1243C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C4, %msg48 = "@core_4"(%D298C4, %msg49) {
CHECK:          %B1240C4 = "system.wait_msg"(%D298C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C4 = "dma.sys.sys_wait"(%B1240C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1241C4, %msg48 = "system.send_msg"(%D299C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C4, %msg48 = "dma.sys.sys_send"(%B1241C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C5, %msg48 = "@core_5"(%D298C5, %msg49) {
CHECK:          %B1240C5 = "system.wait_msg"(%D298C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C5 = "dma.sys.sys_wait"(%B1240C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1241C5, %msg48 = "system.send_msg"(%D299C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C5, %msg48 = "dma.sys.sys_send"(%B1241C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D296C6, %msg48 = "@core_6"(%D294C6, %msg49) {
CHECK:          %B1167C6 = "system.wait_msg"(%D294C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D295C6 = "dma.sys.sys_wait"(%B1167C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1168C6, %msg48 = "system.send_msg"(%D295C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D296C6, %msg48 = "dma.sys.sys_send"(%B1168C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D284C7, %msg48 = "@core_7"(%D282C7, %msg49) {
CHECK:          %B1094C7 = "system.wait_msg"(%D282C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D283C7 = "dma.sys.sys_wait"(%B1094C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1095C7, %msg48 = "system.send_msg"(%D283C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D284C7, %msg48 = "dma.sys.sys_send"(%B1095C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D320C0, %msg49 = "@core_0"(%D312C0, %msg48) {
CHECK:          %B1248C0 = "system.wait_msg"(%D312C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D313C0 = "dma.sys.sys_wait"(%B1248C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D314C0 = "dma.matrix"(%L30.0x6980000000, %B1248C0) : (memref<1x1x5x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<5x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1249C0 = "arith.cast"(%R0, %D314C0) {round_mode = 1}: (memref<5x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<5x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D315C0 = "dma.matrix"(%L30.0x6980050000, %B1248C0) : (memref<1x1x3x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<3x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1250C0 = "arith.cast"(%R4, %D315C0) {round_mode = 1}: (memref<3x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<3x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x4b0000, %D316C0 = "dma.matrix"(%R8, %B1249C0) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %R0, %D317C0 = "dma.matrix"(%L30.0x6980080000, %B1249C0) : (memref<1x1x1x9856xf16, strides: [0, 0, 9856, 1]>, none) -> (memref<1x9856xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1251C0 = "arith.cast"(%R0, %D317C0) {round_mode = 1}: (memref<1x20x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x20x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x550000, %D318C0 = "dma.matrix"(%R12, %B1250C0) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0x5b0000, %D319C0 = "dma.matrix"(%R8, %B1251C0) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1252C0, %msg49 = "system.send_msg"(%D319C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D320C0, %msg49 = "dma.sys.sys_send"(%B1252C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D316C1, %msg49 = "@core_1"(%D308C1, %msg48) {
CHECK:          %B1244C1 = "system.wait_msg"(%D308C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C1 = "dma.sys.sys_wait"(%B1244C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D310C1 = "dma.matrix"(%L30.0x6980084d00, %B1244C1) : (memref<1x1x5x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<5x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1245C1 = "arith.cast"(%R0, %D310C1) {round_mode = 1}: (memref<5x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<5x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D311C1 = "dma.matrix"(%L30.0x69800d4d00, %B1244C1) : (memref<1x1x3x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<3x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1246C1 = "arith.cast"(%R4, %D311C1) {round_mode = 1}: (memref<3x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<3x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x5b9a00, %D312C1 = "dma.matrix"(%R8, %B1245C1) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %R0, %D313C1 = "dma.matrix"(%L30.0x6980104d00, %B1245C1) : (memref<1x1x1x9856xf16, strides: [0, 0, 9856, 1]>, none) -> (memref<1x9856xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1247C1 = "arith.cast"(%R0, %D313C1) {round_mode = 1}: (memref<1x20x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x20x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x659a00, %D314C1 = "dma.matrix"(%R12, %B1246C1) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0x6b9a00, %D315C1 = "dma.matrix"(%R8, %B1247C1) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1248C1, %msg49 = "system.send_msg"(%D315C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D316C1, %msg49 = "dma.sys.sys_send"(%B1248C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D316C2, %msg49 = "@core_2"(%D308C2, %msg48) {
CHECK:          %B1244C2 = "system.wait_msg"(%D308C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C2 = "dma.sys.sys_wait"(%B1244C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D310C2 = "dma.matrix"(%L30.0x6980109a00, %B1244C2) : (memref<1x1x5x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<5x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1245C2 = "arith.cast"(%R0, %D310C2) {round_mode = 1}: (memref<5x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<5x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D311C2 = "dma.matrix"(%L30.0x6980159a00, %B1244C2) : (memref<1x1x3x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<3x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1246C2 = "arith.cast"(%R4, %D311C2) {round_mode = 1}: (memref<3x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<3x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x6c3400, %D312C2 = "dma.matrix"(%R8, %B1245C2) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %R0, %D313C2 = "dma.matrix"(%L30.0x6980189a00, %B1245C2) : (memref<1x1x1x9856xf16, strides: [0, 0, 9856, 1]>, none) -> (memref<1x9856xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1247C2 = "arith.cast"(%R0, %D313C2) {round_mode = 1}: (memref<1x20x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x20x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x763400, %D314C2 = "dma.matrix"(%R12, %B1246C2) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0x7c3400, %D315C2 = "dma.matrix"(%R8, %B1247C2) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1248C2, %msg49 = "system.send_msg"(%D315C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D316C2, %msg49 = "dma.sys.sys_send"(%B1248C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D316C3, %msg49 = "@core_3"(%D308C3, %msg48) {
CHECK:          %B1244C3 = "system.wait_msg"(%D308C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C3 = "dma.sys.sys_wait"(%B1244C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D310C3 = "dma.matrix"(%L30.0x698018e700, %B1244C3) : (memref<1x1x5x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<5x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1245C3 = "arith.cast"(%R0, %D310C3) {round_mode = 1}: (memref<5x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<5x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D311C3 = "dma.matrix"(%L30.0x69801de700, %B1244C3) : (memref<1x1x3x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<3x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1246C3 = "arith.cast"(%R4, %D311C3) {round_mode = 1}: (memref<3x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<3x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x7cce00, %D312C3 = "dma.matrix"(%R8, %B1245C3) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %R0, %D313C3 = "dma.matrix"(%L30.0x698020e700, %B1245C3) : (memref<1x1x1x9856xf16, strides: [0, 0, 9856, 1]>, none) -> (memref<1x9856xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1247C3 = "arith.cast"(%R0, %D313C3) {round_mode = 1}: (memref<1x20x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x20x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x86ce00, %D314C3 = "dma.matrix"(%R12, %B1246C3) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0x8cce00, %D315C3 = "dma.matrix"(%R8, %B1247C3) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1248C3, %msg49 = "system.send_msg"(%D315C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D316C3, %msg49 = "dma.sys.sys_send"(%B1248C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C4, %msg49 = "@core_4"(%D300C4, %msg48) {
CHECK:          %B1242C4 = "system.wait_msg"(%D300C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C4 = "dma.sys.sys_wait"(%B1242C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D302C4 = "dma.matrix"(%L30.0x6980213400, %B1242C4) : (memref<1x1x5x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<5x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1243C4 = "arith.cast"(%R0, %D302C4) {round_mode = 1}: (memref<5x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<5x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D303C4 = "dma.matrix"(%L30.0x6980263400, %B1242C4) : (memref<1x1x3x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<3x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1244C4 = "arith.cast"(%R4, %D303C4) {round_mode = 1}: (memref<3x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<3x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x8d6800, %D304C4 = "dma.matrix"(%R8, %B1243C4) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %R0, %D305C4 = "dma.matrix"(%L30.0x6980293400, %B1243C4) : (memref<1x1x1x9856xf16, strides: [0, 0, 9856, 1]>, none) -> (memref<1x9856xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1245C4 = "arith.cast"(%R0, %D305C4) {round_mode = 1}: (memref<1x20x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x20x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x976800, %D306C4 = "dma.matrix"(%R12, %B1244C4) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0x9d6800, %D307C4 = "dma.matrix"(%R8, %B1245C4) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1246C4, %msg49 = "system.send_msg"(%D307C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C4, %msg49 = "dma.sys.sys_send"(%B1246C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C5, %msg49 = "@core_5"(%D300C5, %msg48) {
CHECK:          %B1242C5 = "system.wait_msg"(%D300C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C5 = "dma.sys.sys_wait"(%B1242C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D302C5 = "dma.matrix"(%L30.0x6980298100, %B1242C5) : (memref<1x1x5x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<5x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1243C5 = "arith.cast"(%R0, %D302C5) {round_mode = 1}: (memref<5x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<5x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D303C5 = "dma.matrix"(%L30.0x69802e8100, %B1242C5) : (memref<1x1x3x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<3x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1244C5 = "arith.cast"(%R4, %D303C5) {round_mode = 1}: (memref<3x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<3x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0x9e0200, %D304C5 = "dma.matrix"(%R8, %B1243C5) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %R0, %D305C5 = "dma.matrix"(%L30.0x6980318100, %B1243C5) : (memref<1x1x1x9856xf16, strides: [0, 0, 9856, 1]>, none) -> (memref<1x9856xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1245C5 = "arith.cast"(%R0, %D305C5) {round_mode = 1}: (memref<1x20x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x20x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xa80200, %D306C5 = "dma.matrix"(%R12, %B1244C5) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xae0200, %D307C5 = "dma.matrix"(%R8, %B1245C5) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1246C5, %msg49 = "system.send_msg"(%D307C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C5, %msg49 = "dma.sys.sys_send"(%B1246C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C6, %msg49 = "@core_6"(%D296C6, %msg48) {
CHECK:          %B1169C6 = "system.wait_msg"(%D296C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D297C6 = "dma.sys.sys_wait"(%B1169C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1170C6, %msg49 = "system.send_msg"(%D297C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C6, %msg49 = "dma.sys.sys_send"(%B1170C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D286C7, %msg49 = "@core_7"(%D284C7, %msg48) {
CHECK:          %B1096C7 = "system.wait_msg"(%D284C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D285C7 = "dma.sys.sys_wait"(%B1096C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1097C7, %msg49 = "system.send_msg"(%D285C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D286C7, %msg49 = "dma.sys.sys_send"(%B1097C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D322C0, %msg48 = "@core_0"(%D320C0, %msg49) {
CHECK:          %B1253C0 = "system.wait_msg"(%D320C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D321C0 = "dma.sys.sys_wait"(%B1253C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1254C0, %msg48 = "system.send_msg"(%D321C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D322C0, %msg48 = "dma.sys.sys_send"(%B1254C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D318C1, %msg48 = "@core_1"(%D316C1, %msg49) {
CHECK:          %B1249C1 = "system.wait_msg"(%D316C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D317C1 = "dma.sys.sys_wait"(%B1249C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1250C1, %msg48 = "system.send_msg"(%D317C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D318C1, %msg48 = "dma.sys.sys_send"(%B1250C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D318C2, %msg48 = "@core_2"(%D316C2, %msg49) {
CHECK:          %B1249C2 = "system.wait_msg"(%D316C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D317C2 = "dma.sys.sys_wait"(%B1249C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1250C2, %msg48 = "system.send_msg"(%D317C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D318C2, %msg48 = "dma.sys.sys_send"(%B1250C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D318C3, %msg48 = "@core_3"(%D316C3, %msg49) {
CHECK:          %B1249C3 = "system.wait_msg"(%D316C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D317C3 = "dma.sys.sys_wait"(%B1249C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1250C3, %msg48 = "system.send_msg"(%D317C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D318C3, %msg48 = "dma.sys.sys_send"(%B1250C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D310C4, %msg48 = "@core_4"(%D308C4, %msg49) {
CHECK:          %B1247C4 = "system.wait_msg"(%D308C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C4 = "dma.sys.sys_wait"(%B1247C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1248C4, %msg48 = "system.send_msg"(%D309C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D310C4, %msg48 = "dma.sys.sys_send"(%B1248C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D310C5, %msg48 = "@core_5"(%D308C5, %msg49) {
CHECK:          %B1247C5 = "system.wait_msg"(%D308C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C5 = "dma.sys.sys_wait"(%B1247C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1248C5, %msg48 = "system.send_msg"(%D309C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D310C5, %msg48 = "dma.sys.sys_send"(%B1248C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C6, %msg48 = "@core_6"(%D298C6, %msg49) {
CHECK:          %B1171C6 = "system.wait_msg"(%D298C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C6 = "dma.sys.sys_wait"(%B1171C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1172C6, %msg48 = "system.send_msg"(%D299C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C6, %msg48 = "dma.sys.sys_send"(%B1172C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D288C7, %msg48 = "@core_7"(%D286C7, %msg49) {
CHECK:          %B1098C7 = "system.wait_msg"(%D286C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D287C7 = "dma.sys.sys_wait"(%B1098C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1099C7, %msg48 = "system.send_msg"(%D287C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D288C7, %msg48 = "dma.sys.sys_send"(%B1099C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D328C0, %msg49 = "@core_0"(%D322C0, %msg48) {
CHECK:          %B1255C0 = "system.wait_msg"(%D322C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D323C0 = "dma.sys.sys_wait"(%B1255C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D324C0 = "dma.tensor"(%G1.0xdb0000, %B1255C0) : (memref<1x64x8x32xf16, strides: [65280, 256, 32, 1]>, none) -> (memref<1x64x8x32xf16, strides: [256, 256, 32, 1]>, none)
CHECK:          %R0.0x200, %D325C0 = "dma.tensor"(%G1.0xdaf000, %B1255C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D326C0 = "dma.tensor"(%L30.0x6980957000, %B1255C0) : (memref<1x256x40x40xf16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, none)
CHECK:          %R3, %B1256C0 = "conv.normal"(%R1, %R0, %R0.0x200, %C0.0, %D326C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x40x40xf16, strides: [1600, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980190000, %D327C0 = "dma.tensor"(%R3, %B1256C0) : (memref<1x64x40x40xf16, strides: [1600, 1600, 40, 1]>, none) -> (memref<1x64x40x40xf16, strides: [408000, 1600, 40, 1]>, none)
CHECK:          %B1257C0, %msg49 = "system.send_msg"(%D327C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D328C0, %msg49 = "dma.sys.sys_send"(%B1257C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D324C1, %msg49 = "@core_1"(%D318C1, %msg48) {
CHECK:          %B1251C1 = "system.wait_msg"(%D318C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D319C1 = "dma.sys.sys_wait"(%B1251C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D320C1 = "dma.tensor"(%G1.0xdb8000, %B1251C1) : (memref<1x64x8x32xf16, strides: [65280, 256, 32, 1]>, none) -> (memref<1x64x8x32xf16, strides: [256, 256, 32, 1]>, none)
CHECK:          %R0.0x200, %D321C1 = "dma.tensor"(%G1.0xdaf100, %B1251C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D322C1 = "dma.tensor"(%L30.0x6980957000, %B1251C1) : (memref<1x256x40x40xf16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, none)
CHECK:          %R3, %B1252C1 = "conv.normal"(%R1, %R0, %R0.0x200, %C0.0, %D322C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x40x40xf16, strides: [1600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69801c2000, %D323C1 = "dma.tensor"(%R3, %B1252C1) : (memref<1x64x40x40xf16, strides: [1600, 1600, 40, 1]>, none) -> (memref<1x64x40x40xf16, strides: [408000, 1600, 40, 1]>, none)
CHECK:          %B1253C1, %msg49 = "system.send_msg"(%D323C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D324C1, %msg49 = "dma.sys.sys_send"(%B1253C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D324C2, %msg49 = "@core_2"(%D318C2, %msg48) {
CHECK:          %B1251C2 = "system.wait_msg"(%D318C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D319C2 = "dma.sys.sys_wait"(%B1251C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D320C2 = "dma.tensor"(%G1.0xdc0000, %B1251C2) : (memref<1x64x8x32xf16, strides: [65280, 256, 32, 1]>, none) -> (memref<1x64x8x32xf16, strides: [256, 256, 32, 1]>, none)
CHECK:          %R0.0x200, %D321C2 = "dma.tensor"(%G1.0xdaf200, %B1251C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D322C2 = "dma.tensor"(%L30.0x6980957000, %B1251C2) : (memref<1x256x40x40xf16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, none)
CHECK:          %R3, %B1252C2 = "conv.normal"(%R1, %R0, %R0.0x200, %C0.0, %D322C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, memref<64x256x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x40x40xf16, strides: [1600, 1600, 40, 1]>, none)
CHECK:          %L30.0x69801f4000, %D323C2 = "dma.tensor"(%R3, %B1252C2) : (memref<1x64x40x40xf16, strides: [1600, 1600, 40, 1]>, none) -> (memref<1x64x40x40xf16, strides: [408000, 1600, 40, 1]>, none)
CHECK:          %B1253C2, %msg49 = "system.send_msg"(%D323C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D324C2, %msg49 = "dma.sys.sys_send"(%B1253C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D324C3, %msg49 = "@core_3"(%D318C3, %msg48) {
CHECK:          %B1251C3 = "system.wait_msg"(%D318C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D319C3 = "dma.sys.sys_wait"(%B1251C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D320C3 = "dma.tensor"(%G1.0xdc8000, %B1251C3) : (memref<1x63x8x32xf16, strides: [65280, 256, 32, 1]>, none) -> (memref<1x63x8x32xf16, strides: [256, 256, 32, 1]>, none)
CHECK:          %R0.0x200, %D321C3 = "dma.tensor"(%G1.0xdaf300, %B1251C3) : (memref<1x63x1x1xf32, strides: [63, 1, 1, 1]>, none) -> (memref<1x63x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D322C3 = "dma.tensor"(%L30.0x6980957000, %B1251C3) : (memref<1x256x40x40xf16, strides: [409600, 1600, 40, 1]>, none) -> (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, none)
CHECK:          %R3, %B1252C3 = "conv.normal"(%R1, %R0, %R0.0x200, %C0.0, %D322C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x256x40x40xf16, strides: [6400, 1600, 40, 1]>, memref<63x256x1x1xf16>, memref<1x63x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x63x40x40xf16, strides: [1600, 1600, 40, 1]>, none)
CHECK:          %L30.0x6980226000, %D323C3 = "dma.tensor"(%R3, %B1252C3) : (memref<1x63x40x40xf16, strides: [1600, 1600, 40, 1]>, none) -> (memref<1x63x40x40xf16, strides: [408000, 1600, 40, 1]>, none)
CHECK:          %B1253C3, %msg49 = "system.send_msg"(%D323C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D324C3, %msg49 = "dma.sys.sys_send"(%B1253C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D312C4, %msg49 = "@core_4"(%D310C4, %msg48) {
CHECK:          %B1249C4 = "system.wait_msg"(%D310C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D311C4 = "dma.sys.sys_wait"(%B1249C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1250C4, %msg49 = "system.send_msg"(%D311C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D312C4, %msg49 = "dma.sys.sys_send"(%B1250C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D312C5, %msg49 = "@core_5"(%D310C5, %msg48) {
CHECK:          %B1249C5 = "system.wait_msg"(%D310C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D311C5 = "dma.sys.sys_wait"(%B1249C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1250C5, %msg49 = "system.send_msg"(%D311C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D312C5, %msg49 = "dma.sys.sys_send"(%B1250C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D302C6, %msg49 = "@core_6"(%D300C6, %msg48) {
CHECK:          %B1173C6 = "system.wait_msg"(%D300C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C6 = "dma.sys.sys_wait"(%B1173C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1174C6, %msg49 = "system.send_msg"(%D301C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D302C6, %msg49 = "dma.sys.sys_send"(%B1174C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D290C7, %msg49 = "@core_7"(%D288C7, %msg48) {
CHECK:          %B1100C7 = "system.wait_msg"(%D288C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D289C7 = "dma.sys.sys_wait"(%B1100C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1101C7, %msg49 = "system.send_msg"(%D289C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D290C7, %msg49 = "dma.sys.sys_send"(%B1101C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D332C0, %msg48 = "@core_0"(%D328C0, %msg49) {
CHECK:          %B1258C0 = "system.wait_msg"(%D328C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D329C0 = "dma.sys.sys_wait"(%B1258C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D330C0 = "dma.tensor"(%L30.0x6980190000, %B1258C0) : (memref<255x64x25x1xf16, strides: [1600, 25, 1, 1]>, none) -> (memref<255x64x25x1xf16, strides: [25, 25, 1, 1]>, none)
CHECK:          %R8, %B1259C0 = "arith.copy"(%R0, %D330C0) {round_mode = 0}: (memref<3x64x25x85xf16, strides: [2125, 25, 1, 25]>, none) -> (memref<3x64x25x85xf16, strides: [2125, 2125, 85, 1]>, none)
CHECK:          %L30.0x6980000000, %D331C0 = "dma.tensor"(%R8, %B1259C0) : (memref<3x64x25x85xf16, strides: [2125, 2125, 85, 1]>, none) -> (memref<3x64x25x85xf16, strides: [136000, 2125, 85, 1]>, none)
CHECK:          %B1260C0, %msg48 = "system.send_msg"(%D331C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D332C0, %msg48 = "dma.sys.sys_send"(%B1260C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D326C1, %msg48 = "@core_1"(%D324C1, %msg49) {
CHECK:          %B1254C1 = "system.wait_msg"(%D324C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D325C1 = "dma.sys.sys_wait"(%B1254C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1255C1, %msg48 = "system.send_msg"(%D325C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D326C1, %msg48 = "dma.sys.sys_send"(%B1255C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D326C2, %msg48 = "@core_2"(%D324C2, %msg49) {
CHECK:          %B1254C2 = "system.wait_msg"(%D324C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D325C2 = "dma.sys.sys_wait"(%B1254C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1255C2, %msg48 = "system.send_msg"(%D325C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D326C2, %msg48 = "dma.sys.sys_send"(%B1255C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D326C3, %msg48 = "@core_3"(%D324C3, %msg49) {
CHECK:          %B1254C3 = "system.wait_msg"(%D324C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D325C3 = "dma.sys.sys_wait"(%B1254C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1255C3, %msg48 = "system.send_msg"(%D325C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D326C3, %msg48 = "dma.sys.sys_send"(%B1255C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D314C4, %msg48 = "@core_4"(%D312C4, %msg49) {
CHECK:          %B1251C4 = "system.wait_msg"(%D312C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D313C4 = "dma.sys.sys_wait"(%B1251C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1252C4, %msg48 = "system.send_msg"(%D313C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D314C4, %msg48 = "dma.sys.sys_send"(%B1252C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D314C5, %msg48 = "@core_5"(%D312C5, %msg49) {
CHECK:          %B1251C5 = "system.wait_msg"(%D312C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D313C5 = "dma.sys.sys_wait"(%B1251C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1252C5, %msg48 = "system.send_msg"(%D313C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D314C5, %msg48 = "dma.sys.sys_send"(%B1252C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D304C6, %msg48 = "@core_6"(%D302C6, %msg49) {
CHECK:          %B1175C6 = "system.wait_msg"(%D302C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D303C6 = "dma.sys.sys_wait"(%B1175C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1176C6, %msg48 = "system.send_msg"(%D303C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D304C6, %msg48 = "dma.sys.sys_send"(%B1176C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D292C7, %msg48 = "@core_7"(%D290C7, %msg49) {
CHECK:          %B1102C7 = "system.wait_msg"(%D290C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D291C7 = "dma.sys.sys_wait"(%B1102C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1103C7, %msg48 = "system.send_msg"(%D291C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D292C7, %msg48 = "dma.sys.sys_send"(%B1103C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D338C0, %msg49 = "@core_0"(%D332C0, %msg48) {
CHECK:          %B1261C0 = "system.wait_msg"(%D332C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D333C0 = "dma.sys.sys_wait"(%B1261C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D334C0 = "dma.matrix"(%L30.0x6980000000, %B1261C0) : (memref<1x1x2x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<2x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1262C0 = "arith.cast"(%R0, %D334C0) {round_mode = 1}: (memref<2x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<2x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D335C0 = "dma.matrix"(%L30.0x6980020000, %B1261C0) : (memref<1x1x1x2464xf16, strides: [0, 0, 2464, 1]>, none) -> (memref<1x2464xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1263C0 = "arith.cast"(%R4, %D335C0) {round_mode = 1}: (memref<1x5x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x5x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xaea000, %D336C0 = "dma.matrix"(%R8, %B1262C0) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xb2a000, %D337C0 = "dma.matrix"(%R12, %B1263C0) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1264C0, %msg49 = "system.send_msg"(%D337C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D338C0, %msg49 = "dma.sys.sys_send"(%B1264C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D332C1, %msg49 = "@core_1"(%D326C1, %msg48) {
CHECK:          %B1256C1 = "system.wait_msg"(%D326C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D327C1 = "dma.sys.sys_wait"(%B1256C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D328C1 = "dma.matrix"(%L30.0x6980021340, %B1256C1) : (memref<1x1x2x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<2x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1257C1 = "arith.cast"(%R0, %D328C1) {round_mode = 1}: (memref<2x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<2x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D329C1 = "dma.matrix"(%L30.0x6980041340, %B1256C1) : (memref<1x1x1x2464xf16, strides: [0, 0, 2464, 1]>, none) -> (memref<1x2464xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1258C1 = "arith.cast"(%R4, %D329C1) {round_mode = 1}: (memref<1x5x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x5x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xb2c680, %D330C1 = "dma.matrix"(%R8, %B1257C1) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xb6c680, %D331C1 = "dma.matrix"(%R12, %B1258C1) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1259C1, %msg49 = "system.send_msg"(%D331C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D332C1, %msg49 = "dma.sys.sys_send"(%B1259C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D332C2, %msg49 = "@core_2"(%D326C2, %msg48) {
CHECK:          %B1256C2 = "system.wait_msg"(%D326C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D327C2 = "dma.sys.sys_wait"(%B1256C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D328C2 = "dma.matrix"(%L30.0x6980042680, %B1256C2) : (memref<1x1x2x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<2x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1257C2 = "arith.cast"(%R0, %D328C2) {round_mode = 1}: (memref<2x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<2x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D329C2 = "dma.matrix"(%L30.0x6980062680, %B1256C2) : (memref<1x1x1x2464xf16, strides: [0, 0, 2464, 1]>, none) -> (memref<1x2464xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1258C2 = "arith.cast"(%R4, %D329C2) {round_mode = 1}: (memref<1x5x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x5x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xb6ed00, %D330C2 = "dma.matrix"(%R8, %B1257C2) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xbaed00, %D331C2 = "dma.matrix"(%R12, %B1258C2) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1259C2, %msg49 = "system.send_msg"(%D331C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D332C2, %msg49 = "dma.sys.sys_send"(%B1259C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D332C3, %msg49 = "@core_3"(%D326C3, %msg48) {
CHECK:          %B1256C3 = "system.wait_msg"(%D326C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D327C3 = "dma.sys.sys_wait"(%B1256C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D328C3 = "dma.matrix"(%L30.0x69800639c0, %B1256C3) : (memref<1x1x2x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<2x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1257C3 = "arith.cast"(%R0, %D328C3) {round_mode = 1}: (memref<2x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<2x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D329C3 = "dma.matrix"(%L30.0x69800839c0, %B1256C3) : (memref<1x1x1x2464xf16, strides: [0, 0, 2464, 1]>, none) -> (memref<1x2464xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1258C3 = "arith.cast"(%R4, %D329C3) {round_mode = 1}: (memref<1x5x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x5x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xbb1380, %D330C3 = "dma.matrix"(%R8, %B1257C3) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xbf1380, %D331C3 = "dma.matrix"(%R12, %B1258C3) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1259C3, %msg49 = "system.send_msg"(%D331C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D332C3, %msg49 = "dma.sys.sys_send"(%B1259C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D320C4, %msg49 = "@core_4"(%D314C4, %msg48) {
CHECK:          %B1253C4 = "system.wait_msg"(%D314C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D315C4 = "dma.sys.sys_wait"(%B1253C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D316C4 = "dma.matrix"(%L30.0x6980084d00, %B1253C4) : (memref<1x1x2x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<2x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1254C4 = "arith.cast"(%R0, %D316C4) {round_mode = 1}: (memref<2x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<2x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D317C4 = "dma.matrix"(%L30.0x69800a4d00, %B1253C4) : (memref<1x1x1x2464xf16, strides: [0, 0, 2464, 1]>, none) -> (memref<1x2464xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1255C4 = "arith.cast"(%R4, %D317C4) {round_mode = 1}: (memref<1x5x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x5x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xbf3a00, %D318C4 = "dma.matrix"(%R8, %B1254C4) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xc33a00, %D319C4 = "dma.matrix"(%R12, %B1255C4) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1256C4, %msg49 = "system.send_msg"(%D319C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D320C4, %msg49 = "dma.sys.sys_send"(%B1256C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D320C5, %msg49 = "@core_5"(%D314C5, %msg48) {
CHECK:          %B1253C5 = "system.wait_msg"(%D314C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D315C5 = "dma.sys.sys_wait"(%B1253C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D316C5 = "dma.matrix"(%L30.0x69800a6040, %B1253C5) : (memref<1x1x2x32768xf16, strides: [0, 0, 32768, 1]>, none) -> (memref<2x32768xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R8, %B1254C5 = "arith.cast"(%R0, %D316C5) {round_mode = 1}: (memref<2x64x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<2x64x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %R4, %D317C5 = "dma.matrix"(%L30.0x69800c6040, %B1253C5) : (memref<1x1x1x2464xf16, strides: [0, 0, 2464, 1]>, none) -> (memref<1x2464xf16, strides: [512, 512, 0, 1]>, none)
CHECK:          %R12, %B1255C5 = "arith.cast"(%R4, %D317C5) {round_mode = 1}: (memref<1x5x1x512xf16, strides: [512, 512, 512, 1]>, none) -> (memref<1x5x1x512xf32, strides: [512, 512, 512, 1]>, none)
CHECK:          %G2.0xc36080, %D318C5 = "dma.matrix"(%R8, %B1254C5) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %G2.0xc76080, %D319C5 = "dma.matrix"(%R12, %B1255C5) : (memref<1x1x1x512xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x512xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1256C5, %msg49 = "system.send_msg"(%D319C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D320C5, %msg49 = "dma.sys.sys_send"(%B1256C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D306C6, %msg49 = "@core_6"(%D304C6, %msg48) {
CHECK:          %B1177C6 = "system.wait_msg"(%D304C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D305C6 = "dma.sys.sys_wait"(%B1177C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1178C6, %msg49 = "system.send_msg"(%D305C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D306C6, %msg49 = "dma.sys.sys_send"(%B1178C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D294C7, %msg49 = "@core_7"(%D292C7, %msg48) {
CHECK:          %B1104C7 = "system.wait_msg"(%D292C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D293C7 = "dma.sys.sys_wait"(%B1104C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1105C7, %msg49 = "system.send_msg"(%D293C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D294C7, %msg49 = "dma.sys.sys_send"(%B1105C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D340C0, %msg48 = "@core_0"(%D338C0, %msg49) {
CHECK:          %B1265C0 = "system.wait_msg"(%D338C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D339C0 = "dma.sys.sys_wait"(%B1265C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1266C0, %msg48 = "system.send_msg"(%D339C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D340C0, %msg48 = "dma.sys.sys_send"(%B1266C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D334C1, %msg48 = "@core_1"(%D332C1, %msg49) {
CHECK:          %B1260C1 = "system.wait_msg"(%D332C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D333C1 = "dma.sys.sys_wait"(%B1260C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1261C1, %msg48 = "system.send_msg"(%D333C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D334C1, %msg48 = "dma.sys.sys_send"(%B1261C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D334C2, %msg48 = "@core_2"(%D332C2, %msg49) {
CHECK:          %B1260C2 = "system.wait_msg"(%D332C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D333C2 = "dma.sys.sys_wait"(%B1260C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1261C2, %msg48 = "system.send_msg"(%D333C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D334C2, %msg48 = "dma.sys.sys_send"(%B1261C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D334C3, %msg48 = "@core_3"(%D332C3, %msg49) {
CHECK:          %B1260C3 = "system.wait_msg"(%D332C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D333C3 = "dma.sys.sys_wait"(%B1260C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1261C3, %msg48 = "system.send_msg"(%D333C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D334C3, %msg48 = "dma.sys.sys_send"(%B1261C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D322C4, %msg48 = "@core_4"(%D320C4, %msg49) {
CHECK:          %B1257C4 = "system.wait_msg"(%D320C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D321C4 = "dma.sys.sys_wait"(%B1257C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1258C4, %msg48 = "system.send_msg"(%D321C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D322C4, %msg48 = "dma.sys.sys_send"(%B1258C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D322C5, %msg48 = "@core_5"(%D320C5, %msg49) {
CHECK:          %B1257C5 = "system.wait_msg"(%D320C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D321C5 = "dma.sys.sys_wait"(%B1257C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1258C5, %msg48 = "system.send_msg"(%D321C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D322C5, %msg48 = "dma.sys.sys_send"(%B1258C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D308C6, %msg48 = "@core_6"(%D306C6, %msg49) {
CHECK:          %B1179C6 = "system.wait_msg"(%D306C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D307C6 = "dma.sys.sys_wait"(%B1179C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1180C6, %msg48 = "system.send_msg"(%D307C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D308C6, %msg48 = "dma.sys.sys_send"(%B1180C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D296C7, %msg48 = "@core_7"(%D294C7, %msg49) {
CHECK:          %B1106C7 = "system.wait_msg"(%D294C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D295C7 = "dma.sys.sys_wait"(%B1106C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1107C7, %msg48 = "system.send_msg"(%D295C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D296C7, %msg48 = "dma.sys.sys_send"(%B1107C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D346C0, %msg49 = "@core_0"(%D340C0, %msg48) {
CHECK:          %B1267C0 = "system.wait_msg"(%D340C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D341C0 = "dma.sys.sys_wait"(%B1267C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D342C0 = "dma.tensor"(%G1.0xdd1000, %B1267C0) : (memref<1x64x16x32xf16, strides: [130560, 512, 32, 1]>, none) -> (memref<1x64x16x32xf16, strides: [512, 512, 32, 1]>, none)
CHECK:          %R0.0x400, %D343C0 = "dma.tensor"(%G1.0xdd0000, %B1267C0) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D344C0 = "dma.tensor"(%L30.0x6980a1f000, %B1267C0) : (memref<1x512x20x20xf16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, none)
CHECK:          %R3, %B1268C0 = "conv.normal"(%R1, %R0, %R0.0x400, %C0.0, %D344C0) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, memref<64x512x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980064000, %D345C0 = "dma.tensor"(%R3, %B1268C0) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102000, 400, 20, 1]>, none)
CHECK:          %B1269C0, %msg49 = "system.send_msg"(%D345C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D346C0, %msg49 = "dma.sys.sys_send"(%B1269C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D340C1, %msg49 = "@core_1"(%D334C1, %msg48) {
CHECK:          %B1262C1 = "system.wait_msg"(%D334C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D335C1 = "dma.sys.sys_wait"(%B1262C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D336C1 = "dma.tensor"(%G1.0xde1000, %B1262C1) : (memref<1x64x16x32xf16, strides: [130560, 512, 32, 1]>, none) -> (memref<1x64x16x32xf16, strides: [512, 512, 32, 1]>, none)
CHECK:          %R0.0x400, %D337C1 = "dma.tensor"(%G1.0xdd0100, %B1262C1) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D338C1 = "dma.tensor"(%L30.0x6980a1f000, %B1262C1) : (memref<1x512x20x20xf16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, none)
CHECK:          %R3, %B1263C1 = "conv.normal"(%R1, %R0, %R0.0x400, %C0.0, %D338C1) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, memref<64x512x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980070800, %D339C1 = "dma.tensor"(%R3, %B1263C1) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102000, 400, 20, 1]>, none)
CHECK:          %B1264C1, %msg49 = "system.send_msg"(%D339C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D340C1, %msg49 = "dma.sys.sys_send"(%B1264C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D340C2, %msg49 = "@core_2"(%D334C2, %msg48) {
CHECK:          %B1262C2 = "system.wait_msg"(%D334C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D335C2 = "dma.sys.sys_wait"(%B1262C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D336C2 = "dma.tensor"(%G1.0xdf1000, %B1262C2) : (memref<1x64x16x32xf16, strides: [130560, 512, 32, 1]>, none) -> (memref<1x64x16x32xf16, strides: [512, 512, 32, 1]>, none)
CHECK:          %R0.0x400, %D337C2 = "dma.tensor"(%G1.0xdd0200, %B1262C2) : (memref<1x64x1x1xf32, strides: [64, 1, 1, 1]>, none) -> (memref<1x64x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D338C2 = "dma.tensor"(%L30.0x6980a1f000, %B1262C2) : (memref<1x512x20x20xf16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, none)
CHECK:          %R3, %B1263C2 = "conv.normal"(%R1, %R0, %R0.0x400, %C0.0, %D338C2) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, memref<64x512x1x1xf16>, memref<1x64x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x698007d000, %D339C2 = "dma.tensor"(%R3, %B1263C2) : (memref<1x64x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x64x20x20xf16, strides: [102000, 400, 20, 1]>, none)
CHECK:          %B1264C2, %msg49 = "system.send_msg"(%D339C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D340C2, %msg49 = "dma.sys.sys_send"(%B1264C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D340C3, %msg49 = "@core_3"(%D334C3, %msg48) {
CHECK:          %B1262C3 = "system.wait_msg"(%D334C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D335C3 = "dma.sys.sys_wait"(%B1262C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D336C3 = "dma.tensor"(%G1.0xe01000, %B1262C3) : (memref<1x63x16x32xf16, strides: [130560, 512, 32, 1]>, none) -> (memref<1x63x16x32xf16, strides: [512, 512, 32, 1]>, none)
CHECK:          %R0.0x400, %D337C3 = "dma.tensor"(%G1.0xdd0300, %B1262C3) : (memref<1x63x1x1xf32, strides: [63, 1, 1, 1]>, none) -> (memref<1x63x1x1xf32, strides: [1, 1, 1, 1]>, none)
CHECK:          %R1, %D338C3 = "dma.tensor"(%L30.0x6980a1f000, %B1262C3) : (memref<1x512x20x20xf16, strides: [204800, 400, 20, 1]>, none) -> (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, none)
CHECK:          %R3, %B1263C3 = "conv.normal"(%R1, %R0, %R0.0x400, %C0.0, %D338C3) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], opt_kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], opt_res_add = False, do_relu = False, sym_range = False, do_rq = False, round_mode = 0}: (memref<1x512x20x20xf16, strides: [3328, 416, 20, 1]>, memref<63x512x1x1xf16>, memref<1x63x1x1xui32, strides: [1, 1, 1, 1]>, f16, none) -> (memref<1x63x20x20xf16, strides: [416, 416, 20, 1]>, none)
CHECK:          %L30.0x6980089800, %D339C3 = "dma.tensor"(%R3, %B1263C3) : (memref<1x63x20x20xf16, strides: [416, 416, 20, 1]>, none) -> (memref<1x63x20x20xf16, strides: [102000, 400, 20, 1]>, none)
CHECK:          %B1264C3, %msg49 = "system.send_msg"(%D339C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D340C3, %msg49 = "dma.sys.sys_send"(%B1264C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D324C4, %msg49 = "@core_4"(%D322C4, %msg48) {
CHECK:          %B1259C4 = "system.wait_msg"(%D322C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D323C4 = "dma.sys.sys_wait"(%B1259C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1260C4, %msg49 = "system.send_msg"(%D323C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D324C4, %msg49 = "dma.sys.sys_send"(%B1260C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D324C5, %msg49 = "@core_5"(%D322C5, %msg48) {
CHECK:          %B1259C5 = "system.wait_msg"(%D322C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D323C5 = "dma.sys.sys_wait"(%B1259C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1260C5, %msg49 = "system.send_msg"(%D323C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D324C5, %msg49 = "dma.sys.sys_send"(%B1260C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D310C6, %msg49 = "@core_6"(%D308C6, %msg48) {
CHECK:          %B1181C6 = "system.wait_msg"(%D308C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D309C6 = "dma.sys.sys_wait"(%B1181C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1182C6, %msg49 = "system.send_msg"(%D309C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D310C6, %msg49 = "dma.sys.sys_send"(%B1182C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D298C7, %msg49 = "@core_7"(%D296C7, %msg48) {
CHECK:          %B1108C7 = "system.wait_msg"(%D296C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D297C7 = "dma.sys.sys_wait"(%B1108C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1109C7, %msg49 = "system.send_msg"(%D297C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D298C7, %msg49 = "dma.sys.sys_send"(%B1109C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D350C0, %msg48 = "@core_0"(%D346C0, %msg49) {
CHECK:          %B1270C0 = "system.wait_msg"(%D346C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D347C0 = "dma.sys.sys_wait"(%B1270C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D348C0 = "dma.tensor"(%L30.0x6980064000, %B1270C0) : (memref<255x50x8x1xf16, strides: [400, 8, 1, 1]>, none) -> (memref<255x50x8x1xf16, strides: [8, 8, 1, 1]>, none)
CHECK:          %R8, %B1271C0 = "arith.copy"(%R0, %D348C0) {round_mode = 0}: (memref<3x50x8x85xf16, strides: [680, 8, 1, 8]>, none) -> (memref<3x50x8x85xf16, strides: [680, 680, 85, 1]>, none)
CHECK:          %L30.0x6980000000, %D349C0 = "dma.tensor"(%R8, %B1271C0) : (memref<3x50x8x85xf16, strides: [680, 680, 85, 1]>, none) -> (memref<3x50x8x85xf16, strides: [34000, 680, 85, 1]>, none)
CHECK:          %B1272C0, %msg48 = "system.send_msg"(%D349C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D350C0, %msg48 = "dma.sys.sys_send"(%B1272C0) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D342C1, %msg48 = "@core_1"(%D340C1, %msg49) {
CHECK:          %B1265C1 = "system.wait_msg"(%D340C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D341C1 = "dma.sys.sys_wait"(%B1265C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1266C1, %msg48 = "system.send_msg"(%D341C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D342C1, %msg48 = "dma.sys.sys_send"(%B1266C1) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D342C2, %msg48 = "@core_2"(%D340C2, %msg49) {
CHECK:          %B1265C2 = "system.wait_msg"(%D340C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D341C2 = "dma.sys.sys_wait"(%B1265C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1266C2, %msg48 = "system.send_msg"(%D341C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D342C2, %msg48 = "dma.sys.sys_send"(%B1266C2) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D342C3, %msg48 = "@core_3"(%D340C3, %msg49) {
CHECK:          %B1265C3 = "system.wait_msg"(%D340C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D341C3 = "dma.sys.sys_wait"(%B1265C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1266C3, %msg48 = "system.send_msg"(%D341C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D342C3, %msg48 = "dma.sys.sys_send"(%B1266C3) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D326C4, %msg48 = "@core_4"(%D324C4, %msg49) {
CHECK:          %B1261C4 = "system.wait_msg"(%D324C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D325C4 = "dma.sys.sys_wait"(%B1261C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1262C4, %msg48 = "system.send_msg"(%D325C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D326C4, %msg48 = "dma.sys.sys_send"(%B1262C4) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D326C5, %msg48 = "@core_5"(%D324C5, %msg49) {
CHECK:          %B1261C5 = "system.wait_msg"(%D324C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D325C5 = "dma.sys.sys_wait"(%B1261C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1262C5, %msg48 = "system.send_msg"(%D325C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D326C5, %msg48 = "dma.sys.sys_send"(%B1262C5) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D312C6, %msg48 = "@core_6"(%D310C6, %msg49) {
CHECK:          %B1183C6 = "system.wait_msg"(%D310C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D311C6 = "dma.sys.sys_wait"(%B1183C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1184C6, %msg48 = "system.send_msg"(%D311C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D312C6, %msg48 = "dma.sys.sys_send"(%B1184C6) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D300C7, %msg48 = "@core_7"(%D298C7, %msg49) {
CHECK:          %B1110C7 = "system.wait_msg"(%D298C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D299C7 = "dma.sys.sys_wait"(%B1110C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1111C7, %msg48 = "system.send_msg"(%D299C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:          %D300C7, %msg48 = "dma.sys.sys_send"(%B1111C7) {msg_id = 48, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D354C0, %msg49 = "@core_0"(%D350C0, %msg48) {
CHECK:          %B1273C0 = "system.wait_msg"(%D350C0, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D351C0 = "dma.sys.sys_wait"(%B1273C0, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D352C0 = "dma.matrix"(%L30.0x6980000000, %B1273C0) : (memref<1x1x1x17000xf16, strides: [0, 0, 17000, 1]>, none) -> (memref<1x17000xf16, strides: [288, 288, 0, 1]>, none)
CHECK:          %R8, %B1274C0 = "arith.cast"(%R0, %D352C0) {round_mode = 1}: (memref<1x64x1x266xf16, strides: [288, 288, 266, 1]>, none) -> (memref<1x64x1x266xf32, strides: [272, 272, 266, 1]>, none)
CHECK:          %G2.0xc79000, %D353C0 = "dma.matrix"(%R8, %B1274C0) : (memref<1x1x1x266xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x266xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1275C0, %msg49 = "system.send_msg"(%D353C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D354C0, %msg49 = "dma.sys.sys_send"(%B1275C0) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D346C1, %msg49 = "@core_1"(%D342C1, %msg48) {
CHECK:          %B1267C1 = "system.wait_msg"(%D342C1, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D343C1 = "dma.sys.sys_wait"(%B1267C1, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D344C1 = "dma.matrix"(%L30.0x69800084d0, %B1267C1) : (memref<1x1x1x17000xf16, strides: [0, 0, 17000, 1]>, none) -> (memref<1x17000xf16, strides: [288, 288, 0, 1]>, none)
CHECK:          %R8, %B1268C1 = "arith.cast"(%R0, %D344C1) {round_mode = 1}: (memref<1x64x1x266xf16, strides: [288, 288, 266, 1]>, none) -> (memref<1x64x1x266xf32, strides: [272, 272, 266, 1]>, none)
CHECK:          %G2.0xc899a0, %D345C1 = "dma.matrix"(%R8, %B1268C1) : (memref<1x1x1x266xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x266xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1269C1, %msg49 = "system.send_msg"(%D345C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D346C1, %msg49 = "dma.sys.sys_send"(%B1269C1) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D346C2, %msg49 = "@core_2"(%D342C2, %msg48) {
CHECK:          %B1267C2 = "system.wait_msg"(%D342C2, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D343C2 = "dma.sys.sys_wait"(%B1267C2, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D344C2 = "dma.matrix"(%L30.0x69800109a0, %B1267C2) : (memref<1x1x1x17000xf16, strides: [0, 0, 17000, 1]>, none) -> (memref<1x17000xf16, strides: [288, 288, 0, 1]>, none)
CHECK:          %R8, %B1268C2 = "arith.cast"(%R0, %D344C2) {round_mode = 1}: (memref<1x64x1x266xf16, strides: [288, 288, 266, 1]>, none) -> (memref<1x64x1x266xf32, strides: [272, 272, 266, 1]>, none)
CHECK:          %G2.0xc9a340, %D345C2 = "dma.matrix"(%R8, %B1268C2) : (memref<1x1x1x266xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x266xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1269C2, %msg49 = "system.send_msg"(%D345C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D346C2, %msg49 = "dma.sys.sys_send"(%B1269C2) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D346C3, %msg49 = "@core_3"(%D342C3, %msg48) {
CHECK:          %B1267C3 = "system.wait_msg"(%D342C3, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D343C3 = "dma.sys.sys_wait"(%B1267C3, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D344C3 = "dma.matrix"(%L30.0x6980018e70, %B1267C3) : (memref<1x1x1x17000xf16, strides: [0, 0, 17000, 1]>, none) -> (memref<1x17000xf16, strides: [288, 288, 0, 1]>, none)
CHECK:          %R8, %B1268C3 = "arith.cast"(%R0, %D344C3) {round_mode = 1}: (memref<1x64x1x266xf16, strides: [288, 288, 266, 1]>, none) -> (memref<1x64x1x266xf32, strides: [272, 272, 266, 1]>, none)
CHECK:          %G2.0xcaace0, %D345C3 = "dma.matrix"(%R8, %B1268C3) : (memref<1x1x1x266xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x266xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1269C3, %msg49 = "system.send_msg"(%D345C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D346C3, %msg49 = "dma.sys.sys_send"(%B1269C3) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D330C4, %msg49 = "@core_4"(%D326C4, %msg48) {
CHECK:          %B1263C4 = "system.wait_msg"(%D326C4, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D327C4 = "dma.sys.sys_wait"(%B1263C4, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D328C4 = "dma.matrix"(%L30.0x6980021340, %B1263C4) : (memref<1x1x1x17000xf16, strides: [0, 0, 17000, 1]>, none) -> (memref<1x17000xf16, strides: [288, 288, 0, 1]>, none)
CHECK:          %R8, %B1264C4 = "arith.cast"(%R0, %D328C4) {round_mode = 1}: (memref<1x64x1x266xf16, strides: [288, 288, 266, 1]>, none) -> (memref<1x64x1x266xf32, strides: [272, 272, 266, 1]>, none)
CHECK:          %G2.0xcbb680, %D329C4 = "dma.matrix"(%R8, %B1264C4) : (memref<1x1x1x266xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x266xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1265C4, %msg49 = "system.send_msg"(%D329C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D330C4, %msg49 = "dma.sys.sys_send"(%B1265C4) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D330C5, %msg49 = "@core_5"(%D326C5, %msg48) {
CHECK:          %B1263C5 = "system.wait_msg"(%D326C5, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D327C5 = "dma.sys.sys_wait"(%B1263C5, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %R0, %D328C5 = "dma.matrix"(%L30.0x6980029810, %B1263C5) : (memref<1x1x1x17000xf16, strides: [0, 0, 17000, 1]>, none) -> (memref<1x17000xf16, strides: [288, 288, 0, 1]>, none)
CHECK:          %R8, %B1264C5 = "arith.cast"(%R0, %D328C5) {round_mode = 1}: (memref<1x64x1x266xf16, strides: [288, 288, 266, 1]>, none) -> (memref<1x64x1x266xf32, strides: [272, 272, 266, 1]>, none)
CHECK:          %G2.0xccc020, %D329C5 = "dma.matrix"(%R8, %B1264C5) : (memref<1x1x1x266xf32, strides: [0, 0, 0, 1]>, none) -> (memref<1x266xf32, strides: [0, 0, 0, 1]>, none)
CHECK:          %B1265C5, %msg49 = "system.send_msg"(%D329C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D330C5, %msg49 = "dma.sys.sys_send"(%B1265C5) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D314C6, %msg49 = "@core_6"(%D312C6, %msg48) {
CHECK:          %B1185C6 = "system.wait_msg"(%D312C6, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D313C6 = "dma.sys.sys_wait"(%B1185C6, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1186C6, %msg49 = "system.send_msg"(%D313C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D314C6, %msg49 = "dma.sys.sys_send"(%B1186C6) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D302C7, %msg49 = "@core_7"(%D300C7, %msg48) {
CHECK:          %B1112C7 = "system.wait_msg"(%D300C7, %msg48) {msg_id = 48, cnt = 32, status = Status.RECIEVING}
CHECK:          %D301C7 = "dma.sys.sys_wait"(%B1112C7, %msg48) {msg_id = 48, cnt = 32, status = Status.CONSUMED}
CHECK:          %B1113C7, %msg49 = "system.send_msg"(%D301C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:          %D302C7, %msg49 = "dma.sys.sys_send"(%B1113C7) {msg_id = 49, cnt = 32, status = Status.PRODUCING}
CHECK:        }
CHECK:        %D355C0 = "@core_0"(%D354C0, %msg49) {
CHECK:          %B1276C0 = "system.wait_msg"(%D354C0, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D355C0 = "dma.sys.sys_wait"(%B1276C0, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D347C1 = "@core_1"(%D346C1, %msg49) {
CHECK:          %B1270C1 = "system.wait_msg"(%D346C1, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D347C1 = "dma.sys.sys_wait"(%B1270C1, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D347C2 = "@core_2"(%D346C2, %msg49) {
CHECK:          %B1270C2 = "system.wait_msg"(%D346C2, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D347C2 = "dma.sys.sys_wait"(%B1270C2, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D347C3 = "@core_3"(%D346C3, %msg49) {
CHECK:          %B1270C3 = "system.wait_msg"(%D346C3, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D347C3 = "dma.sys.sys_wait"(%B1270C3, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D331C4 = "@core_4"(%D330C4, %msg49) {
CHECK:          %B1266C4 = "system.wait_msg"(%D330C4, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D331C4 = "dma.sys.sys_wait"(%B1266C4, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D331C5 = "@core_5"(%D330C5, %msg49) {
CHECK:          %B1266C5 = "system.wait_msg"(%D330C5, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D331C5 = "dma.sys.sys_wait"(%B1266C5, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D315C6 = "@core_6"(%D314C6, %msg49) {
CHECK:          %B1187C6 = "system.wait_msg"(%D314C6, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D315C6 = "dma.sys.sys_wait"(%B1187C6, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        %D303C7 = "@core_7"(%D302C7, %msg49) {
CHECK:          %B1114C7 = "system.wait_msg"(%D302C7, %msg49) {msg_id = 49, cnt = 32, status = Status.RECIEVING}
CHECK:          %D303C7 = "dma.sys.sys_wait"(%B1114C7, %msg49) {msg_id = 49, cnt = 32, status = Status.CONSUMED}
CHECK:        }
CHECK:        return %G2.0x4b0000, %G2.0xaea000, %G2.0xc79000: memref<1x3x80x80x85xf32, strides: [1632000, 544000, 6800, 85, 1]>, memref<1x3x40x40x85xf32, strides: [408000, 136000, 3400, 85, 1]>, memref<1x3x20x20x85xf32, strides: [102000, 34000, 1700, 85, 1]>
CHECK:    }) {function_type = {arg_attrs = ["images"], res_attrs = ["350_Transpose_f32", "498_Transpose_f32", "646_Transpose_f32"]}}
CHECK:  } loc(#loc)
